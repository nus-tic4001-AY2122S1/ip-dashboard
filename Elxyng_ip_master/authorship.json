[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"### Adds a todo/event/deadline task","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"Adds a todo/event/deadline task to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"### Marks a todo/event/deadline task(s) as done","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"Marks a todo/event/deadline task(s) as done to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"### Deletes todo/event/deadline task(s)","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"Deletes todo/event/deadline task(s) to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"### Lists all tasks","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"Lists all the tasks in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"### Finds todo/event/deadline task(s) using task type and date range","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"Finds todo/event/deadline task(s) using task type and date range in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"### Saves all tasks","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"Saves all the tasks in the current tasklist to Duke.txt file","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"### Exit programme","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"Exit Duke","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"### `todo \u003cdescription\u003e` - Adds a todo task","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"Adds a todo task to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"`todo report`","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"  [T][ ] report","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":" Now you have \u003cnumberOfTasks\u003e tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"### `event \u003cdescription\u003e /at \u003cdate\u003e` - Adds an event task with date","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"Adds an event task with date to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"`event wedding /at 2 aug 2021`","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"  [E][ ] wedding (at: 02 Aug 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":" Now you have \u003cnumberOfTasks\u003e tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"### `event \u003cdescription\u003e` - Adds an event task without date","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"Adds an event task without date to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"`event exhibition`","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"  [E][ ] exhibition (at: Date not specified)","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":" Now you have \u003cnumberOfTasks\u003e tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"### `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Adds a deadline task with date","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"Elxyng"},"content":"Adds a deadline task with date to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"Elxyng"},"content":"`deadline assignment /by 12 sep 2021`","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"Elxyng"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"Elxyng"},"content":"  [D][ ] assignment (by: 12 Sep 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"Elxyng"},"content":" Now you have \u003cnumberOfTasks\u003e tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"Elxyng"},"content":"### `deadline \u003cdescription\u003e` - Adds a deadline task without date","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"Elxyng"},"content":"Adds a deadline task without date to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"Elxyng"},"content":"`deadline bills`","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"Elxyng"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"Elxyng"},"content":"      [D][ ] bills (by: Date not specified)","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"Elxyng"},"content":"     Now you have \u003cnumberOfTasks\u003e tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"Elxyng"},"content":"### `done \u003cindex\u003e` - Marks a todo/event/deadline task(s) as done","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"Elxyng"},"content":"Marks a todo/event/deadline task(s) as done to the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"Elxyng"},"content":"`done 1,2`","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"Elxyng"},"content":" Nice! I\u0027ve marked this task(s) as done:","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"Elxyng"},"content":"  [T][X] report","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"Elxyng"},"content":"  [E][X] wedding (at: 02 Aug 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"Elxyng"},"content":"### `delete \u003cindex\u003e` - Deletes todo/event/deadline task(s)","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"Elxyng"},"content":"Deletes todo/event/deadline task(s) in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"Elxyng"},"content":"`delete 1,2`","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"Elxyng"},"content":" Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"Elxyng"},"content":"  [T][X] report","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"Elxyng"},"content":"  [E][X] wedding (at: 02 Aug 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"Elxyng"},"content":" Now you have \u003cnumberOfTasks\u003e tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"Elxyng"},"content":"### `list` - Lists all task(s)","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"Elxyng"},"content":"Lists all task(s) in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"Elxyng"},"content":"`list`","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"Elxyng"},"content":" Here are the tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"Elxyng"},"content":" 1. [D][ ] assignment (by: 12 Sep 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"Elxyng"},"content":" 2. [D][ ] presentation (by: 01 Dec 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"Elxyng"},"content":" 3. [T][ ] fetch mum","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"Elxyng"},"content":" 4. [E][ ] meeting (at: 08 Jun 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"Elxyng"},"content":" 5. [E][ ] workshop (at: 17 Jul 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"Elxyng"},"content":" 6. [D][ ] bills (by: Date not specified)","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"Elxyng"},"content":" 7. [E][ ] exhibition (at: Date not specified)","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"Elxyng"},"content":"### `find all \u003ctasks\u003e` - Finds all todo/event/deadline task(s)","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"Elxyng"},"content":"Finds todo/event/deadline task(s) in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"Elxyng"},"content":"`find all event`","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":194,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"Elxyng"},"content":" Here are the tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"Elxyng"},"content":" 1. [E][ ] meeting (at: 08 Jun 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"Elxyng"},"content":" 2. [E][ ] workshop (at: 17 Jul 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"Elxyng"},"content":" 3. [E][ ] exhibition (at: Date not specified)","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"Elxyng"},"content":"### `find \u003ctasks\u003e on \u003cdate\u003e` - Finds todo/event/deadline task(s) based on date ","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"Elxyng"},"content":"Finds todo/event/deadline task(s) based on date in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":211,"author":{"gitId":"Elxyng"},"content":"`find event on 8 jun 2021`","lastModifiedDate":"2021-09-25"},{"lineNumber":212,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":215,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":216,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":217,"author":{"gitId":"Elxyng"},"content":" Here are the tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":218,"author":{"gitId":"Elxyng"},"content":" 1. [E][ ] meeting (at: 08 Jun 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":219,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":220,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":222,"author":{"gitId":"Elxyng"},"content":"### `find \u003ctasks\u003e from \u003cdate\u003e` - Finds todo/event/deadline task(s) based on from date ","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":224,"author":{"gitId":"Elxyng"},"content":"Finds todo/event/deadline task(s) based on from date in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":225,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":226,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":227,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"Elxyng"},"content":"`find event from 1 jul 2021`","lastModifiedDate":"2021-09-25"},{"lineNumber":229,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":230,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":231,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":232,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":233,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":234,"author":{"gitId":"Elxyng"},"content":" Here are the tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"Elxyng"},"content":" 1. [E][ ] workshop (at: 17 Jul 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":236,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":237,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":238,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":239,"author":{"gitId":"Elxyng"},"content":"### `find \u003ctasks\u003e between \u003cdate\u003e to \u003cdate\u003e` - Finds todo/event/deadline task(s) based on date range","lastModifiedDate":"2021-09-25"},{"lineNumber":240,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":241,"author":{"gitId":"Elxyng"},"content":"Finds todo/event/deadline task(s) based on date range in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":245,"author":{"gitId":"Elxyng"},"content":"`find event between 1 apr 2021 to 20 jun 2021`","lastModifiedDate":"2021-09-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":249,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":250,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":251,"author":{"gitId":"Elxyng"},"content":" Here are the tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":252,"author":{"gitId":"Elxyng"},"content":" 1. [E][ ] meeting (at: 08 Jun 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":253,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":254,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":255,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":256,"author":{"gitId":"Elxyng"},"content":"### `save` - Saves all task(s)","lastModifiedDate":"2021-09-25"},{"lineNumber":257,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":258,"author":{"gitId":"Elxyng"},"content":"Saves all task(s) in the current tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":259,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":260,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":261,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":262,"author":{"gitId":"Elxyng"},"content":"`save`","lastModifiedDate":"2021-09-25"},{"lineNumber":263,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":264,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":265,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":266,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":267,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":268,"author":{"gitId":"Elxyng"},"content":" Tasks saved!","lastModifiedDate":"2021-09-25"},{"lineNumber":269,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":270,"author":{"gitId":"Elxyng"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":271,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":272,"author":{"gitId":"Elxyng"},"content":"### `bye` - Exit programme","lastModifiedDate":"2021-09-25"},{"lineNumber":273,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":274,"author":{"gitId":"Elxyng"},"content":"Exit Duke","lastModifiedDate":"2021-09-25"},{"lineNumber":275,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":276,"author":{"gitId":"Elxyng"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":277,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":278,"author":{"gitId":"Elxyng"},"content":"`bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":279,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":280,"author":{"gitId":"Elxyng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":282,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":283,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":284,"author":{"gitId":"Elxyng"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-25"},{"lineNumber":285,"author":{"gitId":"Elxyng"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Elxyng":266,"-":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"import command.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.*;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    private UI ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"            tasks \u003d new TaskList(storage);","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"        } catch ( IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"    public void run() {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"        ui.printDuke();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"                ui.printLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"            } catch (FileNotFoundException | ParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"            } finally {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"                ui.printLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Elxyng":44,"-":4}},{"path":"src/main/java/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class AddDeadlineCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"    String userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    public AddDeadlineCommand(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"        tasks.deadline(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":18}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class AddEventCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"    String userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    public AddEventCommand(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"        tasks.event(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":18}},{"path":"src/main/java/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class AddTodoCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"    String userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    public AddTodoCommand(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"        tasks.todo(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":18}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"    protected boolean bExit \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"        return bExit;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws FileNotFoundException, ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":18}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"    String userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"        tasks.deleteTask(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":18}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"    String userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    public DoneCommand(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"        tasks.markedAsDone(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":18}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"     * Writes to savefile, then prints goodbye message on console, finally flags for console to exit.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"        ui.bye();","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        bExit \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":20}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    String userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        tasks.searchDate(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":20}},{"path":"src/main/java/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"    String userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    public InvalidCommand(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"        tasks.processInvalidTask(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":18}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"        tasks.list();","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":14}},{"path":"src/main/java/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"public class SaveCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws FileNotFoundException {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"        tasks.save(storage);","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":15}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Elxyng":4}},{"path":"src/main/java/exceptions/EmptyDeadlineDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"public class EmptyDeadlineDescriptionException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Elxyng":4}},{"path":"src/main/java/exceptions/EmptyEventDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"public class EmptyEventDescriptionException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Elxyng":4}},{"path":"src/main/java/exceptions/EmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"public class EmptyException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Elxyng":4}},{"path":"src/main/java/exceptions/EmptyToDoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"public class EmptyToDoDescriptionException extends DukeException{","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Elxyng":4}},{"path":"src/main/java/exceptions/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"public class IndexOutOfRangeException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Elxyng":4}},{"path":"src/main/java/exceptions/ListEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"public class ListEmptyException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Elxyng":4}},{"path":"src/main/java/exceptions/StringFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"public class StringFormatException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Elxyng":4}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import command.*;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"public class Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"        Command parsedCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"        String[] theStrInputArr \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"        String firstKeyWord \u003d theStrInputArr[0].toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"        switch (firstKeyWord) {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new ExitCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"            case \"list\":","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new ListCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"            case \"save\":","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new SaveCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"            case \"done\":","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new DoneCommand(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new DeleteCommand(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"            case \"find\":","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new FindCommand(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"            case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new AddEventCommand(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new AddDeadlineCommand(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new AddTodoCommand(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"            default:","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"                parsedCommand \u003d new InvalidCommand(userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"        return parsedCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":53}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import tasklist.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import tasklist.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import tasklist.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"import tasklist.ToDo;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"import java.io.File;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"public class Storage {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    private String filePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        this.filePath \u003d \"/\" + filePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"     * Writes tasks to file","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"     * @param fileContent the tasks stored in the file","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"     * @throws FileNotFoundException if file can\u0027t be found","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"    public void writeToFile(String fileContent) throws FileNotFoundException {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"        PrintWriter pw \u003d new PrintWriter(f);","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"        pw.println(fileContent);","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"        pw.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"     * Loads tasks from file","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"     * @throws IOException if file can\u0027t be found","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"     * @param tasks the TaskList object","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"    public void loadFile(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"        String[] storeFilePathArray \u003d filePath.split(\"/\");","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"        File directory \u003d new File(\"/\" + storeFilePathArray[0]);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"        if (! directory.exists()){","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"            directory.mkdir();","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"            f.createNewFile();","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"            loadFormat(tasks, sc.nextLine());","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"     * Adds tasks to taskList from file","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"     * @param fileContent the tasks stored in the file","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"    void loadFormat(TaskList tasks, String fileContent) {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"        System.out.println(fileContent);","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"        Task t;","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"        String[] storeArray \u003d fileContent.split(\" \\\\| \");","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"        switch (storeArray[0]) {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"        case \"T\":","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"            t \u003d new ToDo(storeArray[2], isDone(Integer.parseInt(storeArray[1])));","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"        case \"D\":","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"                t\u003d new Deadline(storeArray[2], isDone(Integer.parseInt(storeArray[1])),storeArray[3]);","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"                t\u003d new Deadline(storeArray[2], isDone(Integer.parseInt(storeArray[1])));","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"            ","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"        case \"E\":","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"                t \u003d new Event(storeArray[2], isDone(Integer.parseInt(storeArray[1])),storeArray[3]);","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"                t \u003d new Event(storeArray[2], isDone(Integer.parseInt(storeArray[1])));","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + storeArray[0]);","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"        tasks.add(t);","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Elxyng"},"content":"     * Returns the boolean status of task","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Elxyng"},"content":"     * @param value the status of task stored in the file","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"     * @return boolean status of task","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"Elxyng"},"content":"     Boolean isDone (Integer value) {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"Elxyng"},"content":"        return value \u003d\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":102}},{"path":"src/main/java/tasklist/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package tasklist;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"    protected String time;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"     * @param time the task time that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"     * @param status check if the task has already marked as done","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"    public Deadline(String description, Boolean status) {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"        super(description, status);","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"     * @param status check if the task has already marked as done","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"     * @param time the task time that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"    public Deadline(String description, Boolean status, String time) {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"        super(description, status);","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"        return(\"[D]\" + super.toString() + \" (by: \" + this.time + \")\");","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"    public String saveFormat() {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"        return (\"D \" + super.saveFormat() + \" | \" + this.time);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"     * @param dateSearch the date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"    public boolean findDate(Date dateSearch, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"        if (this.time.equals(\"Date not specified\")){","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"            Date date \u003d dateFormat.parse(this.time);","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"            return dateSearch.compareTo(date) \u003d\u003d 0 \u0026\u0026 taskType(taskType);","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"     * @param dateSearch the date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"    public boolean findFromDateRange(Date dateSearch, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"        if (this.time.equals(\"Date not specified\")){","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"            Date date \u003d dateFormat.parse(this.time);","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"            return (dateSearch.compareTo(date) \u003d\u003d 0 \u0026\u0026 taskType(taskType))","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"                    || (dateSearch.compareTo(date) \u003c 0 \u0026\u0026 taskType(taskType));","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"     * @param fromDate the start date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"     * @param endDate the end date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"Elxyng"},"content":"    public boolean findBetweenDateRange(Date fromDate, Date endDate, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"Elxyng"},"content":"        if (this.time.equals(\"Date not specified\")){","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"Elxyng"},"content":"            Date date \u003d dateFormat.parse(this.time);","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"Elxyng"},"content":"            if (fromDate.compareTo(date) \u003d\u003d 0 \u0026\u0026 taskType(taskType)","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"Elxyng"},"content":"                    || endDate.compareTo(date) \u003d\u003d 0 \u0026\u0026 taskType(taskType)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"Elxyng"},"content":"                return true;","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"Elxyng"},"content":"            }else if (fromDate.compareTo(date) \u003c 0 \u0026\u0026 endDate.compareTo(date) \u003e 0 ","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"Elxyng"},"content":"                    \u0026\u0026 taskType(taskType)){","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"Elxyng"},"content":"                return true;","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"Elxyng"},"content":"            else {","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"Elxyng"},"content":"                return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"Elxyng"},"content":"    public boolean taskType(String taskType){","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"Elxyng"},"content":"        return taskType.equals(\"deadline\");","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Elxyng":121}},{"path":"src/main/java/tasklist/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package tasklist;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"    protected String time;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"     * @param time the task time that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"     * @param status check if the task has already marked as done","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"    public Event(String description, Boolean status) {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"        super(description,status);","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"     * @param status check if the task has already marked as done","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"     * @param time the task time that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"    public Event(String description,Boolean status, String time) {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"        super(description,status);","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"        return(\"[E]\" + super.toString() + \" (at: \" + this.time + \")\");","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"    public String saveFormat() {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"        return (\"E \" + super.saveFormat() + \" | \" + this.time);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"     * @param dateSearch the date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"    public boolean findDate(Date dateSearch, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"        if (this.time.equals(\"Date not specified\")){","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"            Date date \u003d dateFormat.parse(this.time);","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"            return dateSearch.compareTo(date) \u003d\u003d 0 \u0026\u0026 taskType(taskType);","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"     * @param dateSearch the date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"    public boolean findFromDateRange(Date dateSearch, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"        if (this.time.equals(\"Date not specified\")){","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"            Date date \u003d dateFormat.parse(this.time);","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"            return (dateSearch.compareTo(date) \u003d\u003d 0 \u0026\u0026 taskType(taskType))","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"                    || (dateSearch.compareTo(date) \u003c 0 \u0026\u0026 taskType(taskType));","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"     * @param fromDate the start date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"     * @param endDate the end date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"Elxyng"},"content":"    public boolean findBetweenDateRange(Date fromDate, Date endDate, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"Elxyng"},"content":"        if (this.time.equals(\"Date not specified\")){","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"Elxyng"},"content":"            Date date \u003d dateFormat.parse(this.time);","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"Elxyng"},"content":"            if (fromDate.compareTo(date) \u003d\u003d 0 \u0026\u0026 taskType(taskType)","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"Elxyng"},"content":"                    || endDate.compareTo(date) \u003d\u003d 0 \u0026\u0026 taskType(taskType)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"Elxyng"},"content":"                return true;","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"Elxyng"},"content":"            }else if (fromDate.compareTo(date) \u003c 0 \u0026\u0026 endDate.compareTo(date) \u003e 0 ","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"Elxyng"},"content":"                    \u0026\u0026 taskType(taskType)){","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"Elxyng"},"content":"                return true;","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"Elxyng"},"content":"            else {","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"Elxyng"},"content":"                return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"Elxyng"},"content":"    public boolean taskType(String taskType){","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"Elxyng"},"content":"        return taskType.equals(\"event\");","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Elxyng":121}},{"path":"src/main/java/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package tasklist;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"    protected String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"     * @param status check if the task has already marked as done","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"    public void markAsDone(){","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"        getStatusIcon();","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"        return(\"[\" + this.getStatusIcon() + \"] \" + description);","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"    public String saveFormat(){","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"        if (this.isDone){","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"            return (\"| 1 | \" + this.description);","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"        else {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"            return (\"| 0 | \" + this.description);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"     * @param dateSearch the date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"    public boolean findDate(Date dateSearch, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"     * @param dateSearch the date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"    public boolean findFromDateRange(Date dateSearch, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"     * @param fromDate the start date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"     * @param endDate the end date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"    public boolean findBetweenDateRange(Date fromDate, Date endDate, String taskType) throws ParseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"    public boolean taskType(String taskType){","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"        return taskType.equals(\"task\");","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Elxyng":90}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package tasklist;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import exceptions.*;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import ui.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"public class TaskList {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    public TaskList(Storage s) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"        s.loadFile(this);","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"        taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"    public boolean add(Task t) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"        return taskList.add(t);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"    public void printOutput(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%sHere are the tasks in your list:\",5);","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"            UI.addSpaces(\"%s\" + (i + 1) + \". \" + taskList.get(i).toString(),5);","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"     * Outputs all the tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"    public void list() {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"            checkListEmpty(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"            printOutput(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"        } catch (ListEmptyException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"            UI.printListEmpty();","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"     * Formats and save tasks to file","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"     * @throws FileNotFoundException if file can\u0027t be found","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"    public void save(Storage s) throws FileNotFoundException {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"            checkListEmpty(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"                list +\u003d taskList.get(i).saveFormat() + \"\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"            s.writeToFile(list);","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"            UI.printTaskSaved();","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"        }catch  (ListEmptyException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"            UI.printListEmpty();","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"     * Marks multiple tasks as done","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"     * @param line the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"    public void markedAsDone(String line) {","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"            checkListEmpty(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"            String theStrIndex \u003d line.substring(5);","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"            String[] theStrIndexArr \u003d theStrIndex.split(\",\");","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"            int[] intArr \u003d new int[theStrIndexArr.length];","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"            for (int i \u003d 0; i \u003c theStrIndexArr.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"                String num \u003d theStrIndexArr[i];","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"                intArr[i] \u003d Integer.parseInt(num);","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"                checkIndexOutOfRange(taskList.size(), intArr[i]);","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"            UI.printMarkedAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"            for (int i \u003d 0; i \u003c intArr.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"                Task t \u003d taskList.get(intArr[i] - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"                t.markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"                UI.addSpaces(\"%s\" + t.toString(),6);","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Elxyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Elxyng"},"content":"            UI.printNumberFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Elxyng"},"content":"        catch (IndexOutOfRangeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"            UI.printIndexOutOfRangeException();","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"Elxyng"},"content":"        catch  (ListEmptyException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"Elxyng"},"content":"            UI.printListEmpty();","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"Elxyng"},"content":"     * Deletes tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"Elxyng"},"content":"     * @param line the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"Elxyng"},"content":"    public void deleteTask(String line) {","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"Elxyng"},"content":"            checkListEmpty(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"Elxyng"},"content":"            String theStrIndex \u003d line.substring(7);","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"Elxyng"},"content":"            String[] theStrIndexArr \u003d theStrIndex.split(\",\");","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"Elxyng"},"content":"            int[] intArr \u003d new int[theStrIndexArr.length];","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"Elxyng"},"content":"            for (int i \u003d 0; i \u003c theStrIndexArr.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"Elxyng"},"content":"                String num \u003d theStrIndexArr[i];","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"Elxyng"},"content":"                intArr[i] \u003d Integer.parseInt(num);","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"Elxyng"},"content":"                checkIndexOutOfRange(taskList.size(), intArr[i]);","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"Elxyng"},"content":"            UI.printRemoveTask();","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"Elxyng"},"content":"            for (int i \u003d 0; i \u003c intArr.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"Elxyng"},"content":"                Task t \u003d taskList.get(intArr[i]-(i+1));","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"Elxyng"},"content":"                UI.addSpaces(\"%s\" + t.toString(),6);","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"Elxyng"},"content":"                taskList.remove(intArr[i]-(i+1));","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"Elxyng"},"content":"            UI.printNumberOfTasks(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"Elxyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"Elxyng"},"content":"            UI.printNumberFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"Elxyng"},"content":"        } catch (IndexOutOfRangeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"Elxyng"},"content":"            UI.printIndexOutOfRangeException();","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"Elxyng"},"content":"        } catch  (ListEmptyException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"Elxyng"},"content":"            UI.printListEmpty();","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"Elxyng"},"content":"     * Searches date by task type using \"on\", \"from\", \"between to\"","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"Elxyng"},"content":"     * @param line the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"Elxyng"},"content":"     * @throws ParseException if date format is not dd MMM yyyy","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"Elxyng"},"content":"    public void searchDate(String line) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"Elxyng"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"Elxyng"},"content":"        String[] str;","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"Elxyng"},"content":"            checkListEmpty(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"Elxyng"},"content":"            checkInvalidWordSearch(line);","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"Elxyng"},"content":"            //e.g find EVENT on 12 oct 2019","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"Elxyng"},"content":"            if (line.contains(\"on\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"Elxyng"},"content":"                str \u003d line.split(\" on \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"Elxyng"},"content":"                SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"Elxyng"},"content":"                //Format string \"12 oct 2019\" to date","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"Elxyng"},"content":"                Date date \u003d dateFormat.parse(str[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"Elxyng"},"content":"                //Get task type e.g event","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"Elxyng"},"content":"                String taskType \u003d str[0].substring(5).toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"Elxyng"},"content":"                //Loop taskList to check conditions for findDate","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"Elxyng"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"Elxyng"},"content":"                    if (taskList.get(i).findDate(date, taskType)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"Elxyng"},"content":"                        foundTasks.add(taskList.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"Elxyng"},"content":"                    }","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"Elxyng"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"Elxyng"},"content":"            //e.g find EVENT from 12 oct 2019","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"Elxyng"},"content":"            if (line.contains(\"from\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"Elxyng"},"content":"                str \u003d line.split(\" from \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"Elxyng"},"content":"                SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"Elxyng"},"content":"                //Format string \"12 oct 2019\" to date","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"Elxyng"},"content":"                Date date \u003d dateFormat.parse(str[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"Elxyng"},"content":"                String taskType \u003d str[0].substring(5).toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"Elxyng"},"content":"                //Loop taskList to check conditions for findFromDateRange","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"Elxyng"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"Elxyng"},"content":"                    if (taskList.get(i).findFromDateRange(date, taskType)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"Elxyng"},"content":"                        foundTasks.add(taskList.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"Elxyng"},"content":"                    }","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"Elxyng"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"Elxyng"},"content":"            //e.g find EVENT between 12 oct 2019 to 16 oct 2019","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"Elxyng"},"content":"            if (line.contains(\"between\") \u0026\u0026 line.contains(\"to\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"Elxyng"},"content":"                str \u003d line.split(\" between \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"Elxyng"},"content":"                //From: dateRange[0], To: dateRange[1]","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"Elxyng"},"content":"                String[] dateRange \u003d str[1].split(\" to \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"Elxyng"},"content":"                SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"Elxyng"},"content":"                //Format string \"12 oct 2019\" to date","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"Elxyng"},"content":"                Date date1 \u003d dateFormat.parse(dateRange[0]);","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"Elxyng"},"content":"                Date date2 \u003d dateFormat.parse(dateRange[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"Elxyng"},"content":"                String taskType \u003d str[0].substring(5).toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"Elxyng"},"content":"                //Loop taskList to check conditions for findBetweenDateRange","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"Elxyng"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"Elxyng"},"content":"                    if (taskList.get(i).findBetweenDateRange(date1, date2, taskType)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"Elxyng"},"content":"                        foundTasks.add(taskList.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"Elxyng"},"content":"                    }","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"Elxyng"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"Elxyng"},"content":"            //e.g find all EVENTS","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"Elxyng"},"content":"            if (line.contains(\"all\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"Elxyng"},"content":"                str \u003d line.split(\" \", 3);","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"Elxyng"},"content":"                //e.g \"events\"","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"Elxyng"},"content":"                String type \u003d str[2].toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"Elxyng"},"content":"                //Loop taskList to check conditions for taskType","lastModifiedDate":"2021-09-19"},{"lineNumber":212,"author":{"gitId":"Elxyng"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":213,"author":{"gitId":"Elxyng"},"content":"                    if (taskList.get(i).taskType(type)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":214,"author":{"gitId":"Elxyng"},"content":"                        foundTasks.add(taskList.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"Elxyng"},"content":"                    }","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"Elxyng"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":217,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"Elxyng"},"content":"            UI.printOutput((foundTasks));","lastModifiedDate":"2021-09-19"},{"lineNumber":219,"author":{"gitId":"Elxyng"},"content":"        } catch (StringFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":220,"author":{"gitId":"Elxyng"},"content":"            UI.printStringFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"Elxyng"},"content":"        } catch (ListEmptyException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"Elxyng"},"content":"            UI.printListEmpty();","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"Elxyng"},"content":"     * Adds new event tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"Elxyng"},"content":"     * @param line the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"Elxyng"},"content":"    public void event(String line) {","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"Elxyng"},"content":"            checkEmptyEventDescription(line.trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"Elxyng"},"content":"            //e.g event dinner /at 12 oct 2019","lastModifiedDate":"2021-09-19"},{"lineNumber":236,"author":{"gitId":"Elxyng"},"content":"            if (line.contains(\"/at\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"Elxyng"},"content":"                //str[1] to get date - 12 oct 2019","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"Elxyng"},"content":"                String[] str \u003d line.split(\" /at \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"Elxyng"},"content":"                //description[1] to get description - dinner","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"Elxyng"},"content":"                String[] taskDescription \u003d str[0].split(\" \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"Elxyng"},"content":"                SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"Elxyng"},"content":"                //Format date 12 Oct 2019, to string \"12 Oct 2019\"","lastModifiedDate":"2021-09-19"},{"lineNumber":243,"author":{"gitId":"Elxyng"},"content":"                Date date \u003d dateFormat.parse(str[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":244,"author":{"gitId":"Elxyng"},"content":"                String strDate \u003d dateFormat.format(date);","lastModifiedDate":"2021-09-19"},{"lineNumber":245,"author":{"gitId":"Elxyng"},"content":"                Task t \u003d new Event(taskDescription[1], strDate);","lastModifiedDate":"2021-09-19"},{"lineNumber":246,"author":{"gitId":"Elxyng"},"content":"                taskList.add(t);","lastModifiedDate":"2021-09-19"},{"lineNumber":247,"author":{"gitId":"Elxyng"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":248,"author":{"gitId":"Elxyng"},"content":"                //e.g event dinner","lastModifiedDate":"2021-09-19"},{"lineNumber":249,"author":{"gitId":"Elxyng"},"content":"                String taskDescription \u003d line.substring(6);","lastModifiedDate":"2021-09-19"},{"lineNumber":250,"author":{"gitId":"Elxyng"},"content":"                Task t \u003d new Event(taskDescription, \"Date not specified\");","lastModifiedDate":"2021-09-19"},{"lineNumber":251,"author":{"gitId":"Elxyng"},"content":"                taskList.add(t);","lastModifiedDate":"2021-09-19"},{"lineNumber":252,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":253,"author":{"gitId":"Elxyng"},"content":"            UI.printTask(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":254,"author":{"gitId":"Elxyng"},"content":"        } catch (EmptyEventDescriptionException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":255,"author":{"gitId":"Elxyng"},"content":"            UI.printEmptyEventDescriptionException();","lastModifiedDate":"2021-09-19"},{"lineNumber":256,"author":{"gitId":"Elxyng"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":257,"author":{"gitId":"Elxyng"},"content":"            UI.printParseException();","lastModifiedDate":"2021-09-19"},{"lineNumber":258,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":259,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":260,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":261,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":262,"author":{"gitId":"Elxyng"},"content":"     * Adds new deadline tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":263,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":264,"author":{"gitId":"Elxyng"},"content":"     * @param line the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":265,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":266,"author":{"gitId":"Elxyng"},"content":"    public void deadline(String line) {","lastModifiedDate":"2021-09-19"},{"lineNumber":267,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":268,"author":{"gitId":"Elxyng"},"content":"            checkEmptyDeadlineDescription(line.trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":269,"author":{"gitId":"Elxyng"},"content":"            if (line.contains(\"/by\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":270,"author":{"gitId":"Elxyng"},"content":"                //str[1] to get date - 12 oct 2019","lastModifiedDate":"2021-09-19"},{"lineNumber":271,"author":{"gitId":"Elxyng"},"content":"                String[] str \u003d line.split(\" /by \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":272,"author":{"gitId":"Elxyng"},"content":"                //description[1] to get description - duke","lastModifiedDate":"2021-09-19"},{"lineNumber":273,"author":{"gitId":"Elxyng"},"content":"                String[] taskDescription \u003d str[0].split(\" \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":274,"author":{"gitId":"Elxyng"},"content":"                SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":275,"author":{"gitId":"Elxyng"},"content":"                //Format date 12 Oct 2019, to string \"12 Oct 2019\"","lastModifiedDate":"2021-09-19"},{"lineNumber":276,"author":{"gitId":"Elxyng"},"content":"                Date date \u003d dateFormat.parse(str[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":277,"author":{"gitId":"Elxyng"},"content":"                String strDate \u003d dateFormat.format(date);","lastModifiedDate":"2021-09-19"},{"lineNumber":278,"author":{"gitId":"Elxyng"},"content":"                Task t \u003d new Deadline(taskDescription[1], strDate);","lastModifiedDate":"2021-09-19"},{"lineNumber":279,"author":{"gitId":"Elxyng"},"content":"                taskList.add(t);","lastModifiedDate":"2021-09-19"},{"lineNumber":280,"author":{"gitId":"Elxyng"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":281,"author":{"gitId":"Elxyng"},"content":"                //e.g deadline duke","lastModifiedDate":"2021-09-19"},{"lineNumber":282,"author":{"gitId":"Elxyng"},"content":"                String taskDescription \u003d line.substring(9);","lastModifiedDate":"2021-09-19"},{"lineNumber":283,"author":{"gitId":"Elxyng"},"content":"                Task t \u003d new Deadline(taskDescription, \"Date not specified\");","lastModifiedDate":"2021-09-19"},{"lineNumber":284,"author":{"gitId":"Elxyng"},"content":"                taskList.add(t);","lastModifiedDate":"2021-09-19"},{"lineNumber":285,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":286,"author":{"gitId":"Elxyng"},"content":"            UI.printTask(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":287,"author":{"gitId":"Elxyng"},"content":"        } catch (EmptyDeadlineDescriptionException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":288,"author":{"gitId":"Elxyng"},"content":"            UI.printEmptyDeadlineDescriptionException();","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"Elxyng"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"Elxyng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-19"},{"lineNumber":291,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":293,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":294,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":295,"author":{"gitId":"Elxyng"},"content":"     * Adds new tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":296,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":297,"author":{"gitId":"Elxyng"},"content":"     * @param line the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":298,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"Elxyng"},"content":"    public void todo(String line) {","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"Elxyng"},"content":"            checkEmptyToDoDescription(line.trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":302,"author":{"gitId":"Elxyng"},"content":"            String taskDescription \u003d line.substring(5);","lastModifiedDate":"2021-09-19"},{"lineNumber":303,"author":{"gitId":"Elxyng"},"content":"            Task t \u003d new ToDo(taskDescription);","lastModifiedDate":"2021-09-19"},{"lineNumber":304,"author":{"gitId":"Elxyng"},"content":"            taskList.add(t);","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"Elxyng"},"content":"            UI.printTask(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":306,"author":{"gitId":"Elxyng"},"content":"        } catch (EmptyToDoDescriptionException e){","lastModifiedDate":"2021-09-19"},{"lineNumber":307,"author":{"gitId":"Elxyng"},"content":"            UI.printEmptyToDoDescriptionException();","lastModifiedDate":"2021-09-19"},{"lineNumber":308,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":310,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":312,"author":{"gitId":"Elxyng"},"content":"     * Users input invalid command","lastModifiedDate":"2021-09-19"},{"lineNumber":313,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":314,"author":{"gitId":"Elxyng"},"content":"     * @param line the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":315,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":316,"author":{"gitId":"Elxyng"},"content":"    public void processInvalidTask(String line) {","lastModifiedDate":"2021-09-19"},{"lineNumber":317,"author":{"gitId":"Elxyng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":318,"author":{"gitId":"Elxyng"},"content":"            checkEmpty(line);","lastModifiedDate":"2021-09-19"},{"lineNumber":319,"author":{"gitId":"Elxyng"},"content":"            checkInvalidWord(line);","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"Elxyng"},"content":"        } catch (EmptyException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":321,"author":{"gitId":"Elxyng"},"content":"            UI.printEmptyException();","lastModifiedDate":"2021-09-19"},{"lineNumber":322,"author":{"gitId":"Elxyng"},"content":"        } catch (StringFormatException e){","lastModifiedDate":"2021-09-19"},{"lineNumber":323,"author":{"gitId":"Elxyng"},"content":"            UI.printStringFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":324,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":325,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":326,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":327,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":328,"author":{"gitId":"Elxyng"},"content":"     * Checks user input out of range","lastModifiedDate":"2021-09-19"},{"lineNumber":329,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":330,"author":{"gitId":"Elxyng"},"content":"     * @param size the size of the taskList","lastModifiedDate":"2021-09-19"},{"lineNumber":331,"author":{"gitId":"Elxyng"},"content":"     * @param number the task number that the user input","lastModifiedDate":"2021-09-19"},{"lineNumber":332,"author":{"gitId":"Elxyng"},"content":"     * @throws IndexOutOfRangeException if the number is greater than the size of the taskList","lastModifiedDate":"2021-09-19"},{"lineNumber":333,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":334,"author":{"gitId":"Elxyng"},"content":"    static void checkIndexOutOfRange(int size,  int number) throws IndexOutOfRangeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":335,"author":{"gitId":"Elxyng"},"content":"        if (number \u003e size || number \u003c 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":336,"author":{"gitId":"Elxyng"},"content":"            throw new IndexOutOfRangeException();","lastModifiedDate":"2021-09-19"},{"lineNumber":337,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":338,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":339,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":340,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":341,"author":{"gitId":"Elxyng"},"content":"     * Checks list is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":342,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":343,"author":{"gitId":"Elxyng"},"content":"     * @param taskList taskList arr that stores all tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":344,"author":{"gitId":"Elxyng"},"content":"     * @throws ListEmptyException if list is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":345,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":346,"author":{"gitId":"Elxyng"},"content":"    static void checkListEmpty( ArrayList\u003cTask\u003e taskList) throws ListEmptyException {","lastModifiedDate":"2021-09-19"},{"lineNumber":347,"author":{"gitId":"Elxyng"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":348,"author":{"gitId":"Elxyng"},"content":"            throw new ListEmptyException ();","lastModifiedDate":"2021-09-19"},{"lineNumber":349,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":350,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":351,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":352,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":353,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":354,"author":{"gitId":"Elxyng"},"content":"     * @param description the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":355,"author":{"gitId":"Elxyng"},"content":"     * @throws StringFormatException if description does not hit the if conditions","lastModifiedDate":"2021-09-19"},{"lineNumber":356,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":357,"author":{"gitId":"Elxyng"},"content":"    static void checkInvalidWordSearch(String description) throws StringFormatException {","lastModifiedDate":"2021-09-19"},{"lineNumber":358,"author":{"gitId":"Elxyng"},"content":"        if ( ! (description.contains(\"on\") || description.contains(\"from\") || description.contains(\"all\") || (description.contains(\"between\") \u0026\u0026 description.contains(\"to\")) )) {","lastModifiedDate":"2021-09-19"},{"lineNumber":359,"author":{"gitId":"Elxyng"},"content":"            throw new StringFormatException ();","lastModifiedDate":"2021-09-19"},{"lineNumber":360,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":361,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":362,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":363,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":364,"author":{"gitId":"Elxyng"},"content":"     * Checks user input empty event task description","lastModifiedDate":"2021-09-19"},{"lineNumber":365,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":366,"author":{"gitId":"Elxyng"},"content":"     * @param description the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":367,"author":{"gitId":"Elxyng"},"content":"     * @throws EmptyEventDescriptionException if description does not hit the if condition","lastModifiedDate":"2021-09-19"},{"lineNumber":368,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":369,"author":{"gitId":"Elxyng"},"content":"    static void checkEmptyEventDescription (String description) throws EmptyEventDescriptionException {","lastModifiedDate":"2021-09-19"},{"lineNumber":370,"author":{"gitId":"Elxyng"},"content":"        if (description.equals(\"event\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":371,"author":{"gitId":"Elxyng"},"content":"            throw new EmptyEventDescriptionException();","lastModifiedDate":"2021-09-19"},{"lineNumber":372,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":373,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":374,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":375,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":376,"author":{"gitId":"Elxyng"},"content":"     * Checks user input empty deadline description","lastModifiedDate":"2021-09-19"},{"lineNumber":377,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":378,"author":{"gitId":"Elxyng"},"content":"     * @param description the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":379,"author":{"gitId":"Elxyng"},"content":"     * @throws EmptyDeadlineDescriptionException if description does not hit the if condition","lastModifiedDate":"2021-09-19"},{"lineNumber":380,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":381,"author":{"gitId":"Elxyng"},"content":"    static void checkEmptyDeadlineDescription (String description) throws EmptyDeadlineDescriptionException {","lastModifiedDate":"2021-09-19"},{"lineNumber":382,"author":{"gitId":"Elxyng"},"content":"        if (description.equals(\"deadline\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":383,"author":{"gitId":"Elxyng"},"content":"            throw new EmptyDeadlineDescriptionException();","lastModifiedDate":"2021-09-19"},{"lineNumber":384,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":385,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":386,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":387,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":388,"author":{"gitId":"Elxyng"},"content":"     * Checks user input empty task description","lastModifiedDate":"2021-09-19"},{"lineNumber":389,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":390,"author":{"gitId":"Elxyng"},"content":"     * @param description the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":391,"author":{"gitId":"Elxyng"},"content":"     * @throws EmptyToDoDescriptionException if description does not hit the if condition","lastModifiedDate":"2021-09-19"},{"lineNumber":392,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":393,"author":{"gitId":"Elxyng"},"content":"    static void checkEmptyToDoDescription (String description) throws EmptyToDoDescriptionException {","lastModifiedDate":"2021-09-19"},{"lineNumber":394,"author":{"gitId":"Elxyng"},"content":"        if (description.equals(\"todo\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":395,"author":{"gitId":"Elxyng"},"content":"            throw new EmptyToDoDescriptionException();","lastModifiedDate":"2021-09-19"},{"lineNumber":396,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":397,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":398,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":399,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":400,"author":{"gitId":"Elxyng"},"content":"     * Checks user input is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":401,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":402,"author":{"gitId":"Elxyng"},"content":"     * @param description the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":403,"author":{"gitId":"Elxyng"},"content":"     * @throws EmptyException if user did not input anything","lastModifiedDate":"2021-09-19"},{"lineNumber":404,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":405,"author":{"gitId":"Elxyng"},"content":"    static void checkEmpty(String description) throws EmptyException {","lastModifiedDate":"2021-09-19"},{"lineNumber":406,"author":{"gitId":"Elxyng"},"content":"        if (description.isEmpty()){","lastModifiedDate":"2021-09-19"},{"lineNumber":407,"author":{"gitId":"Elxyng"},"content":"            throw new EmptyException ();","lastModifiedDate":"2021-09-19"},{"lineNumber":408,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":409,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":410,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":411,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-19"},{"lineNumber":412,"author":{"gitId":"Elxyng"},"content":"     * Checks user input invalid word","lastModifiedDate":"2021-09-19"},{"lineNumber":413,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":414,"author":{"gitId":"Elxyng"},"content":"     * @param description the command that user input","lastModifiedDate":"2021-09-19"},{"lineNumber":415,"author":{"gitId":"Elxyng"},"content":"     * @throws StringFormatException if description does not hit the if conditions","lastModifiedDate":"2021-09-19"},{"lineNumber":416,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":417,"author":{"gitId":"Elxyng"},"content":"    static void checkInvalidWord(String description) throws StringFormatException {","lastModifiedDate":"2021-09-19"},{"lineNumber":418,"author":{"gitId":"Elxyng"},"content":"        if ( !( description.equals(\"bye\") || description.equals(\"list\")","lastModifiedDate":"2021-09-19"},{"lineNumber":419,"author":{"gitId":"Elxyng"},"content":"                || description.equals(\"todo\") || description.equals(\"event\")","lastModifiedDate":"2021-09-19"},{"lineNumber":420,"author":{"gitId":"Elxyng"},"content":"                || description.equals(\"deadline\"))) {","lastModifiedDate":"2021-09-19"},{"lineNumber":421,"author":{"gitId":"Elxyng"},"content":"            throw new StringFormatException ();","lastModifiedDate":"2021-09-19"},{"lineNumber":422,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":423,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":424,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":425,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":426,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":426}},{"path":"src/main/java/tasklist/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package tasklist;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"     * @param description the task description that the user input","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"     * @param status check if the task has already marked as done","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"    public ToDo(String description, Boolean status) {","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"        super(description, status);","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"        return(\"[T]\" + super.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"    public String saveFormat(){","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"        return(\"T \" + super.saveFormat());","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"     * @param dateSearch the date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"    public boolean findDate(Date dateSearch, String taskType) {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"     * @param dateSearch the date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"    public boolean findFromDateRange(Date dateSearch, String taskType) {","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"     * @param fromDate the start date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"     * @param endDate the end date that user input","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"    public boolean findBetweenDateRange(Date fromDate, Date endDate, String taskType) {","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"    /****","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"     * @param taskType the task type of the object","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"    public boolean taskType(String taskType){","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"        return taskType.equals(\"todo\");","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"Elxyng":73}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"public class UI {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"    private Scanner input;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"    public UI() {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"        input \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    public static void printDuke() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"        System.out.print(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"     * Reads user input","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"        return input.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"    public static void bye() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%sBye. Hope to see you again soon!\",5);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"    public static void printLine() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s____________________________________________________________\",4);","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"    public static void printAddedTask(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s\" + taskList.get(taskList.size() - 1).toString(),6);","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"    public static void printTask(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%sGot it. I\u0027ve added this task:\",5);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"        printAddedTask(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"        printNumberOfTasks(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"    public static void printOutput(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%sHere are the tasks in your list:\",5);","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"            UI.addSpaces(\"%s\" + (i + 1) + \". \" + taskList.get(i).toString(),5);","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"    public static void printListEmpty() {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%sList is empty!\",5);","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"    public static void printNumberOfTasks( ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%sNow you have \" + (taskList.size()) + \" tasks in the list.\",5);","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"    public static void printMarkedAsDone() {","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces( \"%sNice! I\u0027ve marked this task(s) as done:\",5);","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"    public static void printRemoveTask() {","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces( \"%sNoted. I\u0027ve removed this task:\",5);","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"    public static void printTaskSaved() {","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%sTasks saved!\",5);","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"    public static void addSpaces(String text, Integer value) {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"        System.out.printf((text) + \"%n\", \" \".repeat(value));","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"    public static void printParseException() {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s☹ OOPS!!! Please enter DD MMM YYYY date format.\",5);","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":"    public static void printEmptyException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s☹ OOPS!!! The description cannot be empty.\",5);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"    public static void printStringFormatException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\",5);","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"Elxyng"},"content":"    public static void printEmptyToDoDescriptionException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s☹ OOPS!!! The description of a todo cannot be empty.\",5);","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"Elxyng"},"content":"    public static void printEmptyEventDescriptionException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s☹ OOPS!!! The description of a event cannot be empty.\",5);","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"Elxyng"},"content":"    public static void printEmptyDeadlineDescriptionException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s☹ OOPS!!! The description of a deadline cannot be empty.\",5);","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"Elxyng"},"content":"    public static void printNumberFormatException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\",5);","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"Elxyng"},"content":"    public static void printIndexOutOfRangeException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"Elxyng"},"content":"        UI.addSpaces(\"%s☹ OOPS!!! Out of Range!\",5);","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Elxyng":112}},{"path":"src/test/java/tasklist/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package tasklist;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.aggregator.ArgumentsAccessor;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"class DeadlineTest {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    void testToString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new Deadline(\"Duke\", \"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"        assertEquals(\"[D][\" + t.getStatusIcon() + \"] Duke (by: 12 oct 2021)\", t.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"    void testSaveFormat() {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new Deadline(\"Duke\", \"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"        assertEquals(\"D | 0 | Duke | 12 oct 2021\", t.saveFormat());","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"            \"Duke, 12 oct 2021\",","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"            \"Duke, Date not specified\"","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"    void testFindDate(ArgumentsAccessor arguments) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"        Deadline t \u003d new Deadline(arguments.getString(0),arguments.getString(1));","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"        Date date \u003d dateFormat.parse(\"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"        if (t.time.equals(\"Date not specified\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.findDate(date, \"deadline\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.findDate(date, \"deadline\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"            \"Duke, 13 oct 2021\",","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"            \"Duke, Date not specified\"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"    void testFindFromDateRange(ArgumentsAccessor arguments) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"        Deadline t \u003d new Deadline(arguments.getString(0),arguments.getString(1));","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"        Date date \u003d dateFormat.parse(\"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"        if (t.time.equals(\"Date not specified\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.findFromDateRange(date, \"deadline\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.findFromDateRange(date, \"deadline\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"            \"Duke, 14 oct 2021\",","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"            \"Duke, Date not specified\"","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"    void testFindBetweenDateRange(ArgumentsAccessor arguments) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"        Deadline t \u003d new Deadline(arguments.getString(0), arguments.getString(1));","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"        Date fromDate \u003d dateFormat.parse(\"11 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"        Date endDate \u003d dateFormat.parse(\"15 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"        if (t.time.equals(\"Date not specified\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.findBetweenDateRange(fromDate, endDate, \"deadline\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.findBetweenDateRange(fromDate, endDate, \"deadline\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":"            \"tasks\",","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"            \"todos\",","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"            \"deadlines\",","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"            \"events\"","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Elxyng"},"content":"    void testTaskType(ArgumentsAccessor arguments) {","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new Deadline(\"Duke\", \"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Elxyng"},"content":"        if (arguments.getString(0).equals(\"deadlines\")){","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.taskType(arguments.getString(0)));","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.taskType(arguments.getString(0)));","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":100}},{"path":"src/test/java/tasklist/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package tasklist;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.aggregator.ArgumentsAccessor;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"class EventTest {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    void testToString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new Event(\"Makeup Class\", \"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"        assertEquals(\"[E][\" + t.getStatusIcon() + \"] Makeup Class (at: 12 oct 2021)\", t.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"    void saveFormat() {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new Event(\"Makeup Class\", \"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"        assertEquals(\"E | 0 | Makeup Class | 12 oct 2021\", t.saveFormat());","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"            \"Class gathering, 12 oct 2021\",","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"            \"Class gathering, Date not specified\"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"    void testFindDate(ArgumentsAccessor arguments) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"        Event t \u003d new Event(arguments.getString(0), arguments.getString(1));","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"        Date date \u003d dateFormat.parse(\"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"        if (t.time.equals(\"Date not specified\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.findDate(date, \"event\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.findDate(date, \"event\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Elxyng"},"content":"            \"Class gathering, 13 oct 2021\",","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Elxyng"},"content":"            \"Class gathering, Date not specified\"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Elxyng"},"content":"    void testFindFromDateRange(ArgumentsAccessor arguments) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Elxyng"},"content":"        Event t \u003d new Event(arguments.getString(0), arguments.getString(1));","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"        Date date \u003d dateFormat.parse(\"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Elxyng"},"content":"        if (t.time.equals(\"Date not specified\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.findFromDateRange(date, \"event\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Elxyng"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.findFromDateRange(date, \"event\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Elxyng"},"content":"            \"Class gathering, 14 oct 2021\",","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Elxyng"},"content":"            \"Class gathering, Date not specified\"","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Elxyng"},"content":"    void testFindBetweenDateRange(ArgumentsAccessor arguments) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Elxyng"},"content":"        Event t \u003d new Event(arguments.getString(0), arguments.getString(1));","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Elxyng"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Elxyng"},"content":"        Date fromDate \u003d dateFormat.parse(\"11 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Elxyng"},"content":"        Date endDate \u003d dateFormat.parse(\"15 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Elxyng"},"content":"        if (t.time.equals(\"Date not specified\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.findBetweenDateRange(fromDate, endDate, \"event\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Elxyng"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.findBetweenDateRange(fromDate, endDate, \"event\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Elxyng"},"content":"            \"tasks\",","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Elxyng"},"content":"            \"todos\",","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Elxyng"},"content":"            \"deadlines\",","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Elxyng"},"content":"            \"events\"","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Elxyng"},"content":"    void testTaskType(ArgumentsAccessor arguments) {","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new Event(\"Class gathering\", \"12 oct 2021\");","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Elxyng"},"content":"        if (arguments.getString(0).equals(\"events\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.taskType(arguments.getString(0)));","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Elxyng"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.taskType(arguments.getString(0)));","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":98}},{"path":"src/test/java/tasklist/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package tasklist;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.aggregator.ArgumentsAccessor;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"class ToDoTest {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"    void testToString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new ToDo(\"Duke\");","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"        assertEquals(\"[T][\" + t.getStatusIcon() + \"] Duke\", t.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"    void saveFormat() {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new ToDo(\"Duke\");","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"        assertEquals(\"T | 0 | Duke\", t.saveFormat());","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Elxyng"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Elxyng"},"content":"    @CsvSource({","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Elxyng"},"content":"            \"tasks\",","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Elxyng"},"content":"            \"todos\",","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Elxyng"},"content":"            \"deadlines\",","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Elxyng"},"content":"            \"events\"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Elxyng"},"content":"    })","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Elxyng"},"content":"    void testTaskType(ArgumentsAccessor arguments) {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Elxyng"},"content":"        Task t \u003d new ToDo(\"Bills\");","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Elxyng"},"content":"        if (arguments.getString(0).equals(\"todos\")){","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"            assertTrue(t.taskType(arguments.getString(0)));","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Elxyng"},"content":"        }else {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Elxyng"},"content":"            assertFalse(t.taskType(arguments.getString(0)));","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Elxyng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Elxyng":42}}]
