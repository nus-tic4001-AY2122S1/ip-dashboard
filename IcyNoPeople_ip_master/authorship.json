[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"1 | T | 0 |  lol","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"2 | T | 0 | lol","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"3 | D | 0 | dead | null","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"4 | T | 0 | dadas","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":4}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"1 | T | 0 | lol","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"2 | D | 0 | lol | 2020-02-02","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":2}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"1 | T | 0 |  hello","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"IcyNoPeople":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Duke class","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"     * @param filePath the filePath of the stored txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"     * this function will run the Duke program","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"    public void run() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"        ui.showDukeWelcome();","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"            } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"     * Main function to start","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"     * @param args","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"IcyNoPeople":58,"-":4}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"    protected String commandInstruction;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs command","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"    public Command(){","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"     *Constructs command","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"     * @param commandInstruction will store the command that the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    public Command(String commandInstruction){","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"        this.commandInstruction \u003d commandInstruction;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"     * Calling the function will execute the function of the individual command","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks The task list will store the task","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"     * @param ui The Ui class which will help to display to the user","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"     * @param storage The Storage which will save the list of task to","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException Any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        throw new DukeException(\"Error for command execute!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"     * This function will be default to false until exit or bye is called.","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"     * @return false to keep it looping for user input","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"IcyNoPeople":45}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Deadlines Command","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDes the Command the User input","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"    public DeadlineCommand(String taskDes){","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"        super(taskDes);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"     * Execute the deadline command by creating the Deadlines task","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks the task list","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"     * @param ui the Ui","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"     * @param storage the Storage","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"            commandInstruction.substring(9);","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"        catch(StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Deadline command can\u0027t be empty\");","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"        if (!commandInstruction.contains(\" /by \")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please state /by yyyy-mm-dd\");","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"        int dividerPosition2 \u003d commandInstruction.indexOf(\" /by \");","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"        String taskDes \u003d commandInstruction.substring(9, dividerPosition2);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"        String taskDateTime \u003d commandInstruction.substring(dividerPosition2 + 5);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"        Deadline deadline \u003d deadlineTimeSetter(taskDes, taskDateTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"     * Checking if the user has input any time and adding it into the class if he has","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDes the task description","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDateTime the task date and time","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the events class","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"    public static Deadline deadlineTimeSetter(String taskDes, String taskDateTime) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"            if (!taskDateTime.contains(\" \")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"                LocalDate d1 \u003d Parser.convertStringToDate(taskDateTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"                return new Deadline(taskDes, d1);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"                int dividerPosition3 \u003d taskDateTime.indexOf(\" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"                String taskDate \u003d taskDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"                String taskTime \u003d taskDateTime.substring(dividerPosition3 + 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"                LocalDate d1 \u003d Parser.convertStringToDate(taskDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"                LocalTime t1 \u003d Parser.convertStringToTime(taskTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"                return new Deadline(taskDes, d1, t1);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"IcyNoPeople"},"content":"        }catch (DateTimeParseException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please set date as YYYY-MM-DD\");","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":75}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":" * Command to delete a task","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the delete command","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"     * @param commandInstruction will store the command that the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"    public DeleteCommand(String commandInstruction){","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"        super(commandInstruction);","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"     * Execute the removal of Task in the task list","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks The task list will store the task","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"     * @param ui The Ui class which will help to display to the user","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"     * @param storage The Storage which will save the list of task to","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException Any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"        if(tasks.getSize() \u003c\u003d 0){","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Empty task list. Nothing to delete\");","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"            commandInstruction.substring(7);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"        catch(StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Delete command can\u0027t be empty\");","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"            int taskIndex \u003d Integer.parseInt(commandInstruction.substring(7))-1;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"            String deletedTask \u003d tasks.getTask(taskIndex).toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"            ui.displayDeleteMsg(deletedTask, tasks.getSize());","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"        catch(NumberFormatException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please key in task number\");","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"        }catch (IndexOutOfBoundsException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please key in task number that is in the list\");","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":54}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Done command","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDes the command the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"    public DoneCommand(String taskDes){","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"        super(taskDes);","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"     * Set the Task isDone boolean to True","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"     * @param ui","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"     * @param storage","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"        if(tasks.getSize() \u003c\u003d 0){","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Empty task list. Nothing to delete\");","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"            commandInstruction.substring(5);","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        catch(StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Done command can\u0027t be empty\");","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"            int taskIndex \u003d Integer.parseInt(commandInstruction.substring(5)) - 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"            Task doneTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"            if(doneTask.getIsDone()){","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"                throw new DukeException(\"Tasks.Task is already done\");","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"            doneTask.editDone(true);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"            String taskString \u003d doneTask.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"            int getTaskIndex \u003d doneTask.getTaskIndex()+1;","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"            Ui.doneMsg(taskString, getTaskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"        catch(NumberFormatException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please key in task number\");","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":57}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Event Command","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDes the Command the User input","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"    public EventCommand(String taskDes){","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"        super(taskDes);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"            commandInstruction.substring(6);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"        catch(StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Event command can\u0027t be empty\");","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"        if(!commandInstruction.contains(\" /at \")){","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please state /at yyyy-mm-dd\");","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        int dividerPosition2 \u003d commandInstruction.indexOf(\" /at \");","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"        String taskDes \u003d commandInstruction.substring(6, dividerPosition2);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"        String taskDateTime \u003d commandInstruction.substring(dividerPosition2+5);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"        Event event \u003d eventTimeSetter(taskDes, taskDateTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"        tasks.addTask(event);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"     * Checking if the user has input any time and adding it into the class if he has","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDes the task description","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDateTime the task date and time","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the events class","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"    public static Event eventTimeSetter(String taskDes, String taskDateTime) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"            if (!taskDateTime.contains(\" \")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"                LocalDate d1 \u003d Parser.convertStringToDate(taskDateTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"                return new Event(taskDes, d1);","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"                int dividerPosition3 \u003d taskDateTime.indexOf(\" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"                String taskDate \u003d taskDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"                String taskTime \u003d taskDateTime.substring(dividerPosition3 + 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"                LocalDate d1 \u003d Parser.convertStringToDate(taskDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"                LocalTime t1 \u003d Parser.convertStringToTime(taskTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"                return new Event(taskDes, d1, t1);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"        }catch (DateTimeParseException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please set date as YYYY-MM-DD\");","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":69}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the bye and exit command","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"    public ExitCommand(){","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"        super();","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"     * Access the UI to show the exit message","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks The task list will store the task","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"     * @param ui The Ui class which will help to display to the user","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"     * @param storage The Storage which will save the list of task to","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage){","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"        ui.showExit();","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"     * Return the boolean true for it to exit the while loop","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"     * @return true","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"        return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":" * Command to show the list of task the user want to find using a keyword","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Find command","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDes the command the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"    public FindCommand(String taskDes){","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"        super(taskDes);","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"     * Execute the find command by finding the keyword from the list of task","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks the task list","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"     * @param ui the Ui","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"     * @param storage the Storage","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"        if(tasks.getSize()\u003c\u003d 0){","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Sorry. There isn\u0027t a list\");","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"            commandInstruction.substring(5);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"        catch(StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Find command can\u0027t be empty\");","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"        ArrayList\u003cTask\u003e tempTasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"        String keyword \u003d commandInstruction.substring(5);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"        for(int i \u003d 0; i\u003ctasks.getSize(); i++){","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"            Task currentTasksClass \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"            String theStringTask \u003d currentTasksClass.getTaskDescription();","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"            if(theStringTask.contains(keyword)){","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"                tempTasksList.add(currentTasksClass);","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"        if(tempTasksList.size() \u003d\u003d 0){","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"            ui.showNoMatchFound();","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"        else {","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"            for (int i \u003d 0; i \u003c tempTasksList.size(); i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"                ui.showTaskInfo(tempTasksList.get(i));","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":60}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the list command","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"    public ListCommand(){","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"     * Execute the list command to show all the task the user has","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks the task list","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"     * @param ui the Ui","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"     * @param storage the Storage","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Empty task list\");","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"            ui.showTaskInfo(tasks.getTask(i));","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":34}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":" * Command to Create a new ToDos task","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"public class ToDoCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the ToDo Command","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDes the command the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"    public ToDoCommand(String taskDes){","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"        super(taskDes);","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"     * Execute the ToDo command to create the ToDos task","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks the task list","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"     * @param ui the Ui","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"     * @param storage the Storage","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"            commandInstruction.substring(5);","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"        catch(StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Todo command can\u0027t be empty\");","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"        ToDo todo \u003d new ToDo(commandInstruction.substring(5));","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        assert todo.getTaskType() \u003d\u003d TaskType.TODO; //Checking whether the task has been created as a ToDo before adding and saving","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":45}},{"path":"src/main/java/duke/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":" * Any expected error","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"    public DukeException(String error){","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"            super(error);","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"IcyNoPeople":13}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":" * Parser class to spilt up the text from the command","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"public class Parser {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"     * Read the command and return the individual command based on what the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"     * @param fullCommand what the user has inputted","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the individual command","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    public static Command parse(String fullCommand) throws DukeException{","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"            String keyCommand \u003d fullCommand.split(\" \")[0].toLowerCase();","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"            switch(keyCommand){","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"                case (\"list\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"                    return new ListCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"                case (\"exit\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"                case (\"quit\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"                case (\"bye\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"                    return new ExitCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"                case (\"find\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"                    return new FindCommand(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"                case (\"done\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"                    return new DoneCommand(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"                case (\"deadline\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"                    return new DeadlineCommand(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"                case(\"event\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"                    return new EventCommand(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"                case(\"todo\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"                    return new ToDoCommand(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"                case (\"delete\"):","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"                    return new DeleteCommand(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"                default:","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"                    throw new DukeException(\"Unknown command! Please type \u0027help\u0027 for list of command!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"     * Convert the different way the user type the date into the date","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"     * @param text what the user has typed for the date portion","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the LocalDate to be stored","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"    public static LocalDate convertStringToDate(String text) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"        LocalDate d1;","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"        if(!text.contains(\"-\")){","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"IcyNoPeople"},"content":"            return checkForOtherWording(text);","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"IcyNoPeople"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"IcyNoPeople"},"content":"            d1 \u003d LocalDate.parse(text);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"IcyNoPeople"},"content":"        catch (DateTimeParseException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please set date as YYYY-MM-DD\");","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"IcyNoPeople"},"content":"        return d1;","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"IcyNoPeople"},"content":"     * Checking if the user has type any other words that like mon and return the date based on the current date","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"IcyNoPeople"},"content":"     * @param text the date the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the LocalDate to be stored","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException any expected error","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"IcyNoPeople"},"content":"    public static LocalDate checkForOtherWording(String text) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"IcyNoPeople"},"content":"        text \u003d text.toLowerCase();","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"IcyNoPeople"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"IcyNoPeople"},"content":"        DayOfWeek dayOfToday \u003d today.getDayOfWeek();","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"IcyNoPeople"},"content":"        DayOfWeek commandDay \u003d getCommandDay(text);","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"IcyNoPeople"},"content":"        int dayOfTodayIntValue \u003d dayOfToday.getValue();","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"IcyNoPeople"},"content":"        int commandDayIntValue \u003d commandDay.getValue();","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"IcyNoPeople"},"content":"        int date_diff \u003d (commandDayIntValue + 7 - dayOfTodayIntValue) % 7;","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"IcyNoPeople"},"content":"        LocalDate d1 \u003d today.plus(date_diff, ChronoUnit.DAYS);","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"IcyNoPeople"},"content":"        return d1;","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"IcyNoPeople"},"content":"     * Checking and returning the day of week based on what the user has type","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"IcyNoPeople"},"content":"     * @param text the text the user inputted","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the DayOfWeek","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException error when user typed something else instead of the day of the week","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"IcyNoPeople"},"content":"    public static DayOfWeek getCommandDay(String text) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"IcyNoPeople"},"content":"        switch(text){","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"IcyNoPeople"},"content":"            case \"mon\":","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"IcyNoPeople"},"content":"            case \"monday\":","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"IcyNoPeople"},"content":"                return DayOfWeek.MONDAY;","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"IcyNoPeople"},"content":"            case \"tue\":","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"IcyNoPeople"},"content":"            case \"tuesday\":","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"IcyNoPeople"},"content":"                return DayOfWeek.TUESDAY;","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"IcyNoPeople"},"content":"            case \"wed\":","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"IcyNoPeople"},"content":"            case \"wednesday\":","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"IcyNoPeople"},"content":"                return DayOfWeek.WEDNESDAY;","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"IcyNoPeople"},"content":"            case \"thu\":","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"IcyNoPeople"},"content":"            case \"thursday\":","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"IcyNoPeople"},"content":"                return DayOfWeek.THURSDAY;","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"IcyNoPeople"},"content":"            case \"fri\":","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"IcyNoPeople"},"content":"            case \"friday\":","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"IcyNoPeople"},"content":"                return DayOfWeek.FRIDAY;","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"IcyNoPeople"},"content":"            case \"sat\":","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"IcyNoPeople"},"content":"            case \"saturday\":","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"IcyNoPeople"},"content":"                return DayOfWeek.SATURDAY;","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"IcyNoPeople"},"content":"            case \"sun\":","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"IcyNoPeople"},"content":"            case \"sunday\":","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"IcyNoPeople"},"content":"                return DayOfWeek.SUNDAY;","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"IcyNoPeople"},"content":"            default:","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"IcyNoPeople"},"content":"                throw new DukeException(\"Please state date\");","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"IcyNoPeople"},"content":"     * Convert the time into a string","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"IcyNoPeople"},"content":"     * @param text what the type has input for the time field","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the LocalTime to be store","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException error when user put something other than the correct time format","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"IcyNoPeople"},"content":"    public static LocalTime convertStringToTime(String text) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"IcyNoPeople"},"content":"        LocalTime t1;","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"IcyNoPeople"},"content":"        if(!text.contains(\":\")){","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"IcyNoPeople"},"content":"            text \u003d convertTimeTextToTimeStyle(text);","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"IcyNoPeople"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"IcyNoPeople"},"content":"            t1 \u003d LocalTime.parse(text);","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"IcyNoPeople"},"content":"        catch (DateTimeParseException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Please set time as hhmm or hh:mm e.g.1301 or 13:01\");","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"IcyNoPeople"},"content":"        return t1;","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"IcyNoPeople"},"content":"     * Convert if the user didnt put : in between the hours and mins in his time","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"IcyNoPeople"},"content":"     * @param text what the user input as time","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the String of what the user input to be used to convert into time","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"IcyNoPeople"},"content":"     * @throws DukeException error when the user didnt keep to 4 digit","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"IcyNoPeople"},"content":"    public static String convertTimeTextToTimeStyle(String text) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"IcyNoPeople"},"content":"        if (!text.substring(4).isEmpty()){","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Invalid time! Please keep it to 4 digit\");","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"IcyNoPeople"},"content":"        String hour \u003d text.substring(0,2);","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"IcyNoPeople"},"content":"        String min \u003d text.substring(2,4);","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"IcyNoPeople"},"content":"        String newTime \u003d hour + \":\" + min;","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"IcyNoPeople"},"content":"        return newTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":173}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"import java.io.File;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"public class Storage {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    private static String filePath;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the storage class to store the file path of the txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"     * @param filePath the file path of the txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"    public Storage(String filePath){","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"    public static java.nio.file.Path pathFinder() throws IOException, DukeException{","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"        String fileName \u003d filePath;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        if(filePath.contains(\"/\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"            fileName \u003d filePath.substring(filePath.lastIndexOf(\u0027/\u0027));","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"            String dirString \u003d filePath.substring(0, filePath.lastIndexOf(\u0027/\u0027));","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"            java.nio.file.Path folderDir \u003d java.nio.file.Paths.get(dirString);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"            boolean directoryExists \u003d java.nio.file.Files.exists(folderDir);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"            if(!directoryExists){","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"                java.nio.file.Files.createDirectories(folderDir);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"        if(!fileName.contains(\".txt\")){","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"storage files need to be in txt format\");","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"        return java.nio.file.Paths.get(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"     * Write into a txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"     * @param lists list of the task to be written into the txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"    public static void save(TaskList lists) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"            java.nio.file.Path filePath \u003d pathFinder();","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"            FileWriter fileWrite \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"            for (int i \u003d 0; i \u003c lists.getSize(); i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"                String storingTask \u003d convertTaskStoring(lists.getTask(i), i);","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"                fileWrite.write(storingTask);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"            fileWrite.close();","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"        }catch(IOException | DukeException e){","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"error:\" + e.getMessage() + \".\");","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"IcyNoPeople"},"content":"    private static String convertTaskStoring(Task task, int index) throws DukeException, IllegalStateException {","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"IcyNoPeople"},"content":"        String storingTask;","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"IcyNoPeople"},"content":"        switch (task.getTaskType()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"IcyNoPeople"},"content":"            case EVENT:","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"IcyNoPeople"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"IcyNoPeople"},"content":"                storingTask \u003d (index + 1) + \" | E\"","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"IcyNoPeople"},"content":"                        + \" | \" + (event.getIsDone() ? \"1\" : \"0\")","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"IcyNoPeople"},"content":"                        + \" | \" + event.getTaskDescription()","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"IcyNoPeople"},"content":"                        + \" | \" + event.getDateTimeString()","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"IcyNoPeople"},"content":"                        + System.lineSeparator();","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"IcyNoPeople"},"content":"                break;","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"IcyNoPeople"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"IcyNoPeople"},"content":"                Deadline deadlines \u003d (Deadline) task;","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"IcyNoPeople"},"content":"                storingTask \u003d (index + 1) + \" | D\"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"IcyNoPeople"},"content":"                        + \" | \" + (deadlines.getIsDone() ? \"1\" : \"0\")","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"IcyNoPeople"},"content":"                        + \" | \" + deadlines.getTaskDescription()","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"IcyNoPeople"},"content":"                        + \" | \" + deadlines.getDateTimeString()","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"IcyNoPeople"},"content":"                        + System.lineSeparator();","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"IcyNoPeople"},"content":"                break;","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"IcyNoPeople"},"content":"            case TODO:","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"IcyNoPeople"},"content":"                storingTask \u003d (index + 1) + \" | T\"","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"IcyNoPeople"},"content":"                        + \" | \" + (task.getIsDone() ? \"1\" : \"0\")","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"IcyNoPeople"},"content":"                        + \" | \" + task.getTaskDescription()","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"IcyNoPeople"},"content":"                        + System.lineSeparator();","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"IcyNoPeople"},"content":"                break;","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"IcyNoPeople"},"content":"            default:","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"IcyNoPeople"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + task.getTaskType());","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"IcyNoPeople"},"content":"        return storingTask;","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"IcyNoPeople"},"content":"    public static ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"IcyNoPeople"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"IcyNoPeople"},"content":"            ArrayList\u003cTask\u003e tasks \u003d getListOfTask();","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"IcyNoPeople"},"content":"            return tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"IcyNoPeople"},"content":"        }catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Error with creating dir\");","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"IcyNoPeople"},"content":"    private static ArrayList\u003cTask\u003e getListOfTask() throws IOException, DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"IcyNoPeople"},"content":"        java.nio.file.Path filePath \u003d pathFinder();","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"IcyNoPeople"},"content":"        File f \u003d new File(filePath.toString()); // create a File for the given file path","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"IcyNoPeople"},"content":"        if(f.length() \u003d\u003d 0){","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"IcyNoPeople"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"IcyNoPeople"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"IcyNoPeople"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"IcyNoPeople"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"IcyNoPeople"},"content":"            Task task \u003d convertTaskFromFile(s.nextLine());","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"IcyNoPeople"},"content":"            task.setTaskIndex(tasks.size());","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"IcyNoPeople"},"content":"            tasks.add(task);","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"IcyNoPeople"},"content":"        return tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"IcyNoPeople"},"content":"    private static Task convertTaskFromFile(String text) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"IcyNoPeople"},"content":"        Task task;","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"IcyNoPeople"},"content":"        int firstDivider \u003d text.indexOf(\"| \");","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"IcyNoPeople"},"content":"        String taskType \u003d text.substring(firstDivider + 2, firstDivider + 3);","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"IcyNoPeople"},"content":"        String taskDoneString \u003d text.substring(firstDivider + 6, firstDivider +7);","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"IcyNoPeople"},"content":"        String taskDetails \u003d text.substring(firstDivider + 10);","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"IcyNoPeople"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"IcyNoPeople"},"content":"        if(!(taskDoneString.contains(\"0\")||taskDoneString.contains(\"1\"))) {","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Unknown boolean\");","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"IcyNoPeople"},"content":"        if(taskDoneString.contains(\"1\")){","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"IcyNoPeople"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"IcyNoPeople"},"content":"        if(taskDetails.contains(\" | \")){","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"IcyNoPeople"},"content":"            int timeDivider \u003d taskDetails.indexOf(\" | \");","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"IcyNoPeople"},"content":"            String taskDes \u003d taskDetails.substring(0, timeDivider);","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"IcyNoPeople"},"content":"            String taskTime \u003d taskDetails.substring(timeDivider + 3);","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"IcyNoPeople"},"content":"            task \u003d creatingEventOrDeadline(taskType, taskDes, taskTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"IcyNoPeople"},"content":"            task.editDone(isDone);","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"IcyNoPeople"},"content":"            return task;","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"IcyNoPeople"},"content":"        if(!taskType.contains(\"T\")){","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"IcyNoPeople"},"content":"            throw new DukeException(\"Unknown task type\");","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"IcyNoPeople"},"content":"        task \u003d new ToDo(taskDetails);","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"IcyNoPeople"},"content":"        task.editDone(isDone);","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"IcyNoPeople"},"content":"        return task;","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"IcyNoPeople"},"content":"    private static Task creatingEventOrDeadline(String taskType, String taskDes, String taskDateTime) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"IcyNoPeople"},"content":"        if(taskType.contains(\"D\")){","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"IcyNoPeople"},"content":"            return DeadlineCommand.deadlineTimeSetter(taskDes, taskDateTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"IcyNoPeople"},"content":"        if(taskType.contains(\"E\")){","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"IcyNoPeople"},"content":"            return EventCommand.eventTimeSetter(taskDes, taskDateTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"IcyNoPeople"},"content":"        throw new DukeException(\"Unknown task Type\");","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":173}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":" * The Deadline class which the user want to store with date and time","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"    protected LocalDate taskDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"    protected LocalTime taskTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"    protected boolean hasTime \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Deadlines class without a time","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"     * @param description the description the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDate the date the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    public Deadline(String description, LocalDate taskDate) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"        taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Event class with a time","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"     * @param description the description the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDate the date the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskTime the time the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"    public Deadline(String description, LocalDate taskDate, LocalTime taskTime) {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"        this(description, taskDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"        this.taskTime \u003d taskTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"     * return the date and time that was stored in string","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the date and time that was stored in string","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"    public String getDateTimeString(){","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"        return hasTime","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"                ? taskDate + \" \" + taskTime","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"                : taskDate.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"     * return the date and time formatted that was stored in string","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the date and time formatted that was stored in string","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"    public String getDateTimeStringFormat(){","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"        return hasTime","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"                ? taskDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + taskTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"                : taskDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"     * Return the task type with the task that the user input and whether it is done or not","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the task in String","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"IcyNoPeople"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"IcyNoPeople"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDateTimeStringFormat() + \")\";","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"IcyNoPeople":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":" * The event class which the user want to store with date and time","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"    protected LocalDate taskDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"    protected LocalTime taskTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"    protected boolean hasTime \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Duke.Task.Event class without a time","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"     * @param description the description the user input","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDate the date that the user input","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    public Event(String description, LocalDate taskDate) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"        taskType \u003d TaskType.EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the Event with a time","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"     * @param description the description the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskDate the date the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskTime the time the user input","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"    public Event(String description, LocalDate taskDate, LocalTime taskTime) {","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"        this(description, taskDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"        this.taskTime \u003d taskTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"        taskType \u003d TaskType.EVENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"     * return the date and time of the task in String","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the date and time in String","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"    public String getDateTimeString(){","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"        return hasTime","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"                ? taskDate + \" \" + taskTime","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"                : taskDate.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"     * return the date and time formatted in String","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the formatted date and time in String","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"    public String getDateTimeStringFormat(){","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"        return hasTime","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"                ? taskDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + taskTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"                : taskDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"     * Return the task type with the task that the user input and whether it is done or not","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the task in String","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"IcyNoPeople"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"IcyNoPeople"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getDateTimeStringFormat() + \")\";","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"IcyNoPeople":73}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":" * The task class to store all the class","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"    protected String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"    protected TaskType taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"    protected int taskIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the task class to store the task the user requested","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"     * @param description","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"     * Return a Tick or X symbols","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"     * @return a Tick or X symbols","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"     * Edit the status of the task","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"     * @param isDone the new status of the task","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"    public void editDone(Boolean isDone){","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"     * Return the task done status","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the task done status","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"    public boolean getIsDone(){","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"        return isDone;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"    public void setTaskIndex(int i){","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"        taskIndex \u003d i;","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"     * Return the task index of the task","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the task index","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"    public int getTaskIndex(){","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"        return taskIndex;","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"     * Return the task that the user set","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the task that was store","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"    public String getTaskDescription(){","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"        return description;","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"     * Convert the task description with the done status icon","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the task description with the done status icon","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"IcyNoPeople"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"IcyNoPeople"},"content":"        return \" [\" + this.getStatusIcon() + \"] \" + this.getTaskDescription();","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"IcyNoPeople"},"content":"    public TaskType getTaskType(){","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"IcyNoPeople"},"content":"        return taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"IcyNoPeople":78}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":" * Store the list of task for the program to call and use","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"public class TaskList {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the task list","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"    public TaskList(){","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"     * Constructs the task list with an available list of task","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"     * @param tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"    public static Task getTask(int i){","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"     * Remove the task from the list that the user requested","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskIndex the task index that the user requested","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"    public void remove(int taskIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"        for(int i \u003d taskIndex; i \u003c tasks.size(); i++){","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"            tasks.get(i).setTaskIndex(i);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"     * Getting the number of task in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"     * @return the number of task in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"    public static int getSize(){","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"     * Adding of task into the task list and set the task index as well as display the action after it has been added","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"     * @param s the task that the user requested to be added","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"    public static void addTask(Task s){","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"        tasks.add(s);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"        s.setTaskIndex(tasks.size() - 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"        Ui.displayAddMessage(s.toString(), tasks.size());","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"    public static boolean isEmpty(){","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"     * Remove everything from the task list","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"IcyNoPeople"},"content":"    public void clearAll(){","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"IcyNoPeople"},"content":"        tasks.clear();","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":73}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"public enum TaskType {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"    TODO, EVENT, DEADLINE","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"IcyNoPeople":5}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"    public ToDo(String thingsToDo) {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"        super(thingsToDo);","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"        taskType \u003d TaskType.TODO;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"IcyNoPeople":20}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"public class Ui {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"     * Welcome message to show to the user when starting up Duke","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"    public static void showDukeWelcome(){","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"Hello from\\n\" + logo +","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"                \"What can I do for you?\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"        showLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"     * Line separator to spilt between user input and system output","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"    public static void showLine(){","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"     * Display the exit message to let user know that the program will end.","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"    public static void showExit(){","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"IcyNoPeople"},"content":"    public static String readCommand(){","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IcyNoPeople"},"content":"        String line;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"IcyNoPeople"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.print(\"Type something: \");","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"IcyNoPeople"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"IcyNoPeople"},"content":"        return line;","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"IcyNoPeople"},"content":"     * Display the whole list of task to the user","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"IcyNoPeople"},"content":"     * @param task the task list","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"IcyNoPeople"},"content":"    public static void showTaskInfo(Task task){","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"Task Number \" + (task.getTaskIndex() +1) + \": \" + task.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"IcyNoPeople"},"content":"     * Display the message of no matches","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"IcyNoPeople"},"content":"    public static void showNoMatchFound(){","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"We couldn\u0027t find any matches.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"IcyNoPeople"},"content":"     * Display to the user that the task he requested has been deleted","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"IcyNoPeople"},"content":"     * @param deletedTask The task that the user request to be deleted","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"IcyNoPeople"},"content":"     * @param numberOfTask The total number of task remaining in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"IcyNoPeople"},"content":"    public static void displayDeleteMsg(String deletedTask, int numberOfTask){","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"I have deleted the following: \\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"IcyNoPeople"},"content":"                deletedTask + \"\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"IcyNoPeople"},"content":"                \"Now you have \"+ numberOfTask +\" tasks in the list.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"IcyNoPeople"},"content":"     * Display to the user that task has been marked done","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"IcyNoPeople"},"content":"     * @param doneTask The task that the user request to be marked done","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"IcyNoPeople"},"content":"     * @param taskIndex The index/id of the task","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"IcyNoPeople"},"content":"    public static void doneMsg(String doneTask, int taskIndex){","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"IcyNoPeople"},"content":"                \"Task Number \"+ taskIndex + \": \" + doneTask);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"IcyNoPeople"},"content":"    public static void displayAddMessage(String thatTask, int numberOfTask){","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"Added: \"+ thatTask + \"\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"IcyNoPeople"},"content":"                \"Now you have \"+ numberOfTask +\" tasks in the list.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"IcyNoPeople"},"content":"     * Display the error message to user","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"IcyNoPeople"},"content":"     * @param errorMessage Error message from expected DukeException","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"IcyNoPeople"},"content":"    public static void showError(String errorMessage){","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"WE GOT AN ERROR: \" + errorMessage);","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"IcyNoPeople"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"IcyNoPeople"},"content":"     * Show the error to the user when there is a problem with starting up the program","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"IcyNoPeople"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"IcyNoPeople"},"content":"    public static void showLoadingError(){","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"IcyNoPeople"},"content":"        System.out.println(\"There are currently problem with loading the task, proceeding to create a new empty list\");","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":107}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"public class DukeTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":12}},{"path":"src/test/java/duke/dukeexception/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":4}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"    public void ParserDateTest1() throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"        LocalDate d1 \u003d Parser.convertStringToDate(\"2020-12-12\");","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"        LocalDate d2 \u003d Parser.convertStringToDate(\"2019-12-12\");","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"2020-12-12\", d1.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"2019-12-12\", d2.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"    public void ParserTimeTest1() throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"        LocalTime t1 \u003d Parser.convertStringToTime(\"1000\");","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"        LocalTime t2 \u003d Parser.convertStringToTime(\"10:00\");","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"10:00\", t1.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"10:00\", t2.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"10:00 AM\", t2.format(DateTimeFormatter.ofPattern(\"hh:mm a\")));","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":32}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"    public void DeadlinesTest1() {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"        LocalDate d1 \u003d LocalDate.parse(\"2019-12-12\");","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"        LocalTime t1 \u003d LocalTime.parse(\"10:00\");","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"        Deadline dead1 \u003d new Deadline(\"Phone bills\", d1);","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"        Deadline dead2 \u003d new Deadline(\"Duke\", d1, t1);","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"[D] [✘] Phone bills (at: Dec 12 2019)\", dead1.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"[D] [✘] Duke (at: Dec 12 2019 10:00 AM)\", dead2.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"        //assertEquals(\"Dec 12 2019\", dead1.getDateTimeStringFormat());","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"        //assertEquals(\"Dec 12 2019 10:00 AM\", dead2.getDateTimeStringFormat());","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"2019-12-12\", dead1.getDateTimeString());","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"2019-12-12 10:00\", dead2.getDateTimeString());","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"public class EventTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"    public void EventTest1() {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"        LocalDate d1 \u003d LocalDate.parse(\"2019-12-12\");","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"        LocalTime t1 \u003d LocalTime.parse(\"10:00\");","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"        Event e1 \u003d new Event(\"Learn Java\", d1);","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"        Event e2 \u003d new Event(\"Finals\", d1, t1);","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"[E] [✘] Learn Java (at: Dec 12 2019)\", e1.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"[E] [✘] Finals (at: Dec 12 2019 10:00 AM)\", e2.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"        //assertEquals(\"Dec 12 2019\",e1.getDateTimeStringFormat());","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"        //assertEquals(\"Dec 12 2019 10:00 AM\",e2.getDateTimeStringFormat());","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"2019-12-12\",e1.getDateTimeString());","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"2019-12-12 10:00\",e2.getDateTimeString());","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":27}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"    public void TaskListTest1() {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"        ToDo t \u003d new ToDo(\"Learn Java\");","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"        tasks.addTask(t);","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(t, tasks.getTask(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"    public void TaskListTest2() {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"        LocalDate d1 \u003d LocalDate.parse(\"2019-12-12\");","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IcyNoPeople"},"content":"        Event e \u003d new Event(\"Learn Java\", d1);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"IcyNoPeople"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"IcyNoPeople"},"content":"        tasks.addTask(e);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(e, tasks.getTask(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(1,tasks.getTask(0).getTaskIndex());","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":34}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"package duke.task;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"IcyNoPeople"},"content":"public class ToDoTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"IcyNoPeople"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IcyNoPeople"},"content":"    public void toDoTest1(){","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IcyNoPeople"},"content":"        ToDo todo1 \u003d new ToDo(\"Duke project\");","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IcyNoPeople"},"content":"        ToDo todo2 \u003d new ToDo(\"Learn how to drive\");","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"IcyNoPeople"},"content":"        ToDo todo3 \u003d new ToDo(\"Learn Tennis\");","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"[T] [✘] Duke project\",todo1.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"[T] [✘] Learn how to drive\",todo2.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"[T] [✘] Learn Tennis\",todo3.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IcyNoPeople"},"content":"        todo2.editDone(true);","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IcyNoPeople"},"content":"        assertEquals(\"[T] [✓] Learn how to drive\",todo2.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IcyNoPeople"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IcyNoPeople"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IcyNoPeople"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":25}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"1 | T | 0 | lol","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"2 | D | 0 | lol | tmr","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"3 | T | 0 | lol","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"IcyNoPeople":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IcyNoPeople"},"content":"todo lol","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"IcyNoPeople"},"content":"event lol /at sep","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"IcyNoPeople"},"content":"deadline event /by today","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"IcyNoPeople"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"IcyNoPeople"},"content":"done 3","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"IcyNoPeople"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"IcyNoPeople"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"IcyNoPeople":7}}]
