[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":" ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at Johnâ€™s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"## Features","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at Johnâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at samâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Taskâ€™s index in list]","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task listâ€™s index will all be updated accordingly.","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Taskâ€™s index in list]","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at Johnâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Taskâ€™s index in list] Example: delete1","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"-":19,"KaydenKhor":172}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Duke project template","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at Johnâ€™s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at Johnâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at samâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Taskâ€™s index in list]","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task listâ€™s index will all be updated accordingly.","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Taskâ€™s index in list]","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at Johnâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Taskâ€™s index in list] Example: delete1","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"KaydenKhor":164,"-":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"        run();","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"    public static void run() throws IOException, DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"        TaskLists taskList \u003d new TaskLists();","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"        Storage textFile \u003d new Storage();","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"        boolean online \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"        String command \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"        String message \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"            textFile.readFile(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"        } catch (FileNotFoundException a) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"            textFile.saveFile(taskList.getList());","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"        } catch (DukeExceptionFileInput e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"            ui.showFileInputError();","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"        while (online) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"                message \u003d ui.readCommand().trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"                command \u003d new Parser().parseInput(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"                switch (command) {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"                    case \"todo\":","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"                        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"                            taskList.addToDo(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"                            textFile.saveFile(taskList.getList());","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showToDoEmptyError();","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"                        ui.showTaskAdded(taskList.displayLatestTask(), taskList.getSize());","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"                    case \"deadline\":","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"                        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"                            taskList.addDeadline(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"                            textFile.saveFile(taskList.getList());","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showDeadlineEmptyError();","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showDateTimeError();","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"                        ui.showTaskAdded(taskList.displayLatestTask(), taskList.getSize());","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"                    case \"event\":","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"                        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"                            taskList.addEvent(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"                            textFile.saveFile(taskList.getList());","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showEventEmptyError();","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"                        ui.showTaskAdded(taskList.displayLatestTask(), taskList.getSize());","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"                    case \"list\":","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"                        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showList(taskList.displayList());","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (DukeExceptionEmptyList e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showListEmptyError();","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"                    case \"delete\":","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"                        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showDeletedTask(taskList.deleteTask(message), taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"                            textFile.saveFile(taskList.getList());","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (DukeExceptionInvalidTaskInputFormat e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showInvalidTaskFormatError();","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showInvalidTaskNumberError();","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"                    case \"done\":","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"                        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showDoneTask(taskList.doneTask(message));","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (DukeExceptionInvalidTaskInputFormat e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showInvalidTaskFormatError();","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showInvalidTaskNumberError();","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"                    case \"find\":","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"                        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showFindResult((taskList.findTask(message)));","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (DukeExceptionEmptyList e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showListEmptyError();","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"                        } catch (DukeExceptionFindNoResult e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"                            ui.showFindNoResult();","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"                            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"                    case \"bye\":","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"                        online \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"                        ui.showOffline();","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"                    default:","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"                        ui.showUnknownInputError();","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"                }","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"                ui.showFileError();","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"                ui.showUnknownInputError();","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"        textFile.saveFile(taskList.getList());","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KaydenKhor":119,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/main/java/DukeExceptionEmptyList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"public class DukeExceptionEmptyList extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/main/java/DukeExceptionFileInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"public class DukeExceptionFileInput extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/main/java/DukeExceptionFindNoResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"public class DukeExceptionFindNoResult extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/main/java/DukeExceptionInvalidTaskInputFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"public class DukeExceptionInvalidTaskInputFormat extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/main/java/DukeExceptionInvalidTaskNumberDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"public class DukeExceptionInvalidTaskNumberDone extends Exception{","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"     * This parser will be able to parse the inputs from the user to a readable command","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"     * for duke to process the inputs accordingly by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"     * @param userInput The string of words typed in by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"     * @return A readable command for duke to process based on the command.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"    public String parseInput(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"        userInput \u003d userInput.toLowerCase();","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"        String command \u003d \"unknown\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"bye\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"done\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"list\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"delete\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"todo\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"deadline\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"event\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"find\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"find\";","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"        return command;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":40}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"    public static final String DEFAULT_PATH \u003d \"duke.txt\";","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"    private String filePath;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"    public Storage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"        this.filePath \u003d DEFAULT_PATH;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"     * Save the list of tasks into a text file in duke\u0027s root folder as duke.txt whenever user exits from duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"     * @param list The current list duke is handling.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"     * @throws IOException If user defines their own file path, and the file path has some problem.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"    public void saveFile(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"        String s \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"        for (int j \u003d 0; j \u003c list.size(); j++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"            s \u003d s + list.get(j).getType() + \" \" + list.get(j).getTaskStatus() + \" \" + list.get(j).getTask() + \" \"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"                    + list.get(j).getDetails() + System.lineSeparator();","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"            s \u003d s.replace(\"(by:\", \"|\").replace(\"(at:\", \"|\").","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"                    replace(\")\", \"\").replaceAll(\"\\\\[\", \"\").","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"                    replaceAll(\"]\", \"|\").replace(\"\\u2713\", \"1 \").","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"                    replace(\"\\u2718\", \"0 \").replace(\"after\", \"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"        fw.write(s);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"        fw.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"     * Read files from the default file path of duke, duke.txt whenever duke starts up.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"     * @param tasks The new task list created for this duke session to be throw into this function from the start of the program.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"     * @throws IOException If the filepath has some problems.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"     * @throws DukeException If the file context is not in the duke\u0027s list format.","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"    public void readFile(TaskLists tasks) throws IOException, DukeExceptionFileInput {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"        BufferedReader s \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"        s \u003d new BufferedReader(new FileReader(DEFAULT_PATH));","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"        String input \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"        while ((input \u003d s.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"            if (input.charAt(0) \u003d\u003d \u0027T\u0027 || input.charAt(0) \u003d\u003d \u0027E\u0027 || input.charAt(0) \u003d\u003d \u0027D\u0027 || input.charAt(0) \u003d\u003d \u0027A\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"                char status \u003d input.charAt(3);","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"                assert status \u003d\u003d \u00270\u0027 || status \u003d\u003d \u00271\u0027 : \"At this point in time, task status should be either \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"                        \"done(1) or not done(0), please check your task status in Duke.txt again.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"                switch (Character.toString(input.charAt(0))) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"                    case \"T\":","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"                        input \u003d input.substring(6);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"                        tasks.addToDo(\"task \" + input);","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"                        if (status \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"                            int index \u003d tasks.getSize() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"                            tasks.getList().get(index).setTaskDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"                    case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"                        input \u003d input.substring(6);","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"                        input \u003d input.replace(\"|\", \"/at\");","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"                        tasks.addEvent(\"event\" + input);","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"                        if (status \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"                            int index \u003d tasks.getSize() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"                            tasks.getList().get(index).setTaskDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"                    case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"                        input \u003d input.substring(6);","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"                        input \u003d input.replace(\"|\", \"/by\");","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"                        tasks.addDeadline(\"_deadline\" + input);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"                        if (status \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"                            int index \u003d tasks.getSize() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"                            tasks.getList().get(index).setTaskDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"                        }","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"                    default:","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"            } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"                throw new DukeExceptionFileInput();","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":89}},{"path":"src/main/java/TaskLists.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import task.*;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"public class TaskLists {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    public ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"    public TaskLists() {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"     * Get the current list size.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"     * @return The current list size in integer","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"        return list.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"     * Get the current list.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"     * @return The current list.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"        return this.list;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"     * Check whether the list is empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"     * @return True if list is empty, false if list is not empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"        return this.list.isEmpty();","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"     * Runs through the current list till the end of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"     * @return A string of list.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"     * @throws DukeExceptionEmptyList If the list is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"    public String displayList() throws DukeExceptionEmptyList {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"            throw new DukeExceptionEmptyList();","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"            answer \u003d (answer + index + \".\" + this.list.get(i).getType() + this.list.get(i).getTaskStatus() + \" \"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"                    + this.list.get(i).getTask() + \" \" + this.list.get(i).getDetails());","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"            index++;","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"            if (i \u003d\u003d getSize() - 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"                continue;","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"            answer +\u003d \"\\n\\t\";","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"        return answer;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"     * Users to search a task from the current list in accordance with the keyword he typed in.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"     * @param message The keyword user typed in to search","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"     * @return The list of tasks which has the closest result from the searched keyword.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"     * @throws DukeExceptionEmptyList If the list is empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"    public String findTask(String message) throws DukeExceptionEmptyList, DukeExceptionFindNoResult {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"        TaskLists foundResult \u003d new TaskLists();","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"            throw new DukeExceptionEmptyList();","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"        message \u003d message.substring(5);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"            if (this.list.get(i).getDescription().contains(message)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"                foundResult.list.add(this.list.get(i));","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"        if (foundResult.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"            throw new DukeExceptionFindNoResult();","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"        return foundResult.displayList();","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"     * Displays the latest task of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"     * @return The latest task of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"    public String displayLatestTask() {","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"        int number \u003d getSize() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"        return list.get(number).getType() + list.get(number).getTaskStatus() + \" \" + list.get(number).getTask() + \" \"","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"                + list.get(number).getDetails();","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"     * Selected task by users.","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"     * @param number The task number which is selected by user.","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"     * @return The selected task.","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"    public String displaySelectedTask(int number) {","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"        assert number \u003e 1 : \"This selected number must be greater than 1 as the task\u0027s list index starts from 1 and \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"                \"there is no negative task number.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"        return list.get(number).getType() + list.get(number).getTaskStatus() + \" \" + list.get(number).getTask() + \" \"","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"                + list.get(number).getDetails() + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"     * Duke adds a ToDo task.","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"     * @param message Details of the ToDo task.","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"    public void addToDo(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"        list.add(new ToDo((message.substring(5))));","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"     * Duke adds a Deadlines task.","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"     * @param message Details of the Deadlines task.","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"    public void addDeadline(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"        int index \u003d message.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"        boolean readFromFile \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"        if (message.charAt(0) \u003d\u003d \u0027_\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"            readFromFile \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"            message \u003d message.substring(1);","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"        message \u003d message.trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"        if (message.charAt(9) \u003d\u003d \u0027 \u0027 \u0026\u0026 readFromFile \u003d\u003d false) {","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"        list.add(new DeadLines(message.substring(9, index - 1), message.substring(index + 3), readFromFile));","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"     * Duke adds a Events task.","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"     * @param message Details of the Events task.","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"    public void addEvent(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"        if (message.charAt(7) \u003d\u003d \u0027 \u0027){","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"        int index \u003d message.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"        list.add(new Events(message.substring(6, index - 1), message.substring(index + 4)));","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"     * Duke deletes a task as defined by users.","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"     * @param message The selected task as defined by user to delete.","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"     * @throws DukeExceptionInvalidTaskInputFormat when users\u0027 input is not readable by duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"    public String deleteTask(String message) throws DukeExceptionInvalidTaskInputFormat {","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"        if (message.length() \u003c 7 || message.charAt(6) !\u003d \u0027 \u0027 || message.charAt(7) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"            throw new DukeExceptionInvalidTaskInputFormat();","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"        String number \u003d message.substring(7).trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"        int index \u003d Integer.parseInt(number);","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"        index \u003d index - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"        String selectedTask \u003d displaySelectedTask(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"        list.remove(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"        return selectedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"     * Duke sets a task done as defined by users.","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"     * @param message The selected task defined by user to be set as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"     * @return The task that was set as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"     * @throws DukeExceptionInvalidTaskInputFormat when users\u0027 input is not readable by duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"    public String doneTask(String message) throws DukeExceptionInvalidTaskInputFormat {","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"        if (message.length() \u003c 5 || message.charAt(4) !\u003d \u0027 \u0027 || message.charAt(5) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"            throw new DukeExceptionInvalidTaskInputFormat();","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"        String number \u003d message.substring(5).trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"        int index \u003d Integer.parseInt(number);","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"        index \u003d index - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"        this.list.get(index).setTaskDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"        String selectedTask \u003d displaySelectedTask(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"        return selectedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":193}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"    private Scanner in;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"    public String readCommand() throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"        String input \u003d this.in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"        return input;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"     * Shows the line for the chatbot\u0027s box.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"     * @return A straight line for the chatbox","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"    public String showLine() {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"        return \"\\t________________________________________________________________\\n\\t\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"     * Shows welcome message with logo.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"        String welcome \u003d \"Hello! I\u0027m Duke\\n\\tWhat can i do for you?\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(logo + showLine() + welcome + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"     * Display the latest task added to the list along with the current Task list size.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"     * @param taskDetails A String of details of the current task added.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"     * @param listSize    The current size of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"    public void showTaskAdded(String taskDetails, int listSize) {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"        String currentTask \u003d \"Got it. I\u0027ve added this task:\\n\\t\\t\" + taskDetails;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"        String numberOfTask \u003d \"\\n\\tNow you have \" + listSize + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + currentTask + numberOfTask + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"     * Display the latest task deleted from the list along with the new updated Task List size after deleting.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"     * @param deletedTask A String of details of the current deleted task.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"     * @param tasklist    The current tasklist.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"    public void showDeletedTask(String deletedTask, TaskLists tasklist) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"        String deletedTaskMessage \u003d \"Noted. I\u0027ve removed this task: \\n\\t\\t\" + deletedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"        String deletedTaskMessage2 \u003d \"\\tNow you have \" + tasklist.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + deletedTaskMessage + deletedTaskMessage2 + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"     * Display the current task set to done \u0026 update the status of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"     * @param doneTask A string of the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"    public void showDoneTask(String doneTask) {","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"        String doneMessage \u003d \"Nice! I\u0027ve marked this task as done: \\n\\t\" + doneTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + doneMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"     * Display the whole list to user.","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"     * @param list String of current task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"    public void showList(String list) {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"        String listTask \u003d \"Here are the Tasks in your list:\\n\\t\" + list + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + listTask + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"     * Displays the matching result from the keyword search by user.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"     * @param list String of matching result list.","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"    public void showFindResult(String list) {","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"        String listResult \u003d \"Here are the matching tasks in your list:\\n\\t\" + list + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + listResult + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"     * Displays goodbye message to users when they type in \"bye\".","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"    public void showOffline() {","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"        String goodbye \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + goodbye + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"     * When user inputs a file that is not in the correct format or erroneous file.","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"    public void showFileInputError() { //can be for files input","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"There is something wrong with the previous file, please check the content\\n\\tof the file. I\u0027m unable to load the past task list.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"     * When user inputs a ToDO task yet not stating the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"    public void showToDoEmptyError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"\\u2639 OOPS!!! The description of a todo cannot be empty.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"     * When user inputs an unknown command for duke to understand and process.","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"    public void showUnknownInputError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"     * When user inputs a Deadlines task yet not stating the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"    public void showDeadlineEmptyError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"\\u2639 OOPS!!! The description of the deadline cannot be empty.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"     * When user inputs a Events task yet not stating the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"    public void showEventEmptyError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"\\u2639 OOPS!!! The description of the event cannot be empty.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"     * When duke access an empty list.","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"    public void showListEmptyError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"\\u2639 You have an empty list.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"     * When user inputs an invalid task format.","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"    public void showInvalidTaskFormatError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"You\u0027ve entered an invalid format of Task, please check your input format again.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"     * When user inputs a task numnber which is not in the index of the current list size.","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"    public void showInvalidTaskNumberError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"You\u0027ve entered an invalid value for Task, please key in valid task number.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"     * Error while duke is reading the file. Maybe the content of the file or the filepath error.","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"    public void showFileError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"Duke is unable to read your file, please check your input filepath again.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"     * Error while duke is reading the file. Maybe the content of the file or the filepath error.","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"    public void showDateTimeError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"Please check your date and time format and re-enter it according to the stated format\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"     * When the find command is activated, duke is unable to find the relating task with the user\u0027s input.","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"    public void showFindNoResult() {","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"Sorry, I am unable to find any task like that.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"        System.out.println(showLine() + errorMessage + showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":190}},{"path":"src/main/task/DeadLines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"public class DeadLines extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"    protected LocalDateTime dateAndTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    protected String stringDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"    public DeadLines(String description, String details, boolean readFromFile) {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"        String changedDate;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"        int julianDate, day;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"        LocalDateTime formattedDate \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"        details \u003d details.trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"        int daysToAdd \u003d getDaysToAdd(details);","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"        if (readFromFile) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\");","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"            formattedDate \u003d LocalDateTime.parse(details, formatter);","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"            if (daysToAdd \u003c 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"                formattedDate \u003d LocalDateTime.parse(details, formatter);","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"            } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"                formattedDate \u003d formattedDate.now();","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"                julianDate \u003d formattedDate.getDayOfYear();","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"                day \u003d julianDate % 7;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"                daysToAdd \u003d day - daysToAdd;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"                if (daysToAdd \u003d\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"                    daysToAdd \u003d 7;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"                } else if (daysToAdd \u003c 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"                    daysToAdd \u003d daysToAdd * -1;","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"                } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"                    daysToAdd \u003d 7 - daysToAdd;","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"                formattedDate \u003d formattedDate.plusDays(daysToAdd);","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"        changedDate \u003d formattedDate.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"        this.dateAndTime \u003d LocalDateTime.parse(changedDate);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"        this.stringDateTime \u003d dateAndTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"    private int getDaysToAdd(String details) {","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"        details \u003d details.toLowerCase();","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"        if (details.contains(\"mon\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"            return 0;","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"        if (details.contains(\"tues\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"            return 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"        if (details.contains(\"wednes\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"            return 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"        if (details.contains(\"thurs\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"            return 3;","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"        if (details.contains(\"fri\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"            return 4;","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"        if (details.contains(\"satur\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"            return 5;","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"        if (details.contains(\"sun\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"            return 6;","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"        return -1;","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"     * Returns lateral location of the specified position.","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"     * @return The string version of the Date \u0026 Time","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"    public String getDetails() {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"        return \"(by: \" + this.stringDateTime + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"        return dateAndTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"KaydenKhor":85}},{"path":"src/main/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"    String details;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"    public Events(String description, String details) {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"        this.details \u003d \"(at: \" + details + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"     * Returns a String of Location of the current event task","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"     * @return The location of the current event task in String","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"    public String getDetails() {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"        return details;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"KaydenKhor":21}},{"path":"src/main/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"package task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"    protected char type;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"     * Returns the description of the task","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"     * @return The description of the task in string.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"    public String getTask() {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"        return description;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"     * Sets a task done.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"    public void setTaskDone() {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"     * Get the task status, whether is the current task done or not.","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"     * @return a Tick Symbol if it is done, Cross symbol other wise.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\";","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"     * Get the type of current Task, if it is a todo, event, deadline task.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"     * todo \u003d \u0027T\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"     * event \u003d \u0027E\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"     * deadline \u003d \u0027D\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"     * @return [T/E/D]","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"    public String getType() {","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"    public String getDetails() {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"        return \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"     * Returns the description of the current task","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"     * @return A string of the current task\u0027s description.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"        return this.description;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"KaydenKhor":63}},{"path":"src/main/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"KaydenKhor":9}},{"path":"src/production/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Duke project template","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at Johnâ€™s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"## Features","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at Johnâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at samâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Taskâ€™s index in list]","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task listâ€™s index will all be updated accordingly.","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Taskâ€™s index in list]","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at Johnâ€™s house","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Taskâ€™s index in list] Example: delete1","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"KaydenKhor":191}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Duke project template","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at Johnâ€™s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"## Features","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at Johnâ€™s house","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at samâ€™s house","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Taskâ€™s index in list]","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task listâ€™s index will all be updated accordingly.","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Taskâ€™s index in list]","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-28"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at Johnâ€™s house","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Taskâ€™s index in list] Example: delete1","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KaydenKhor":191}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# User Guide","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"## Features ","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"### Feature-ABC","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Description of the feature.","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"### Feature-XYZ","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"Description of the feature.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"## Usage","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"Example of usage: ","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"Expected outcome:","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"expected output","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"KaydenKhor":29}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# User Guide","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"## Features ","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"### Feature-ABC","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Description of the feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"### Feature-XYZ","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"Description of the feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"## Usage","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"Example of usage: ","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"Expected outcome:","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"expected output","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KaydenKhor":29}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework ","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | homework | 12 Dec 1994 0200","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/test/java/DeadLinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"import task.DeadLines;","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"public class DeadLinesTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"    public void deadlinesTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"        DeadLines list \u003d new DeadLines(\"deadline ThisTest\", \"2017-09-11 1100\", false);","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"        assertEquals(\"(by: \" + \"11 Sep 2017 1100\" + \")\", list.getDetails());","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":13}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"public class DukeTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":10}},{"path":"src/test/java/TaskListsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"public class TaskListsTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"    public void TaskListsTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"        TaskLists testList \u003d new TaskLists();","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"        assertEquals(true, testList.isEmpty());","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":11}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"public class UiTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    public void UiTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"        Ui testUi \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"        assertEquals(\"\\t________________________________________________________________\\n\\t\", testUi.showLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"KaydenKhor":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"Im going to add package branch now.","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KaydenKhor":1}}]
