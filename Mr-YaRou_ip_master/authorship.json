[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"   ```","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"-":23,"Mr-YaRou":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"### Feature 1 ","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"Description of feature.","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"Describe action and its outcome.","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"`outcome`","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"-":16,"Mr-YaRou":4}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"@rem","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"@rem","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"@rem Find java.exe","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"echo.","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"echo.","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"goto fail","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"Mr-YaRou"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"Mr-YaRou"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Mr-YaRou"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"Mr-YaRou"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"Mr-YaRou"},"content":"echo.","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"Mr-YaRou"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"Mr-YaRou"},"content":"echo.","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"Mr-YaRou"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"Mr-YaRou"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"Mr-YaRou"},"content":"goto fail","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"Mr-YaRou"},"content":":init","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"Mr-YaRou"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"Mr-YaRou"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"Mr-YaRou"},"content":":win9xME_args","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"Mr-YaRou"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"Mr-YaRou"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"Mr-YaRou"},"content":"set _SKIP\u003d2","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"Mr-YaRou"},"content":":win9xME_args_slurp","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"Mr-YaRou"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"Mr-YaRou"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"Mr-YaRou"},"content":":execute","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"Mr-YaRou"},"content":"@rem Setup the command line","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"Mr-YaRou"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"Mr-YaRou"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"Mr-YaRou"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"Mr-YaRou"},"content":":end","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"Mr-YaRou"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"Mr-YaRou"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"Mr-YaRou"},"content":":fail","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"Mr-YaRou"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"Mr-YaRou"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"Mr-YaRou"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"Mr-YaRou"},"content":"exit /b 1","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"Mr-YaRou"},"content":":mainEnd","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"Mr-YaRou"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"Mr-YaRou"},"content":":omega","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":84}},{"path":"src/data/current_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"T|0|1","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":1}},{"path":"src/data/tasks_2019-11-17.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"E|0|adding an event task |2019-01-01","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"D|0|addding a deadline task 2| No Deadline Given","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"E|1|adding an event task 2| No Location Given","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":3}},{"path":"src/main/java/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.parsers.ParserText;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Task;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"public class Duke {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"    public static ArrayList\u003cTask\u003e Tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"        Storage storage \u003d new Storage(\"C:\\\\Users\\\\yrall\\\\Documents\\\\duke\\\\src\\\\data\\\\current_tasks.txt\");","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"        ParserText response \u003d new ParserText();","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"        UI interaction \u003d new UI();","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"        interaction.welcome(storage.start());","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"        while (response.isTrue) {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"            response.parsetext(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"        storage.save();","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":35}},{"path":"src/main/java/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"        super(message);","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":7}},{"path":"src/main/java/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.parsers.ParserText;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Task;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.*;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"import static main.Duke.Tasks;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"public class Storage {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    private static File file;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"    private String filepath;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"    public Storage(String filepath) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"     * Method creates file at specified directory, if it already exists it tries to load its contents to the","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"     * Array List","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"     * @throws IOException","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"    public Boolean start() throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"        this.file \u003d new File(filepath);","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"Mr-YaRou"},"content":"        //Create the file","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"Mr-YaRou"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Mr-YaRou"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"Mr-YaRou"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"Mr-YaRou"},"content":"           return this.load();","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"Mr-YaRou"},"content":"     * Loads contents of Text file into ArrayList","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"Mr-YaRou"},"content":"     * @throws IOException","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"Mr-YaRou"},"content":"     * @return","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"Mr-YaRou"},"content":"    public Boolean load() throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"Mr-YaRou"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"Mr-YaRou"},"content":"        String read;","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"Mr-YaRou"},"content":"        if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"Mr-YaRou"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"Mr-YaRou"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"Mr-YaRou"},"content":"            while ((read \u003d br.readLine()) !\u003d null)","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"Mr-YaRou"},"content":"                Tasks.add(ParserText.inputParse(read));","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"Mr-YaRou"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"Mr-YaRou"},"content":"    public static void load(File load) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"Mr-YaRou"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(load));","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"Mr-YaRou"},"content":"        String read;","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"Mr-YaRou"},"content":"        if (load.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"Mr-YaRou"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"Mr-YaRou"},"content":"            while ((read \u003d br.readLine()) !\u003d null)","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"Mr-YaRou"},"content":"                Tasks.add(ParserText.inputParse(read));","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"Mr-YaRou"},"content":"        UI.listTasks(true);","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"Mr-YaRou"},"content":"     *  Archives current list of tasks into a Dated file","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"Mr-YaRou"},"content":"    public static void archive() throws IOException, DukeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"Mr-YaRou"},"content":"        Date date \u003d new Date() ;","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"Mr-YaRou"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\") ;","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"Mr-YaRou"},"content":"        File file \u003d new File(\"C:\\\\Users\\\\yralle.lesly.gimpaya\\\\Desktop\\\\duke\\\\src\\\\data\\\\tasks_\" + dateFormat.format(date) + \".txt\") ;","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"Mr-YaRou"},"content":"        BufferedWriter out \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"Mr-YaRou"},"content":"        writeToFile(out);","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"Mr-YaRou"},"content":"    public static void loadview() {","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"Mr-YaRou"},"content":"        File folder \u003d new File(\"C:\\\\Users\\\\yralle.lesly.gimpaya\\\\Desktop\\\\duke\\\\src\\\\data\\\\\");","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"Mr-YaRou"},"content":"        File[] listoffiles \u003d folder.listFiles();","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"Mr-YaRou"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"Mr-YaRou"},"content":"        if (listoffiles.length !\u003d 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"Mr-YaRou"},"content":"            System.out.println(\"\\tHere are the files in Archive:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"Mr-YaRou"},"content":"        for (int i \u003d 0; i \u003c listoffiles.length; i++) {","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"Mr-YaRou"},"content":"            if (listoffiles[i].isFile()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"Mr-YaRou"},"content":"                System.out.println(\"\\tFile \" + count +\" \" + listoffiles[i].getName());","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"Mr-YaRou"},"content":"            } else if (listoffiles[i].isDirectory()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"Mr-YaRou"},"content":"                System.out.println(\"\\tDirectory \" + count +\" \" + listoffiles[i].getName());","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"Mr-YaRou"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"Mr-YaRou"},"content":"            count++;","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"Mr-YaRou"},"content":"    public static void loadFile(int input){","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"Mr-YaRou"},"content":"        File folder \u003d new File(\"C:\\\\Users\\\\yralle.lesly.gimpaya\\\\Desktop\\\\duke\\\\src\\\\data\\\\\");","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"Mr-YaRou"},"content":"        File[] listoffiles \u003d folder.listFiles();","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"Mr-YaRou"},"content":"        try{","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"Mr-YaRou"},"content":"            Storage.load(listoffiles[input -1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"Mr-YaRou"},"content":"        } catch(Exception e){","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"Mr-YaRou"},"content":"            UI.dukePrint(\"\\tOpps, something Unexpected happened!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"Mr-YaRou"},"content":"     *  Utility Function to Copy Contents to a specified file","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"Mr-YaRou"},"content":"     * @param","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"Mr-YaRou"},"content":"    private static void writeToFile(BufferedWriter buffer) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"Mr-YaRou"},"content":"        for (Object input : Tasks) {","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"Mr-YaRou"},"content":"            buffer.write(ParserText.outputParse((Task) input));","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"Mr-YaRou"},"content":"            buffer.newLine();","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"Mr-YaRou"},"content":"        buffer.close();","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"Mr-YaRou"},"content":"     * Method Clears existing data in text file and writes a new set based","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"Mr-YaRou"},"content":"     * on the current ArrayList","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"Mr-YaRou"},"content":"     * @throws IOException","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"Mr-YaRou"},"content":"    public static void save() throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"Mr-YaRou"},"content":"        //Delete Existing Content","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"Mr-YaRou"},"content":"        PrintWriter writer \u003d new PrintWriter(file);","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"Mr-YaRou"},"content":"        writer.print(\"\");","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"Mr-YaRou"},"content":"        writer.close();","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"Mr-YaRou"},"content":"        //Write Content","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"Mr-YaRou"},"content":"        try (FileWriter fritter \u003d new FileWriter(file, true);","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"Mr-YaRou"},"content":"             BufferedWriter buffer \u003d new BufferedWriter(fritter)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"Mr-YaRou"},"content":"           writeToFile(buffer);","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"Mr-YaRou"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"Mr-YaRou"},"content":"            System.err.format(\"IOException: %s%n\", e);","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":169}},{"path":"src/main/java/main/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Task;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"import static main.Duke.Tasks;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"/*","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":" *   User Interface Class","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":" *   Displays results and processed user commands","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":" * */","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"public class UI {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"    UI() {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"    public static void dukePrint(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"    public static void completeTask(int index) {","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\tNice! I\u0027ve changed the status of this Task:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t\" + Tasks.get(index));","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"    public static void deletedCommand(Task t) {","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this Task:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t\" + t.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"Mr-YaRou"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Mr-YaRou"},"content":"        for (Object ignored : Tasks) {","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"Mr-YaRou"},"content":"            count++;","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\tNow you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"Mr-YaRou"},"content":"    static void line() {","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"Mr-YaRou"},"content":"    public static void bye() {","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"Mr-YaRou"},"content":"    public static void echo(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t \" + input);","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"Mr-YaRou"},"content":"    public static void addedCommand(Task input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t\" + input.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"Mr-YaRou"},"content":"    public static void listTasks(boolean b) {","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"Mr-YaRou"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"Mr-YaRou"},"content":"        if (Tasks.size() \u003e 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"Mr-YaRou"},"content":"            if (b){","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"Mr-YaRou"},"content":"                System.out.println(\"\\tAdded these Tasks into your List:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"Mr-YaRou"},"content":"            } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"Mr-YaRou"},"content":"                System.out.println(\"\\tHere are the Tasks in your List:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"Mr-YaRou"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"Mr-YaRou"},"content":"            for (Object input : Tasks) {","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"Mr-YaRou"},"content":"                System.out.println(\"\\t\" + (count + 1) + \". \" +","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"Mr-YaRou"},"content":"                        input.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"Mr-YaRou"},"content":"                count++;","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"Mr-YaRou"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"Mr-YaRou"},"content":"            System.out.println(\"\\tNow you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"Mr-YaRou"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"Mr-YaRou"},"content":"            System.out.println(\"\\tOh, you don\u0027t seem to be very busy huh?\");","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"Mr-YaRou"},"content":"    public static void listTasks(Set\u003cTask\u003e seached_set) {","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"Mr-YaRou"},"content":"        if (seached_set.size() \u003e 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"Mr-YaRou"},"content":"            System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"Mr-YaRou"},"content":"            int count \u003d 0;","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"Mr-YaRou"},"content":"            for (Task element : seached_set) {","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"Mr-YaRou"},"content":"                System.out.println(\"\\t\" + (count + 1) + \". \" +","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"Mr-YaRou"},"content":"                        element.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"Mr-YaRou"},"content":"                count++;","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"Mr-YaRou"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"Mr-YaRou"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"Mr-YaRou"},"content":"            System.out.println(\"\\tOh, Nothing matches that description.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"Mr-YaRou"},"content":"    public static void clear() {","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\tI\u0027ve cleared all your tasks!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"Mr-YaRou"},"content":"    public static void archived(String s) {","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\tCurrent Tasks have been saved to \u0027\" + s + \"\u0027\");","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"Mr-YaRou"},"content":"        UI.line();","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"Mr-YaRou"},"content":"     * Prints the Welcome Logo of Duke","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"Mr-YaRou"},"content":"    public static void welcome(Boolean t) {","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"Mr-YaRou"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"Mr-YaRou"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"Mr-YaRou"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"Mr-YaRou"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"Mr-YaRou"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\");","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"Mr-YaRou"},"content":"        if (!t) {","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"Mr-YaRou"},"content":"            System.out.println(\"\\tYou have existing tasks to do!\\n\\tType \u0027load\u0027 to view existing tasks!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"Mr-YaRou"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":138}},{"path":"src/main/java/main/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"class UITest {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"    void dukePrintTest() {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"        UI.dukePrint(\"\\tThis is a test Message to be printed by Duke!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"        String expectedOutput \u003d \"\\tThis is a test Message to be printed by Duke!\";","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"        Assert.assertEquals(expectedOutput,outContent.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":23}},{"path":"src/main/java/main/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.UI;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Task;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"import static main.Duke.Tasks;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"public class AddCommand extends Command\u003cTask\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"     * Public Method to add Tasks into ArrayList and .txt file","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"     * @param input the Task to be added","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"     * @throws IOException IOException will be thrown of there is an error in writing to .txt","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"    public AddCommand(Task input) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"        this.execute(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"    public void execute(Task input) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"        Tasks.add(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"        UI.addedCommand(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":31}},{"path":"src/main/java/main/commands/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.DukeException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.Storage;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import main.UI;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"import static main.Duke.Tasks;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"    public ArchiveCommand () throws IOException, DukeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"        execute(null);","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    public void execute(Object ignored) throws DukeException, IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"        Storage.archive();","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"        UI.dukePrint(\"\\tI have successfully archived and cleared your current tasks!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"        Tasks.clear();","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":21}},{"path":"src/main/java/main/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.UI;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.parsers.ParserText;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"public class ByeCommand extends Command\u003cString\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"    public ByeCommand(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"        this.execute(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"    public void execute(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"        UI.bye();","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"        ParserText.isTrue \u003d false;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":19}},{"path":"src/main/java/main/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.DukeException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.UI;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"import static main.Duke.Tasks;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"    public ClearCommand() throws IOException, DukeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"        execute(Tasks);","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"    public void execute(Object input) throws DukeException, IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"        Tasks.clear();","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"        UI.clear();","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":21}},{"path":"src/main/java/main/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.DukeException;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"abstract public class Command\u003cT\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"    abstract public void execute(T input) throws DukeException, IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":11}},{"path":"src/main/java/main/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.DukeException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.UI;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Task;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"import static main.Duke.Tasks;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"public class DeleteCommand extends Command\u003cInteger\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"    public DeleteCommand(Integer input) throws DukeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"        this.execute(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"    public void execute(Integer input) throws DukeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"            Task t \u003d Tasks.get(input - 1);","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"            Tasks.remove(input - 1);","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"            UI.deletedCommand(t);","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"            UI.dukePrint(\"\\tI can\u0027t delete something that does not exist. Maybe try \u0027list\u0027 to list current tasks?\");","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":30}},{"path":"src/main/java/main/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.DukeException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.UI;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"import static main.Duke.Tasks;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"public class DoneCommand extends Command\u003cString\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"    public DoneCommand(String input) throws DukeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"        this.execute(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"    public void execute(String input) throws DukeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"            int index \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"            Tasks.get(index).Done();","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"            UI.completeTask(index);","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"            UI.dukePrint(\"\\t☹ OOPS!!! I don\u0027t seem to have this Task logged\");","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":27}},{"path":"src/main/java/main/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.DukeException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.UI;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Task;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"import static main.Duke.Tasks;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    private static final String INPUT_DELIMITER \u003d \" \";","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"    public FindCommand(Object input) throws IOException, DukeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"        execute(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"    private String[] parsesearch(Object input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"        String searchstring \u003d input.toString();","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"        String[] searchable \u003d searchstring.split(INPUT_DELIMITER);","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"        return searchable;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"    private boolean searchMatch(String searchval, String[] searchable) {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"        for (String search : searchable) {","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"            if (searchval.equals(search))","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"                return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"Mr-YaRou"},"content":"    public void execute(Object input) throws DukeException, IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"Mr-YaRou"},"content":"        Set\u003cTask\u003e seached_set \u003d new HashSet\u003cTask\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"Mr-YaRou"},"content":"        for (Task task : Tasks) {","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"Mr-YaRou"},"content":"            for (String searchval : task.getDescription().split(INPUT_DELIMITER)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"Mr-YaRou"},"content":"                if (searchMatch(searchval, parsesearch(input))) {","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"Mr-YaRou"},"content":"                    seached_set.add(task);","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"Mr-YaRou"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"Mr-YaRou"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"Mr-YaRou"},"content":"        UI.listTasks(seached_set);","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":50}},{"path":"src/main/java/main/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import main.UI;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"public class ListCommand extends Command\u003cString\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"        this.execute(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"    public void execute(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"        UI.listTasks(false);","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":15}},{"path":"src/main/java/main/parsers/ParserText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.parsers;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import main.DukeException;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import main.Storage;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"import main.commands.*;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Deadline;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Event;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.Task;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"import main.taskLists.ToDo;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"import static main.UI.dukePrint;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"public class ParserText\u003cT\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"    private static final String OUTPUT_DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"    private static final String INPUT_DELIMITER \u003d \" \";","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"    public static boolean isTrue;","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"    public ParserText() {","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"        this.isTrue \u003d true;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"     * This is a parser created for this application.","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"     * The input parameters are parsed and the respective commands are called.","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"     * @param","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"Mr-YaRou"},"content":"     * input - User Input to the application","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"Mr-YaRou"},"content":"     * @throws DukeException - catches Duke exceptions and returns a suitable message to the user","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Mr-YaRou"},"content":"     * @throws IOException","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"Mr-YaRou"},"content":"    public static void parsetext(String input) throws DukeException, IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"Mr-YaRou"},"content":"        String[] command \u003d input.split(INPUT_DELIMITER);","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"Mr-YaRou"},"content":"        UtilityFunc parsedDate \u003d (Object n) -\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"Mr-YaRou"},"content":"            try {","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"Mr-YaRou"},"content":"                return LocalDate.parse((CharSequence) n);","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"Mr-YaRou"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"Mr-YaRou"},"content":"                return (String) n;","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"Mr-YaRou"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"Mr-YaRou"},"content":"        };","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"Mr-YaRou"},"content":"        //Parse the comment to the correct Command Action","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"Mr-YaRou"},"content":"        switch (command[0].toUpperCase()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"Mr-YaRou"},"content":"            case \"BYE\":","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"Mr-YaRou"},"content":"                new ByeCommand(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"Mr-YaRou"},"content":"            case \"LIST\":","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"Mr-YaRou"},"content":"                new ListCommand(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"Mr-YaRou"},"content":"            case \"CLEAR\":","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"Mr-YaRou"},"content":"                new ClearCommand();","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"Mr-YaRou"},"content":"            case \"SAVE\":","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"Mr-YaRou"},"content":"                new ArchiveCommand();","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"Mr-YaRou"},"content":"            case \"LOADVIEW\":","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"Mr-YaRou"},"content":"                Storage.loadview();","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"Mr-YaRou"},"content":"            case \"LOAD\":","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"Mr-YaRou"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"Mr-YaRou"},"content":"                    Storage.loadFile(Integer.parseInt(input.split(INPUT_DELIMITER)[1]));","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I can\u0027t process this action without specifying the task!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I can only accept numerical values. Type `list` to see the values\");","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"Mr-YaRou"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"Mr-YaRou"},"content":"            case \"FIND\":","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"Mr-YaRou"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"Mr-YaRou"},"content":"                    new FindCommand(input.split(INPUT_DELIMITER, 2)[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I can\u0027t search the UnSearchable!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"Mr-YaRou"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"Mr-YaRou"},"content":"            case \"DELETE\":","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"Mr-YaRou"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"Mr-YaRou"},"content":"                    new DeleteCommand(Integer.parseInt(input.split(INPUT_DELIMITER)[1]));","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I can\u0027t process this action without specifying the task!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I do not have the ability to parse words to numbers yet. \" +","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"Mr-YaRou"},"content":"                            \"Please use a numerical value!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"Mr-YaRou"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"Mr-YaRou"},"content":"            case \"DONE\":","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"Mr-YaRou"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"Mr-YaRou"},"content":"                    new DoneCommand(input.split(INPUT_DELIMITER)[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I can\u0027t process this action without specifying the task!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I can only accept numerical values. Type `list` to see the values\");","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"Mr-YaRou"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"Mr-YaRou"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"Mr-YaRou"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"Mr-YaRou"},"content":"                    String deadlineDesc \u003d (input.split(INPUT_DELIMITER, 2)[1]).split(\"/by\")[0];","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"Mr-YaRou"},"content":"                    var subStringDeadline \u003d input.substring(input.lastIndexOf(\"/by\") + 3).trim();","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"Mr-YaRou"},"content":"                    Object doWhen \u003d (subStringDeadline.equalsIgnoreCase(input.substring(2))) ?","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"Mr-YaRou"},"content":"                            \" No Deadline Given\" :  parsedDate.convert(subStringDeadline); //Parse Date here","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"Mr-YaRou"},"content":"                    Task deadline \u003d new Deadline\u003c\u003e(deadlineDesc, doWhen);","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"Mr-YaRou"},"content":"                    new AddCommand(deadline);","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"Mr-YaRou"},"content":"                    System.out.println(\"\\t☹ OOPS!!! I can\u0027t process this action without specifying the task!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"Mr-YaRou"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"Mr-YaRou"},"content":"            case \"EVENT\":","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"Mr-YaRou"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"Mr-YaRou"},"content":"                    String eventDesc \u003d (input.split(INPUT_DELIMITER, 2)[1]).split(\"/at\")[0];","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"Mr-YaRou"},"content":"                    var subStringEvent \u003d input.substring(input.lastIndexOf(\"/at\") + 3).trim();","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"Mr-YaRou"},"content":"                    Object doAt \u003d (subStringEvent.equalsIgnoreCase(input.substring(2))) ?","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"Mr-YaRou"},"content":"                            \" No Location Given\" :  parsedDate.convert(subStringEvent); // Parse Date here","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"Mr-YaRou"},"content":"                    Task event \u003d new Event\u003c\u003e(eventDesc, doAt);","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"Mr-YaRou"},"content":"                    new AddCommand(event);","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I can only accept numerical values. Type `list` to see the values\");","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"Mr-YaRou"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"Mr-YaRou"},"content":"            case \"TODO\":","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"Mr-YaRou"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"Mr-YaRou"},"content":"                    String TodoDesc \u003d (input.split(INPUT_DELIMITER, 2)[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"Mr-YaRou"},"content":"                    Task todo \u003d new ToDo(TodoDesc);","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"Mr-YaRou"},"content":"                    new AddCommand(todo);","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"Mr-YaRou"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"Mr-YaRou"},"content":"                    dukePrint(\"\\t☹ OOPS!!! I can\u0027t process this action without specifying the task!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"Mr-YaRou"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"Mr-YaRou"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"Mr-YaRou"},"content":"            default:","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"Mr-YaRou"},"content":"                dukePrint(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"Mr-YaRou"},"content":"     * Returns a String Object that can be then be inserted into the text file.","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"Mr-YaRou"},"content":"     * This method only returns a String if it is able to parse the input provided","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"Mr-YaRou"},"content":"     * @param","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"Mr-YaRou"},"content":"     *  Task Object that is to be Parsed","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"Mr-YaRou"},"content":"     * @return","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"Mr-YaRou"},"content":"     *  String Object that is to be written to a text file.","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"Mr-YaRou"},"content":"    public static String outputParse(Task input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"Mr-YaRou"},"content":"        String parsedInput \u003d null;","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"Mr-YaRou"},"content":"        if (input instanceof ToDo) {","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"Mr-YaRou"},"content":"            parsedInput \u003d String.format(\"T|%s|%s\",","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"Mr-YaRou"},"content":"                    input.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"Mr-YaRou"},"content":"                    input.getDescription()","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"Mr-YaRou"},"content":"            );","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"Mr-YaRou"},"content":"        } else if (input instanceof Event) {","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"Mr-YaRou"},"content":"            parsedInput \u003d String.format(\"E|%s|%s|%s\",","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"Mr-YaRou"},"content":"                    input.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"Mr-YaRou"},"content":"                    input.getDescription(),","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"Mr-YaRou"},"content":"                    ((Event) input).getAt()","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"Mr-YaRou"},"content":"            );","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"Mr-YaRou"},"content":"        } else if (input instanceof Deadline) {","lastModifiedDate":"2021-10-02"},{"lineNumber":184,"author":{"gitId":"Mr-YaRou"},"content":"            parsedInput \u003d String.format(\"D|%s|%s|%s\",","lastModifiedDate":"2021-10-02"},{"lineNumber":185,"author":{"gitId":"Mr-YaRou"},"content":"                    input.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"Mr-YaRou"},"content":"                    input.getDescription(),","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"Mr-YaRou"},"content":"                    ((Deadline) input).getBy()","lastModifiedDate":"2021-10-02"},{"lineNumber":188,"author":{"gitId":"Mr-YaRou"},"content":"            );","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"Mr-YaRou"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"Mr-YaRou"},"content":"            dukePrint(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know how to Parse this\");","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":193,"author":{"gitId":"Mr-YaRou"},"content":"        return parsedInput;","lastModifiedDate":"2021-10-02"},{"lineNumber":194,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":195,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":197,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"Mr-YaRou"},"content":"     * This method Parses the input String into a Task Object","lastModifiedDate":"2021-10-02"},{"lineNumber":199,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":200,"author":{"gitId":"Mr-YaRou"},"content":"     * @param input","lastModifiedDate":"2021-10-02"},{"lineNumber":201,"author":{"gitId":"Mr-YaRou"},"content":"     * @return","lastModifiedDate":"2021-10-02"},{"lineNumber":202,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":203,"author":{"gitId":"Mr-YaRou"},"content":"    public static Task inputParse(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":204,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":205,"author":{"gitId":"Mr-YaRou"},"content":"        // Bad attempt at a Lamda Function","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"Mr-YaRou"},"content":"        UtilityFunc parsedDate \u003d (Object n) -\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":207,"author":{"gitId":"Mr-YaRou"},"content":"            try {","lastModifiedDate":"2021-10-02"},{"lineNumber":208,"author":{"gitId":"Mr-YaRou"},"content":"                return LocalDate.parse((CharSequence) n);","lastModifiedDate":"2021-10-02"},{"lineNumber":209,"author":{"gitId":"Mr-YaRou"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":210,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"Mr-YaRou"},"content":"                return (String) n;","lastModifiedDate":"2021-10-02"},{"lineNumber":212,"author":{"gitId":"Mr-YaRou"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":213,"author":{"gitId":"Mr-YaRou"},"content":"        };","lastModifiedDate":"2021-10-02"},{"lineNumber":214,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":215,"author":{"gitId":"Mr-YaRou"},"content":"        String task \u003d input.split(OUTPUT_DELIMITER)[0];","lastModifiedDate":"2021-10-02"},{"lineNumber":216,"author":{"gitId":"Mr-YaRou"},"content":"        Boolean status \u003d Boolean.parseBoolean(input.split(OUTPUT_DELIMITER)[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":217,"author":{"gitId":"Mr-YaRou"},"content":"        String desc \u003d input.split(OUTPUT_DELIMITER)[2];","lastModifiedDate":"2021-10-02"},{"lineNumber":218,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":219,"author":{"gitId":"Mr-YaRou"},"content":"        Task output \u003d null;","lastModifiedDate":"2021-10-02"},{"lineNumber":220,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":221,"author":{"gitId":"Mr-YaRou"},"content":"        if (task.matches(\"T\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":222,"author":{"gitId":"Mr-YaRou"},"content":"            output \u003d new ToDo(desc);","lastModifiedDate":"2021-10-02"},{"lineNumber":223,"author":{"gitId":"Mr-YaRou"},"content":"            output.setStatus(status);","lastModifiedDate":"2021-10-02"},{"lineNumber":224,"author":{"gitId":"Mr-YaRou"},"content":"        } else if (task.matches(\"D\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":225,"author":{"gitId":"Mr-YaRou"},"content":"            output \u003d new Deadline\u003c\u003e(desc, parsedDate.convert(input.split(OUTPUT_DELIMITER)[3]));","lastModifiedDate":"2021-10-02"},{"lineNumber":226,"author":{"gitId":"Mr-YaRou"},"content":"            output.setStatus(status);","lastModifiedDate":"2021-10-02"},{"lineNumber":227,"author":{"gitId":"Mr-YaRou"},"content":"        } else if (task.matches(\"E\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":228,"author":{"gitId":"Mr-YaRou"},"content":"            output \u003d new Event\u003c\u003e(desc, parsedDate.convert(input.split(OUTPUT_DELIMITER)[3]));","lastModifiedDate":"2021-10-02"},{"lineNumber":229,"author":{"gitId":"Mr-YaRou"},"content":"            output.setStatus(status);","lastModifiedDate":"2021-10-02"},{"lineNumber":230,"author":{"gitId":"Mr-YaRou"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":231,"author":{"gitId":"Mr-YaRou"},"content":"            dukePrint(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know how to Parse this\");","lastModifiedDate":"2021-10-02"},{"lineNumber":232,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":233,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":234,"author":{"gitId":"Mr-YaRou"},"content":"        return output;","lastModifiedDate":"2021-10-02"},{"lineNumber":235,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":236,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":237,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":238,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":238}},{"path":"src/main/java/main/parsers/UtilityFunc.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.parsers;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":" *  This is a functional interface and therefore be used as","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":" *  the assignment target for a lamda expression or method reference.","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":" *","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":" * @param \u003cT\u003e - the Type of the result to the function","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":" * @param \u003cV\u003e - the Type of the input of the function","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"@FunctionalInterface","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"public interface UtilityFunc\u003cT, V\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"     *  Applies this function to the given argument","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"     * @param","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"     * Input is the function argument to be applied on","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"     * @return","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"     * is the function result","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"    abstract T convert(V input);","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":25}},{"path":"src/main/java/main/taskLists/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.taskLists;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"public class Deadline\u003cT\u003e extends Task {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"    private T by;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"    public Deadline(String description, T by) {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"        super(description);","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"    public T getBy() {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"        return this.by;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"    private String convert(LocalDate input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"        LocalDate clone \u003d input;","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"        return clone.format(DateTimeFormatter.ofPattern(\"MMMM dd yyyy\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"            return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + convert((LocalDate) by) + \")\";","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"            return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":37}},{"path":"src/main/java/main/taskLists/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.taskLists;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"public class Event\u003cT\u003e extends Task {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"    private T At;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"    public Event(String description, T At) {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"        super(description);","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"        this.At \u003d At;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    public T getAt() {","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"        return this.At;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"    private String convert(LocalDate input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"        return input.format(DateTimeFormatter.ofPattern(\"MMMM dd yyyy\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"            return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + super.toString() + \" (At: \" + convert((LocalDate) At) + \")\";","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"            return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + super.toString() + \" (At: \" + this.At + \")\";","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":33}},{"path":"src/main/java/main/taskLists/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.taskLists;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"    protected String description;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"    public void Done() {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Mr-YaRou"},"content":"    public void setStatus(Boolean input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Mr-YaRou"},"content":"        this.isDone \u003d input;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Mr-YaRou"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Mr-YaRou"},"content":"        return this.isDone;","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Mr-YaRou"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"Mr-YaRou"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"Mr-YaRou"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"Mr-YaRou"},"content":"        return this.description;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"Mr-YaRou"},"content":"    ;","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"Mr-YaRou"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Mr-YaRou"},"content":"        return this.description;","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":39}},{"path":"src/main/java/main/taskLists/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package main.taskLists;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"        super(description);","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Mr-YaRou"},"content":"        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + super.toString();","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Mr-YaRou"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":14}},{"path":"src/main/java/test/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package test;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"class UITest {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":11}},{"path":"src/main/java/test/UITestDukePrint.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package test;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"class UITestDukePrint {","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":7}},{"path":"src/main/java/test/UITestTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mr-YaRou"},"content":"package test;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Mr-YaRou"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Mr-YaRou"},"content":"class UITestTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Mr-YaRou"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Mr-YaRou"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Mr-YaRou":7}}]
