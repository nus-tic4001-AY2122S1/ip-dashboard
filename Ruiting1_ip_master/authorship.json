[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"# main.java.duke.Duke project template","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"3. After that, locate the `src/main/java/main.java.duke.Duke.java` file, right-click it, and choose `Run main.java.duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ruiting1":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"        String separateLine\u003d\"____________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(separateLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(\"Hello! I am Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(separateLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"        String line\u003d\"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        while(!( line \u003d in.nextLine()).equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"            if(line.equals(\"list\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"                System.out.println(separateLine+\"\\n\"+\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"                //System.out.println(list.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"                //Stream.of(list.toString()).forEach(System.out::println);","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"                for(int i\u003d1;i\u003c\u003dlist.size();i++)","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"                {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"                    System.out.println(i+\". \"+\"[\"+list.get(i-1).getStatusIcon()+\"] \"+list.get(i-1).getDescription());","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"                System.out.println(separateLine);","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"            else if (line.contains(\"done\"))","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"            {","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"                int idx\u003dInteger.parseInt(line.substring(5));","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"                list.get(idx-1).markAsDone();","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"                System.out.println(separateLine + \"\\n\" +\"Nice! I\u0027ve marked this task as done\");","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"                System.out.println(\"[\"+list.get(idx-1).getStatusIcon()+\"] \"+list.get(idx-1).getDescription());","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"            else{","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"                System.out.println(separateLine + \"\\n\" +\"Added: \"+ line + \"\\n\" + separateLine);","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"                list.add(new Task(line));","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(separateLine+\"\\nBye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ruiting1":41,"-":10}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    private String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"        return (isDone ? \"\\u2714\" : \"\\u2718\"); //return tick or X symbols","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public void markAsDone(){","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"        return description;","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Ruiting1":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"java -classpath ..\\bin main.java.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ruiting1":1,"-":20}}]
