[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"# main.java.duke.Duke project template","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"3. After that, locate the `src/main/java/main.java.duke.Duke.java` file, right-click it, and choose `Run main.java.duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ruiting1":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"D|1|return book|2021-08-05 1005|2021-08-01 1800","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"E|1|project meeting|2021-06-22 1200|2021-03-14 1721","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"T|1|go exercising|2021-09-05 2229","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"T|0|borrow book|","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"E|0|tba2105 project group discussion|2021-09-14 1800|","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"D|0|write proposal for project A|2021-09-30 1800|","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"Ruiting1":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.commands.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.commands.ExitCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.storage.Storage.StorageOperationException;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.storage.Storage.InvalidStorageFilePathException;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        } catch (StorageOperationException | InvalidStorageFilePathException | IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        new Duke(System.getProperty(\"user.dir\")+\"/data/duke.txt\").run();","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    public void run() {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"                Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"                c.setData(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"                c.execute();","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"                isExit \u003d ExitCommand.isExit(c);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"            } finally {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ruiting1":53,"-":3}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" * add a task to the list","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD_ONE\u003d\"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD_TWO\u003d\"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD_THREE\u003d\"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE\u003d \"||\"+COMMAND_WORD_ONE+\": Adds a Todo Task to the task list. \\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"                                            \"Syntax: todo DESCRIPTION\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"                                            \"Example: \" + COMMAND_WORD_ONE +\" borrow book\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"                                            \"||\"+ COMMAND_WORD_TWO+\": Adds a Deadline task to the task list.\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"                                            \"Syntax: deadline DESCRIPTION by/TIME(YYYY-MM-dd HHmm)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"                                            \"Example: \"+COMMAND_WORD_TWO +\" return book by/2019-12-01 1200\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"                                             \"||\"+ COMMAND_WORD_THREE+\": Adds an Event task to the task list.\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"                                            \"Syntax: event DESCRIPTION at/TIME(YYYY-MM-dd HHmm)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                                            \"Example: \"+ COMMAND_WORD_THREE+\" project meeting at/2019-12-01 1200\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    public AddCommand(Task toAdd) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    public void execute() {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"            taskList.addTask(toAdd);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"            System.out.println(\"New \"+toAdd.getTaskType()+\" Added: \"+toAdd.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"            System.out.println(\"Now you have \"+taskList.getSize()+\" tasks in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        } catch (TaskList.DuplicateTaskException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":44}},{"path":"src/main/java/duke/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class ClearCommand extends Command{","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD\u003d\"clear\";","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE\u003d\"||\"+COMMAND_WORD+\": clear all the tasks in the task list.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    public void execute() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"        taskList.clear();","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(\"All the tasks are cleared\");","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":13}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" * Represents an executable command.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"public class Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    private int targetIndex \u003d -1;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    protected Command() {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    public Command(int targetIndex) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        this.setTargetIndex(targetIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    private void setTargetIndex(int targetIndex) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    public int getTargetIndex() {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        return targetIndex;","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    public void execute() {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"     * Supplies the data the command will operate on.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    public void setData(TaskList taskList){","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        this.taskList\u003dtaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":41}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" * delete a task from the taskList based on the index.","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD\u003d\"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE\u003d\"||\"+COMMAND_WORD+\": delete a task from the task list based on the index.\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"            \"Syntax: delete INDEX\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"            \"Example: \"+COMMAND_WORD+\" 2 (this will remove the No.2 task from the task list.)\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public DeleteCommand(int targetIndex) {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"        super(targetIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    public void execute(){","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        taskList.removeTask(getTargetIndex()-1);","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        System.out.print(\"Remove successfully.\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":25}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" * mark a task as done statement based on the index.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD\u003d\"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE\u003d\"||\"+COMMAND_WORD+\": mark a task as done status, there are two syntax.\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"            \"Syntax 1(without finish time): done INDEX\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"            \"Example: \"+COMMAND_WORD +\" 2 (this command will mark the No.2 task as Done status and the default finish time is the current time)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"            \"Syntax 2(with finish time): done INDEX on/TIME(YYYY-MM-dd HHmm)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            \"Example: \"+COMMAND_WORD+\" 2 on/2019-12-01 1200(this command will mark the No.2 task as Done status and finish time is 01 Dec 2019 12:00\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    private LocalDateTime finishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    public DoneCommand(int targetIndex,LocalDateTime finishTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        super(targetIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"        this.finishTime\u003dfinishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    public void execute(){","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        taskList.getTaskByIdx(getTargetIndex()).markAsDone(finishTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        System.out.print( taskList.getTaskByIdx(getTargetIndex())+\" is done on \"+","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"                finishTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))+\"\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":29}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":" * Exit the program.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD\u003d\"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE\u003d\"||\"+COMMAND_WORD+\": Exit the program and save the changes to the txt file.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    public void execute(){","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"        System.out.print(\"See you next time.\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":19}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.*;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" * Finds and lists all tasks in taskList whose description contains any of the argument keywords.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":" * Keyword matching is case sensitive.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD\u003d\"find\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE\u003d \"||\"+COMMAND_WORD+\": finds the specific tasks based on the keywords you entered.\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            \"Syntax: find KEYWORDS\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"            \"Example: \"+COMMAND_WORD+\"find book(will return the task that contains the keyword book.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    private final Set\u003cString\u003e keywords;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public FindCommand(Set\u003cString\u003e keywords) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    public void execute(){","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        final List\u003cTask\u003e foundTasks\u003d getTasksFromKeyword(keywords);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        if(foundTasks.isEmpty()){","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"            System.out.print(\"No Result Found\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"            return;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        for (int i \u003d 1; i \u003c\u003d foundTasks.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"            System.out.println(i + \". \" + foundTasks.get(i-1).toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"     * Retrieves all tasks in the TaskList whose descriptions contain some of the specified keywords.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"     * @param keywords for searching","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"     * @return list of tasks found","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"    private List\u003cTask\u003e getTasksFromKeyword(Set\u003cString\u003e keywords) {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        final List\u003cTask\u003e matchedTasks\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"        for(Task task : taskList.getAllTasks()){","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"            Set\u003cString\u003e descriptionWords\u003d new HashSet\u003c\u003e( Arrays.asList(task.getDescription().split(\" \")));","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"            if (descriptionWords.containsAll(keywords)){","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        return  matchedTasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":57}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD\u003d\"help\";","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\"+COMMAND_WORD + \": Shows program usage instructions.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public void execute(){","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(AddCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\" + ClearCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\" + DoneCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\" + FindCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\" + HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\" + ViewDoneCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\" + ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":23}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public void execute() {","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"       System.out.println(feedbackToUser);","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":19}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" * List all the tasks in the taskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD\u003d\"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE\u003d\"||\"+COMMAND_WORD+\": list the all the tasks in the task list.\" ;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public void execute(){","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"        if(taskList.getSize()\u003d\u003d0){","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"            System.out.println(\"There isn\u0027t any tasks in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            return;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"            System.out.println(i + \". \" + taskList.getTaskByIdx(i).toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":24}},{"path":"src/main/java/duke/commands/ViewDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":" * view and list all the tasks which is done during a specific period.","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"public class ViewDoneCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD\u003d\"viewdone\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE\u003d\"||\"+COMMAND_WORD+\": view the finished tasks done during a specific period.\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"            \"Syntax: \"+COMMAND_WORD+\" from/TIME to/TIME (all the time format is YYYY-MM-dd HHmm)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            \"Example: \"+COMMAND_WORD+\" from/2019-08-08 0800 to/2019-12-12 1200\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private LocalDateTime fromTime,toTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public ViewDoneCommand(LocalDateTime fromTime,LocalDateTime toTime){","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        this.fromTime\u003dfromTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        this.toTime\u003dtoTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public void execute(){","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        final List\u003cTask\u003e foundTasks\u003d getTasksFromTimePeriod(fromTime,toTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        if(foundTasks.isEmpty()){","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"            System.out.print(\"No Result Found\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"            return;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        for (int i \u003d 1; i \u003c\u003d foundTasks.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"            System.out.println(i + \". \" + foundTasks.get(i-1).toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"     * Retrieves all tasks in the TaskList whose finishTime is in a specific period","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"     * @return list of tasks found","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    private List\u003cTask\u003e getTasksFromTimePeriod(LocalDateTime fromTime,LocalDateTime toTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        final List\u003cTask\u003e matchedTasks\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        for(Task task : taskList.getAllTasks()){","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"            if(task.isDone()\u0026\u0026task.getFinishTime().isAfter(fromTime)\u0026\u0026task.getFinishTime().isBefore(toTime)){","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        return  matchedTasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":54}},{"path":"src/main/java/duke/common/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.common;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.exception.IllegalValueException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"public class Utils {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern BASIC_DATE_TIME_FORMAT\u003dPattern.compile(\"(?\u003cyear\u003e\\\\d{4})\"+\"-\"+\"(?\u003cmonth\u003e\\\\d{2})\"+","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"            \"-\"+\"(?\u003cday\u003e\\\\d{2})\"+","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            \" \"+\"(?\u003chour\u003e\\\\d{2})(?\u003cminute\u003e\\\\d{2})\");","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if every element the given collection are unique by {@link Object#equals(Object)}.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    public static  boolean elementsAreUnique(Collection\u003c?\u003e items){","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"        final Set\u003cObject\u003e testSet\u003dnew HashSet\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        for (Object item :items){","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"            final boolean itemAlreadyExists\u003d!testSet.add(item);// set is not allowed duplicate.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"            if(itemAlreadyExists){","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        return  true;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"     * get the LocalDateTime from a basic date time string format(YYYY-MM-dd HHmm)","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"     * @param timeString a basic datetime string","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"     * @return the result LocalDateTime","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"     * @throws IllegalValueException of the string format is not correct","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    public static LocalDateTime getDatetimeFromString(String timeString) throws IllegalValueException {","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        Matcher matcher\u003dBASIC_DATE_TIME_FORMAT.matcher(timeString.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"        if(!matcher.matches()){","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"            throw new IllegalValueException(\"Date format no match, please check your txt file format\");","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        return  LocalDateTime.of(Integer.parseInt(matcher.group(\"year\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"                Integer.parseInt(matcher.group(\"month\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"                Integer.parseInt(matcher.group(\"day\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"                Integer.parseInt(matcher.group(\"hour\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"                Integer.parseInt(matcher.group(\"minute\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":49}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.exception;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":4}},{"path":"src/main/java/duke/exception/DuplicateTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.exception;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":" * Signals that an operation would have violated the \u0027no duplicates\u0027 task of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"public class DuplicateTaskException extends Exception{","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"public DuplicateTaskException() { super(\"There is a same task which already existed in the task list.\");  }","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":10}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.exception;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class EmptyDescriptionException extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    private String message;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    public EmptyDescriptionException(String message)","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"        this.message\u003dmessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public String getMessage(){","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"        return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"Ruiting1":15}},{"path":"src/main/java/duke/exception/IllegalValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.exception;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"        super(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":13}},{"path":"src/main/java/duke/exception/UndefinedTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.exception;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class UndefinedTaskException extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"Ruiting1":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.commands.*;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.common.Utils;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.exception.IllegalValueException;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":" * Parses user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT\u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern KEYWORDS_ARGS_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        Pattern.compile(\"(?\u003ckeywords\u003e\\\\S+(?:\\\\s+\\\\S+)*)\"); // one or more keywords separated by whitespace","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern TASK_TYPE_DEADLINE_ARGS_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"                Pattern.compile(\"(?\u003cdeadlineDesc\u003e[^/]+)\"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"                        + \" by/(?\u003cbyYear\u003e\\\\d{4})\"+\"-\"+\"(?\u003cbyMonth\u003e\\\\d{2})\"+\"-\"+\"(?\u003cbyDay\u003e\\\\d{2})\"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"                        +\" \"+\"(?\u003cbyHour\u003e\\\\d{2})(?\u003cbyMin\u003e\\\\d{2})\");","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern TASK_TYPE_EVENT_ARGS_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"                Pattern.compile(\"(?\u003ceventDesc\u003e[^/]+)\"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"                        + \" at/(?\u003catYear\u003e\\\\d{4})\"+\"-\"+\"(?\u003catMonth\u003e\\\\d{2})\"+\"-\"+\"(?\u003catDay\u003e\\\\d{2})\"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"                        +\" \"+\"(?\u003catHour\u003e\\\\d{2})(?\u003catMin\u003e\\\\d{2})\");","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern TASK_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e\\\\d+)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern TASK_DONE_TIME_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"                Pattern.compile(\"(?\u003ctargetIndex\u003e\\\\d+)\"+\" on/\"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"                        +\"(?\u003cyear\u003e\\\\d{4})\"+\"-\"+\"(?\u003cmonth\u003e\\\\d{2})\"+\"-\"+\"(?\u003cday\u003e\\\\d{2})\"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"                        +\" \"+\"(?\u003chour\u003e\\\\d{2})(?\u003cminute\u003e\\\\d{2})\");","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern VIEW_DONE_TASK_BY_TIME_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"            Pattern.compile(\"from/(?\u003cfromTime\u003e[^/]+)\"+\" to/(?\u003ctoTime\u003e[^/]+)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"     * @param inputCommand full user input string","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"    public Command parse(String inputCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(inputCommand.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"                    \" you may type the list to see all the commands.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"        switch(commandWord){","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"            case AddCommand.COMMAND_WORD_ONE:","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"                return prepareAddTodo(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"            case AddCommand.COMMAND_WORD_TWO:","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"                return prepareAddDeadline(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"            case AddCommand.COMMAND_WORD_THREE:","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"                return prepareAddEvent(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"            case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"                return prepareDone(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"                return prepareDelete(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"                return prepareFind(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"            case ViewDoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"                return prepareViewDone(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"                return new ClearCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"     * Parses arguments in the context of the add todotask command.","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"    private Command prepareAddTodo(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"        return new AddCommand(new Todo(args.trim()));","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"     * Parses arguments in the context of the add deadline task command.","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"    private Command prepareAddDeadline(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"        final Matcher matcher\u003d TASK_TYPE_DEADLINE_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"                    \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"        return new AddCommand(new Deadline(matcher.group(\"deadlineDesc\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"                LocalDateTime.of(Integer.parseInt(matcher.group(\"byYear\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"                                 Integer.parseInt(matcher.group(\"byMonth\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"                                 Integer.parseInt(matcher.group(\"byDay\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"                                 Integer.parseInt(matcher.group(\"byHour\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"                                 Integer.parseInt(matcher.group(\"byMin\"))) ));","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"     * Parses arguments in the context of the add Event task command.","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"Ruiting1"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"Ruiting1"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"    private Command prepareAddEvent(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"        final Matcher matcher\u003d TASK_TYPE_EVENT_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"                    \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"Ruiting1"},"content":"        return new AddCommand(new Event(matcher.group(\"eventDesc\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"Ruiting1"},"content":"                LocalDateTime.of(Integer.parseInt(matcher.group(\"atYear\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"Ruiting1"},"content":"                                Integer.parseInt(matcher.group(\"atMonth\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"Ruiting1"},"content":"                                Integer.parseInt(matcher.group(\"atDay\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"Ruiting1"},"content":"                                Integer.parseInt(matcher.group(\"atHour\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"Ruiting1"},"content":"                                Integer.parseInt(matcher.group(\"atMin\"))) ));","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"Ruiting1"},"content":"     * Parses argument in the context of the mark a task as done command.","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"Ruiting1"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"    private Command prepareDone(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"Ruiting1"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"         Matcher matcher \u003dTASK_DONE_TIME_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"            int targetIndex\u003dInteger.parseInt((matcher.group(\"targetIndex\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"            return new DoneCommand(targetIndex,","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"                    LocalDateTime.of(Integer.parseInt(matcher.group(\"year\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"Ruiting1"},"content":"                                    Integer.parseInt(matcher.group(\"month\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"Ruiting1"},"content":"                                    Integer.parseInt(matcher.group(\"day\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"Ruiting1"},"content":"                                    Integer.parseInt(matcher.group(\"hour\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"Ruiting1"},"content":"                                    Integer.parseInt(matcher.group(\"minute\")))  );","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"Ruiting1"},"content":"        else{","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"Ruiting1"},"content":"            int targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"Ruiting1"},"content":"            return new DoneCommand(targetIndex,LocalDateTime.now());","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"Ruiting1"},"content":"        }catch (ParseException pe){","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"Ruiting1"},"content":"                    \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"Ruiting1"},"content":"     * Parses argument in the context of the delete a task command.","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"Ruiting1"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"Ruiting1"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"Ruiting1"},"content":"    private Command prepareDelete(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"Ruiting1"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"Ruiting1"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"Ruiting1"},"content":"            assert targetIndex\u003e0 : \"Invalid number, the index should be larger than 0.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"Ruiting1"},"content":"            return new DeleteCommand(targetIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"Ruiting1"},"content":"        }catch (ParseException pe){","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"Ruiting1"},"content":"                    \" you may type the list to see all the commands.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"Ruiting1"},"content":"     * Parses arguments in the context of the find task command.","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"Ruiting1"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":201,"author":{"gitId":"Ruiting1"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":202,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":203,"author":{"gitId":"Ruiting1"},"content":"    private Command prepareFind(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"Ruiting1"},"content":"        final  Matcher matcher\u003dKEYWORDS_ARGS_FORMAT.matcher((args.trim()));","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"Ruiting1"},"content":"        if(!matcher.matches()){","lastModifiedDate":"2021-09-17"},{"lineNumber":206,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":207,"author":{"gitId":"Ruiting1"},"content":"                    \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"Ruiting1"},"content":"        // keywords delimited by whitespace","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"Ruiting1"},"content":"        final String[] keywords \u003d matcher.group(\"keywords\").split(\"\\\\s+\");","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"Ruiting1"},"content":"        final Set\u003cString\u003e keywordSet \u003d new HashSet\u003c\u003e(Arrays.asList(keywords));","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"Ruiting1"},"content":"        return new FindCommand(keywordSet);","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":215,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":217,"author":{"gitId":"Ruiting1"},"content":"     * Parses arguments in the context of the viewdone task Command.","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"Ruiting1"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":219,"author":{"gitId":"Ruiting1"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"Ruiting1"},"content":"    private Command prepareViewDone(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":222,"author":{"gitId":"Ruiting1"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":223,"author":{"gitId":"Ruiting1"},"content":"            final Matcher matcher \u003d VIEW_DONE_TASK_BY_TIME_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":224,"author":{"gitId":"Ruiting1"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":225,"author":{"gitId":"Ruiting1"},"content":"                return new IncorrectCommand(\"This is a incorrect format, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"Ruiting1"},"content":"                        \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"Ruiting1"},"content":"            return new ViewDoneCommand(Utils.getDatetimeFromString(matcher.group(\"fromTime\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":229,"author":{"gitId":"Ruiting1"},"content":"                    Utils.getDatetimeFromString(matcher.group(\"toTime\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":230,"author":{"gitId":"Ruiting1"},"content":"        }catch (IllegalValueException ive){","lastModifiedDate":"2021-09-17"},{"lineNumber":231,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":232,"author":{"gitId":"Ruiting1"},"content":"                    \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":233,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":234,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":235,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":236,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":237,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":238,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":239,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":240,"author":{"gitId":"Ruiting1"},"content":"     * Parses the given arguments string as a single index number.","lastModifiedDate":"2021-09-17"},{"lineNumber":241,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":242,"author":{"gitId":"Ruiting1"},"content":"     * @param args arguments string to parse as index number","lastModifiedDate":"2021-09-17"},{"lineNumber":243,"author":{"gitId":"Ruiting1"},"content":"     * @return the parsed index number","lastModifiedDate":"2021-09-17"},{"lineNumber":244,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":245,"author":{"gitId":"Ruiting1"},"content":"    private int parseArgsAsDisplayedIndex(String args) throws ParseException{","lastModifiedDate":"2021-09-17"},{"lineNumber":246,"author":{"gitId":"Ruiting1"},"content":"        final Matcher matcher \u003d TASK_INDEX_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":247,"author":{"gitId":"Ruiting1"},"content":"        if(!matcher.matches()){","lastModifiedDate":"2021-09-17"},{"lineNumber":248,"author":{"gitId":"Ruiting1"},"content":"            throw   new  ParseException(\"Could not match to the correct index.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"Ruiting1"},"content":"        return Integer.parseInt(matcher.group(\"targetIndex\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":252,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":253,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":254,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":255,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":256,"author":{"gitId":"Ruiting1"},"content":"     * Signals that the user input could not be parsed.","lastModifiedDate":"2021-09-17"},{"lineNumber":257,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":258,"author":{"gitId":"Ruiting1"},"content":"    public static class ParseException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":259,"author":{"gitId":"Ruiting1"},"content":"        ParseException(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":260,"author":{"gitId":"Ruiting1"},"content":"            super(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":261,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":262,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":263,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":264,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":265,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":266,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":266}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.exception.IllegalValueException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    /** Default file path used if the user doesn\u0027t provide the file name. */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public final Path path;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public Storage() throws InvalidStorageFilePathException {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public Storage(String filePath) throws InvalidStorageFilePathException{","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        path\u003d Paths.get(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if the given path is acceptable as a storage file.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"     * The file path is considered acceptable if it ends with \u0027.txt\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"     * Saves the {@code taskList} data to the storage file.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"     * @throws StorageOperationException if there were errors converting and/or storing data to file.","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"    public void save(TaskList taskList) throws StorageOperationException{","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"        try{","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"            List\u003cString\u003e encodedTaskList\u003dTaskListEncorder.encodeTaskList(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"            Files.write(path,encodedTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        }catch (IOException ioe)","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"            throw new StorageOperationException(\"Saving went wrong\");","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"     * Loads the {@code taskList} data from this storage file, and then returns it.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"     * Returns an empty {@code taskList} if the file does not exist, or is not a regular file.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"     * @throws StorageOperationException if there were errors reading and/or converting data from file.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"    public TaskList load() throws StorageOperationException, IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"            return new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"            return TaskListDecoder.decodeTaskList(Files.readAllLines(path));","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"        }catch (IOException ioe){","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"            throw new StorageOperationException(\"Loading went wrong\");","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"        }catch (IllegalValueException ive){","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"            throw new StorageOperationException(\"File contains incorrect format.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"     * Signals that the given file path does not fulfill the storage filepath constraints.","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"    public static class InvalidStorageFilePathException extends IllegalValueException {","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"        public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"            super(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"     * Signals that some error has occured while trying to convert and read/write data between the application","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"     * and the storage file.","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"    public static class StorageOperationException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"        public StorageOperationException(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"            super(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":105}},{"path":"src/main/java/duke/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.common.Utils;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.exception.IllegalValueException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":" * Decodes the storage data file into an {@code taskList} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"public class TaskListDecoder {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern TODO_TXT_FILE_FORMAT\u003dPattern.compile(\"T[|](?\u003cisDone\u003e[01])[|](?\u003ctaskDesc\u003e[^|]+)[|]\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                                                                     \"(?\u003cfinishTime\u003e[^|]*)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern DEADLINE_TXT_FILE_FORMAT\u003dPattern.compile(\"D[|](?\u003cisDone\u003e[01])\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                                                                          \"[|](?\u003ctaskDesc\u003e[^|]+)\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"                                                                          \"[|](?\u003cplanTime\u003e[^|]+)[|]\"+","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"                                                                      \"(?\u003cfinishTime\u003e[^|]*)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern EVENT_TXT_FILE_FORMAT\u003dPattern.compile(\"E[|](?\u003cisDone\u003e[01])\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"                                                                       \"[|](?\u003ctaskDesc\u003e[^|]+)\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"                                                                       \"[|](?\u003cplanTime\u003e[^|]+)[|]\"+","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"                                                                        \"(?\u003cfinishTime\u003e[^|]*)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"     * Decodes {@code encodedTasklist} into an {@code TaskList} containing the decoded tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     * @throws IllegalValueException if any of the fields in any encoded task string is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    public static TaskList decodeTaskList(List\u003cString\u003e encodedTasklist) throws IllegalValueException {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        final List\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        for (String encodedTask : encodedTasklist){","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"            decodedTasks.add(decodeTaskFromString(encodedTask));","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"        return new TaskList(decodedTasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"     * Decodes {@code encodedTask} into a {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"     * @throws IllegalValueException if any field in the {@code encodedTask} is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    private static Task decodeTaskFromString(String encodedTask) throws IllegalValueException{","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        final Matcher matcherTodo \u003d TODO_TXT_FILE_FORMAT.matcher(encodedTask.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        final Matcher matcherDeadline \u003d DEADLINE_TXT_FILE_FORMAT.matcher(encodedTask.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"        final Matcher matcherEvent \u003d EVENT_TXT_FILE_FORMAT.matcher(encodedTask.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        boolean isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"            if (matcherTodo.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"                isDone\u003d\"1\".equals(matcherTodo.group(\"isDone\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"                return new Todo(matcherTodo.group(\"taskDesc\"), isDone,","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                        isDone? Utils.getDatetimeFromString(matcherTodo.group(\"finishTime\")) : null  );","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"            } else if (matcherDeadline.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"                isDone\u003d\"1\".equals(matcherDeadline.group(\"isDone\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"                return new Deadline(matcherDeadline.group(\"taskDesc\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"                         Utils.getDatetimeFromString(matcherDeadline.group(\"planTime\")), isDone,","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"                        isDone? Utils.getDatetimeFromString(matcherDeadline.group(\"finishTime\")) : null  );","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"            else if (matcherEvent.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"                isDone\u003d\"1\".equals(matcherEvent.group(\"isDone\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"                return new Event(matcherEvent.group(\"taskDesc\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"                        Utils.getDatetimeFromString(matcherEvent.group(\"planTime\")), isDone,","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"                        isDone? Utils.getDatetimeFromString(matcherEvent.group(\"finishTime\")) : null  );","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"            else throw new IllegalValueException(\"No match, please check your txt file format\");","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":88}},{"path":"src/main/java/duke/storage/TaskListEncorder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import main.java.duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":" * Encodes the {@code taskList} object into a data file for storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"public class TaskListEncorder {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"     * Encodes all the {@code Task} in the {@code toSave} into a list of decodable and readable string presentation","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"     * for storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    public static List\u003cString\u003e encodeTaskList(TaskList toSave){","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"        final List\u003cString\u003e encodedTasks\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"        for(int i\u003d1;i\u003c\u003dtoSave.getSize();i++){","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"            encodedTasks.add(encodeTaskToString(toSave.getTaskByIdx(i)));","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        return encodedTasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"     * Encodes the {@code task} into a decodable and readable string representation.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    private static String encodeTaskToString(Task task) {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        final StringBuilder encodedTaskBuilder \u003dnew StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        encodedTaskBuilder.append(task.getTaskType());","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        encodedTaskBuilder.append(\"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"        encodedTaskBuilder.append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        encodedTaskBuilder.append(\"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        encodedTaskBuilder.append(task.getDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        encodedTaskBuilder.append(\"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"        if(task.getTaskType()\u003d\u003d\"D\"||task.getTaskType()\u003d\u003d\"E\"){","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"            encodedTaskBuilder.append(task.getTaskTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"            encodedTaskBuilder.append(\"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        if(task.isDone()){","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"            encodedTaskBuilder.append(task.getFinishTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        return encodedTaskBuilder.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":55}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" * Represents a Deadline task","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    private static final String TASK_TYPE\u003d\"D\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a deadline task with description and time","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"     * by default the isDone is false","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"        this.by\u003dby;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a deadline task with description, time and isDone","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone,LocalDateTime finishTime){","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        super(description,isDone,finishTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        this.by\u003dby;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    public LocalDateTime getTaskTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        return by;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    public String getTaskType(){","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        return TASK_TYPE;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        if (! super.equals(obj)) return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        if (this.getClass() !\u003d obj.getClass())","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        Deadline d \u003d (Deadline) obj;","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"        return this.by.equals(d.by);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Ruiting1":54}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" * Represents a Event task","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    //protected String at;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    private static final String TASK_TYPE\u003d\"E\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"//    public Event(String description, String at) {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"//        super(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"//        this.at\u003dat;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a event task with description and time","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"     * by default the isDone is false","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    public Event(String description,LocalDateTime at) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        this.at\u003dat;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a event task with description, time and isDone","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    public Event(String description,LocalDateTime at, boolean isDone,LocalDateTime finishTime){","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        super(description,isDone,finishTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        this.at\u003dat;","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    public LocalDateTime getTaskTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        return at;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    public String getTaskType(){","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        return TASK_TYPE;","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        if (! super.equals(obj)) return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        if (this.getClass() !\u003d obj.getClass())","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        Event e \u003d (Event) obj;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        return this.at.equals(e.at);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"//    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"//    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"//        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Ruiting1":64}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" * Represents a task in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    private String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    private LocalDateTime taskTime\u003dLocalDateTime.of(2000,1,1,0,0);","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    private LocalDateTime finishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    private static final String TASK_TYPE\u003d\"A\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public Task(String description,boolean isDone,LocalDateTime finishTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        if(this.isDone){","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"            this.finishTime\u003dfinishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public LocalDateTime getFinishTime(){","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return finishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"     * Gets the displayed icon from isDone status","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"     * @return a string icon to display the status","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        //return (isDone ? \"\\u2714\" : \"\\u2718\"); //return tick or X symbols","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        return (isDone ? \"Done\"+\" : \"+finishTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"                : \"X\"); //return tick or X symbols","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"     * Marks a task as done status","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"     * @param finishTime","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"    public void markAsDone(LocalDateTime finishTime){","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        isDone\u003dtrue;","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        this.finishTime\u003dfinishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        return description;","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"    public boolean isDone(){","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        return isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"    public String getTaskType(){","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"        return TASK_TYPE;","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"    public LocalDateTime getTaskTime(){","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"        return taskTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"        Task otherTask \u003d (Task) obj;","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"        return obj \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"                || (obj instanceof Task // instanceof handles nulls","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherTask.description.equals(this.description)","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherTask.isDone \u003d\u003d this.isDone","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherTask.taskTime.equals(this.taskTime));","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"    public String toString(){","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"        return \"[\"+getStatusIcon()+\"] \"+getDescription();","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Ruiting1":83}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":" * A list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"public class TaskList implements Iterable\u003cTask\u003e{","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    private final List\u003cTask\u003e taskList\u003dnew ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"     * Construct an empty taskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    public TaskList(){ }","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"     * Construct a taskList with the given tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    public TaskList(Task[] tasks){","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        final List\u003cTask\u003e initialTasks\u003d Arrays.asList(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        taskList.addAll(initialTasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a taskList from the items in the given collection.","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"     * @param tasks a collection of tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    public TaskList(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        taskList.addAll(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a shallow copy of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    public TaskList(TaskList source){","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        taskList.addAll(source.taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"     * Adds a task to the list","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"     * @param toAdd the task to add","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    public void addTask(Task toAdd) throws DuplicateTaskException {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        if(contains(toAdd)){","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        taskList.add(toAdd);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"     * check if a task is already exist in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"     * @param toCheck the task to check","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"    public boolean contains(Task toCheck){","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        for(Task task : taskList){","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"            if(task.equals(toCheck)){","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"                return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"     * gets the specific task by index in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"     * @param taskIdx the index in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"     * @return a Task","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"    public Task getTaskByIdx(int taskIdx){","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"        return taskList.get(taskIdx-1);","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"     * Remove a task from a list based on Task Object","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"     * @param toRemove the Task to remove","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"    public void removeTask(Task toRemove){","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"        taskList.remove(toRemove);","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"     * Remove a task from the list based on the index","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"     * @param toRemoveIdx the index in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"    public void removeTask(int toRemoveIdx){","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"        taskList.remove(toRemoveIdx);","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"     * get the size of the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"     * @return the int size","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"    public int getSize(){","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"     * gets all the tasks in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"     * @return a new TaskList","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"    public TaskList getAllTasks(){","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"        return new TaskList(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"     * clear all the task in the tasklist","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"    public void clear() {","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"        taskList.clear();","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"        return taskList.iterator();","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"     * Signals that an operation would have violated the \u0027no duplicates\u0027 task of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"    public static class DuplicateTaskException extends Exception{","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"        public DuplicateTaskException() { super(\"There is a same task which already existed in the task list.\");  }","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":127}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":" * Represents a todoTask","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    private static final String TASK_TYPE\u003d\"T\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a todoTask with description","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"     * by default the isDone is false","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a todoTask with description and isDone","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public Todo(String description, boolean isDone, LocalDateTime finishTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        super(description,isDone,finishTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    public String getTaskType(){","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        return TASK_TYPE;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        if (! super.equals(obj)) return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        if (this.getClass() !\u003d obj.getClass())","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        else return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Ruiting1":45}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package main.java.duke.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    private static final String SEPARATE_LINE\u003d\"_________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    private static final String ERROR_LOADING_MSG\u003d\"Failed to load this Duke Application from storage file.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"     * Prints the welcome message upon the start of the application.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(SEPARATE_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(\"Hello! I am Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        System.out.println(SEPARATE_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     * read command from the userInput","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"     * @return the string of user input","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        out.print(\"Enter Command: \");","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        String line\u003din.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        return line;","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"     * show the divider line.","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"    public void showLine() {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        out.println(SEPARATE_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"     * show the error message","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"     * @param message the passed message to show","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        out.println(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"     * show the loading error message to the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"        out.print(ERROR_LOADING_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"todo borrow book","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"Ruiting1":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"java -classpath ..\\bin main.java.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ruiting1":2,"-":19}}]
