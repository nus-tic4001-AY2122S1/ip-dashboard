[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"import command.Command;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import task.*;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    public Duke() {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"            tasks \u003d new TaskList(storage);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"            ui.printErrorMsg(e);","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"     * Run loop of Duke.","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"    public void run() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"        boolean running \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"        ui.printHelloMsg();","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"        while (running) {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"                Command c \u003d Parser.parseInput(fullCommand);","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"                running \u003d !c.isExit();","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"                ui.printErrorMsg(e);","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"                ui.printErrorMsg(e);","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"ivanhlb"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ivanhlb":41,"-":4}},{"path":"src/main/java/command/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package command;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import task.*;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"    private String raw_time;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    private LocalDateTime check_time;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"    public String getCheck_time(){","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"        if(check_time !\u003d null){","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"            return check_time.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"        else return raw_time;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"     * Checks TaskList for tasks that have a date, and print them if they are on the same date.","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"     * TODO: Extend this such that it can return a plain string for un-parsable strings.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"        ui.printEventsOnDateMsg(getCheck_time());","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"            Task curr \u003d tasks.get(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"            if (curr.getClass() \u003d\u003d Event.class) {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"                Event e \u003d (Event) curr;","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"                LocalDateTime dateTime \u003d e.getStart_endTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"                if(dateTime !\u003d null){","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"                    if(dateTime.toLocalDate().isEqual(check_time.toLocalDate())){","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"                        ui.printTask(e);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"                        count++;","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"                    }","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"                else{","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ivanhlb"},"content":"                    String dateTimeStr \u003d e.getRaw_start_endTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ivanhlb"},"content":"                    if(dateTimeStr.equals(raw_time)){","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ivanhlb"},"content":"                        ui.printTask(e);","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"ivanhlb"},"content":"                        count++;","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"ivanhlb"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ivanhlb"},"content":"            if (curr.getClass() \u003d\u003d Deadline.class) {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"ivanhlb"},"content":"                Deadline d \u003d (Deadline) curr;","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"ivanhlb"},"content":"                //here we need to see if both can be converted to LocalDate.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ivanhlb"},"content":"                //Otherwise, just compare the strings.","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ivanhlb"},"content":"                LocalDateTime deadline \u003d d.getDeadline();","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ivanhlb"},"content":"                if(deadline !\u003d null){","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ivanhlb"},"content":"                    if(deadline.toLocalDate().isEqual(check_time.toLocalDate())){","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ivanhlb"},"content":"                        ui.printTask(d);","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"ivanhlb"},"content":"                        count++;","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"ivanhlb"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"ivanhlb"},"content":"                else{","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ivanhlb"},"content":"                    String deadlineStr \u003d d.getRaw_deadline();","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ivanhlb"},"content":"                    if(deadlineStr.equals(raw_time)){","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ivanhlb"},"content":"                        ui.printTask(d);","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ivanhlb"},"content":"                        count++;","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ivanhlb"},"content":"                    }","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"ivanhlb"},"content":"        if(count \u003d\u003d 0){","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"ivanhlb"},"content":"            ui.printNoEventOnDateMsg();","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"ivanhlb"},"content":"    public CheckCommand(String time_str) {","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"ivanhlb"},"content":"        raw_time \u003d time_str;","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"ivanhlb"},"content":"        check_time \u003d Parser.parseDateTimeStr(time_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":76}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package command;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"    protected boolean bExit \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"        return bExit;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":16}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package command;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"     * Writes to savefile, then prints goodbye message on console, finally flags for console to exit.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"        storage.writeToSaveFile(tasks.listTasks());","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"        ui.printByeMsg();","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"        bExit \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":21}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package command;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import task.Task;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    String search_str;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"        ArrayList\u003cTask\u003e search_res \u003d tasks.find(search_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"        ui.printFindResultsMsg(search_res);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"    public FindCommand(String search_str) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"        this.search_str \u003d search_str;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":22}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package command;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"        tasks.printTasks();","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":14}},{"path":"src/main/java/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package command;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeUnknownException;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"import task.*;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    public enum Operation {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"        Done, Delete, Add, Edit;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"    private Operation operation;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"    private int position;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"    private Task task;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"        return task;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"    public Operation getOperation() {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"        return operation;","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"     * Checks Operation tagged to command, executes it accordingly","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"     * Add: Adds task and prints added task to console","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"     * Done: prints task which was done and tags it as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"     * Delete: removes task from tasks before printing message.","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"     * Edit: edits tasks and replaces previous iteration of task in list.","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"     * Default: Throws DukeUnknown error as UpdateCommand should only have Add, Done, Delete.","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"     * @param tasks","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"     * @param ui","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"     * @param storage","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"ivanhlb"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"ivanhlb"},"content":"        switch (operation) {","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"ivanhlb"},"content":"            case Add:","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"ivanhlb"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"ivanhlb"},"content":"                ui.printAddMsg(tasks);","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"ivanhlb"},"content":"            case Done:","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"ivanhlb"},"content":"                ui.printDoneMsg(tasks, position);","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"ivanhlb"},"content":"                tasks.done(position);","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"ivanhlb"},"content":"            case Delete:","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"ivanhlb"},"content":"                ui.printDeleteMsg(tasks.remove(position), tasks);","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"ivanhlb"},"content":"            case Edit:","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"ivanhlb"},"content":"                Task e_task \u003d tasks.get(position);","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"ivanhlb"},"content":"                ui.printEditTaskMsg(e_task);","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"ivanhlb"},"content":"                e_task.setDescription(ui.readCommand());","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"ivanhlb"},"content":"                if (e_task.getClass() \u003d\u003d Deadline.class || e_task.getClass() \u003d\u003d Event.class) {","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"ivanhlb"},"content":"                    ui.printEditDateMsg();","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"ivanhlb"},"content":"                    String date_str \u003d ui.readCommand();","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"ivanhlb"},"content":"                    if (e_task.getClass() \u003d\u003d Deadline.class) {","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"ivanhlb"},"content":"                        Deadline d \u003d (Deadline) e_task;","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"ivanhlb"},"content":"                        d.setDeadline(date_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"ivanhlb"},"content":"                        e_task \u003d d;","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"ivanhlb"},"content":"                    } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"ivanhlb"},"content":"                        Event e \u003d (Event) e_task;","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"ivanhlb"},"content":"                        e.setStart_endTime(date_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"ivanhlb"},"content":"                        e_task \u003d e;","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"ivanhlb"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"ivanhlb"},"content":"                tasks.edit(position, e_task);","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"ivanhlb"},"content":"                ui.printTask(tasks.get(position));","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"ivanhlb"},"content":"            default:","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"ivanhlb"},"content":"                ui.printErrorMsg(new DukeUnknownException());","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"ivanhlb"},"content":"    public UpdateCommand(Operation operation, int pos) {    //inputted index is not valid. Try again.","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"ivanhlb"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"ivanhlb"},"content":"        position \u003d pos;","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"ivanhlb"},"content":"    public UpdateCommand(Operation operation, Task task) {","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"ivanhlb"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"ivanhlb"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":89}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package exception;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"public abstract class DukeException extends Exception  {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":5}},{"path":"src/main/java/exception/DukeMissingDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package exception;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"public class DukeMissingDescException extends DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"    private String message;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"    public DukeMissingDescException(String classStr) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"        this.message \u003d String.format(\"OOPS!!! The description of %s cannot be empty.\", classStr);","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"        return message;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":12}},{"path":"src/main/java/exception/DukeMissingParamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package exception;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"public class DukeMissingParamException extends DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"    private String message;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"    public DukeMissingParamException(String command) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"        this.message \u003d String.format(\"OOPS!!! The parameter of %s cannot be empty.\", command);","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"        return message;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":12}},{"path":"src/main/java/exception/DukeUnknownException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package exception;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"public class DukeUnknownException extends DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":8}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"import java.io.File;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"public class Storage {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"    private String path_str;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"     * @param t","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"     * @return false means no saved data, true means has saved data.","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"    public void readSaveFile(TaskList t) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"        File f \u003d new File(path_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"            System.out.println(\"Save file not found. Creating new file!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"            f \u003d writeToSaveFile(\"\");","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"            System.out.println(f.getAbsolutePath());","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"        loadSaveFile(f, t);","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"    public void loadSaveFile(File f, TaskList t) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"                t.add(s.nextLine());","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"ivanhlb"},"content":"     * @param s string representation of data to be saved.","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"ivanhlb"},"content":"     * @return Writes s to savefile at ./data/duke.txt, overwriting the original content.","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"ivanhlb"},"content":"    public File writeToSaveFile(String s) {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"ivanhlb"},"content":"        File f \u003d new File(path_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"ivanhlb"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"ivanhlb"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"ivanhlb"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"ivanhlb"},"content":"            FileWriter fw \u003d new FileWriter(path_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"ivanhlb"},"content":"            fw.write(s);","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"ivanhlb"},"content":"            fw.close();","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"ivanhlb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"ivanhlb"},"content":"        return f;","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"ivanhlb"},"content":"    public Storage(String path_str) {","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"ivanhlb"},"content":"        this.path_str \u003d (!path_str.isEmpty() || !path_str.isBlank())? path_str : \"duke.txt\";","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":64}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package task;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeMissingDescException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    private String raw_deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"     * @return DateTime representation of this Deadline object","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"        return deadline;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"    public String getRaw_deadline(){","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"        return raw_deadline;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"     * Sets or updates this object\u0027s deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"     * @param deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"        this.raw_deadline \u003d deadline;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"        this.deadline \u003d Parser.parseDateTimeStr(deadline);","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"    public Deadline(String description, String deadline) throws DukeMissingDescException {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"        setDeadline(deadline);","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"        String dateString \u003d (getDeadline() !\u003d null) ? getDeadline().toString() : getRaw_deadline();","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dateString);","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":38}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package task;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeMissingDescException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    private LocalDateTime start_endTime;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"    private String raw_start_endTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    public String getRaw_start_endTime() {","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"        return raw_start_endTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"    public LocalDateTime getStart_endTime() {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"        return start_endTime;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"    public void setStart_endTime(String start_endTime) {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"        this.raw_start_endTime \u003d start_endTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"        this.start_endTime \u003d Parser.parseDateTimeStr(start_endTime);","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"    public Event(String description, String start_endTime) throws DukeMissingDescException {","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"        setStart_endTime(start_endTime);","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"        String dateStr \u003d (getStart_endTime() !\u003d null) ? getStart_endTime().toString() : getRaw_start_endTime();","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), dateStr);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":36}},{"path":"src/main/java/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package task;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import command.*;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import exception.*;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"public class Parser {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"     * @param dt_str String representing LocalDateTime","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"     * @return A LocalDateTime object as closely corresponding to dt_str","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"    public static LocalDateTime parseDateTimeStr(String dt_str) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"        //early exit.","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"        if (Parser.isValidISODateTimeStr(dt_str)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"            return LocalDateTime.parse(dt_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"        LocalDateTime parsed_time;","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"        if (Parser.isValidISODateStr(dt_str)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"            date \u003d LocalDate.parse(dt_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"        } else if (Parser.isValidISOTimeStr(dt_str)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"            time \u003d LocalTime.parse(dt_str);","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"        } else {  //do magic parsing...","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"            //2/12/2019 1800","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"            //dd/mm/yyyy tttt","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"            String[] temp \u003d dt_str.split(\" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"            //First, if contains alphabets, it will have stuff like \"Sunday\", etc. If so, don\u0027t parse to datetime.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"            for (String s : temp) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"                var charArr \u003d s.toCharArray();","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"                for (char c : charArr) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ivanhlb"},"content":"                    if (Character.isAlphabetic(c)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ivanhlb"},"content":"                        return null;","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ivanhlb"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ivanhlb"},"content":"            if (temp[0].indexOf(\u0027/\u0027) !\u003d -1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"ivanhlb"},"content":"                date \u003d strToDate(temp[0], \u0027/\u0027);","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"ivanhlb"},"content":"            if (temp[0].indexOf(\u0027-\u0027) !\u003d -1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"ivanhlb"},"content":"                date \u003d strToDate(temp[0], \u0027-\u0027);","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"ivanhlb"},"content":"            if (temp.length \u003e 1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"ivanhlb"},"content":"                time \u003d strToTime(temp[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"ivanhlb"},"content":"            } else if (date \u003d\u003d null) {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"ivanhlb"},"content":"                time \u003d strToTime(temp[0]);","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"ivanhlb"},"content":"        parsed_time \u003d LocalDateTime.of((date \u003d\u003d null) ? LocalDate.now() : date, (time \u003d\u003d null) ? LocalTime.MIDNIGHT : time);","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"ivanhlb"},"content":"        return parsed_time;","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"ivanhlb"},"content":"    private static LocalDate strToDate(String s, char split) {","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"ivanhlb"},"content":"        String[] date_strs \u003d s.split(String.valueOf(split));","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"ivanhlb"},"content":"        return LocalDate.of(Integer.parseInt(date_strs[2]), Integer.parseInt(date_strs[1]), Integer.parseInt(date_strs[0]));","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"ivanhlb"},"content":"    private static LocalTime strToTime(String s) {","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"ivanhlb"},"content":"        LocalTime time;","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"ivanhlb"},"content":"        if (Parser.isValidISOTimeStr(s))","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"ivanhlb"},"content":"            time \u003d LocalTime.parse(s);","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"ivanhlb"},"content":"        else {","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"ivanhlb"},"content":"            int hr, min;","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"ivanhlb"},"content":"            if (s.indexOf(\u0027:\u0027) !\u003d -1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"ivanhlb"},"content":"                String[] time_strs \u003d s.split(\":\");","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"ivanhlb"},"content":"                hr \u003d Integer.parseInt(time_strs[0]);","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"ivanhlb"},"content":"                min \u003d Integer.parseInt(time_strs[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"ivanhlb"},"content":"            } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"ivanhlb"},"content":"                hr \u003d Integer.parseInt(s.substring(0, 2));","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"ivanhlb"},"content":"                min \u003d Integer.parseInt(s.substring(2));","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"ivanhlb"},"content":"            time \u003d LocalTime.of(hr, min);","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"ivanhlb"},"content":"        return time;","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"ivanhlb"},"content":"    //region validity checks for string parsing.","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"ivanhlb"},"content":"    private static boolean isValidISODateTimeStr(String s) {","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"ivanhlb"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"ivanhlb"},"content":"            LocalDateTime.parse(s);","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"ivanhlb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"ivanhlb"},"content":"            return false;","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"ivanhlb"},"content":"        return true;","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"ivanhlb"},"content":"    private static boolean isValidISODateStr(String s) {","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"ivanhlb"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"ivanhlb"},"content":"            LocalDate.parse(s);","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"ivanhlb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"ivanhlb"},"content":"            return false;","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"ivanhlb"},"content":"        return true;","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"ivanhlb"},"content":"    private static boolean isValidISOTimeStr(String s) {","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"ivanhlb"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"ivanhlb"},"content":"            LocalTime.parse(s);","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"ivanhlb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"ivanhlb"},"content":"            return false;","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"ivanhlb"},"content":"        return true;","lastModifiedDate":"2021-08-14"},{"lineNumber":111,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":112,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"ivanhlb"},"content":"    //endregion","lastModifiedDate":"2021-08-14"},{"lineNumber":114,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":115,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":117,"author":{"gitId":"ivanhlb"},"content":"     * @param inputStr raw String representing user\u0027s action","lastModifiedDate":"2021-08-14"},{"lineNumber":118,"author":{"gitId":"ivanhlb"},"content":"     * @return Command that program can execute.","lastModifiedDate":"2021-08-14"},{"lineNumber":119,"author":{"gitId":"ivanhlb"},"content":"     * @throws DukeUnknownException     if Parser is unable to understand inputStr","lastModifiedDate":"2021-08-14"},{"lineNumber":120,"author":{"gitId":"ivanhlb"},"content":"     * @throws DukeMissingDescException if Parser finds that action is missing a description","lastModifiedDate":"2021-08-14"},{"lineNumber":121,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":122,"author":{"gitId":"ivanhlb"},"content":"    public static Command parseInput(String inputStr) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":123,"author":{"gitId":"ivanhlb"},"content":"        Command parsedCommand;","lastModifiedDate":"2021-08-14"},{"lineNumber":124,"author":{"gitId":"ivanhlb"},"content":"        String[] strings \u003d inputStr.split(\"[\\\\s]+\");","lastModifiedDate":"2021-08-14"},{"lineNumber":125,"author":{"gitId":"ivanhlb"},"content":"        String firstStr \u003d strings[0].strip().toLowerCase();","lastModifiedDate":"2021-08-14"},{"lineNumber":126,"author":{"gitId":"ivanhlb"},"content":"        switch (firstStr) {","lastModifiedDate":"2021-08-14"},{"lineNumber":127,"author":{"gitId":"ivanhlb"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-14"},{"lineNumber":128,"author":{"gitId":"ivanhlb"},"content":"                parsedCommand \u003d new ExitCommand();","lastModifiedDate":"2021-08-14"},{"lineNumber":129,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":130,"author":{"gitId":"ivanhlb"},"content":"            case \"list\":","lastModifiedDate":"2021-08-14"},{"lineNumber":131,"author":{"gitId":"ivanhlb"},"content":"                parsedCommand \u003d new ListCommand();","lastModifiedDate":"2021-08-14"},{"lineNumber":132,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":133,"author":{"gitId":"ivanhlb"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-14"},{"lineNumber":134,"author":{"gitId":"ivanhlb"},"content":"            case \"done\":","lastModifiedDate":"2021-08-14"},{"lineNumber":135,"author":{"gitId":"ivanhlb"},"content":"            case \"edit\":","lastModifiedDate":"2021-08-14"},{"lineNumber":136,"author":{"gitId":"ivanhlb"},"content":"                int pos \u003d Integer.parseInt(strings[1]) - 1; //pos.minValue \u003d 0, cannot be negative.","lastModifiedDate":"2021-08-14"},{"lineNumber":137,"author":{"gitId":"ivanhlb"},"content":"                if (pos \u003c 0) {","lastModifiedDate":"2021-08-14"},{"lineNumber":138,"author":{"gitId":"ivanhlb"},"content":"                    throw new IndexOutOfBoundsException(\"invalid number detected, please input a number starting from 1.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":139,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":140,"author":{"gitId":"ivanhlb"},"content":"                UpdateCommand.Operation op \u003d UpdateCommand.Operation.valueOf(firstStr.substring(0, 1).toUpperCase() + firstStr.substring(1));","lastModifiedDate":"2021-08-14"},{"lineNumber":141,"author":{"gitId":"ivanhlb"},"content":"                parsedCommand \u003d (!firstStr.equals(\"edit\")) ? new UpdateCommand(op, pos) : new UpdateCommand(UpdateCommand.Operation.Edit, pos);","lastModifiedDate":"2021-08-14"},{"lineNumber":142,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":143,"author":{"gitId":"ivanhlb"},"content":"            case \"check\":","lastModifiedDate":"2021-08-14"},{"lineNumber":144,"author":{"gitId":"ivanhlb"},"content":"                if (strings.length \u003e 1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":145,"author":{"gitId":"ivanhlb"},"content":"                    parsedCommand \u003d new CheckCommand(strings[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":146,"author":{"gitId":"ivanhlb"},"content":"                } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":147,"author":{"gitId":"ivanhlb"},"content":"                    throw new DukeMissingParamException(\"check\");","lastModifiedDate":"2021-08-14"},{"lineNumber":148,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":149,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":150,"author":{"gitId":"ivanhlb"},"content":"            case \"find\":","lastModifiedDate":"2021-08-14"},{"lineNumber":151,"author":{"gitId":"ivanhlb"},"content":"                int startIndex \u003d inputStr.indexOf(strings[0]) + strings[0].length();","lastModifiedDate":"2021-08-14"},{"lineNumber":152,"author":{"gitId":"ivanhlb"},"content":"                parsedCommand \u003d new FindCommand(inputStr.substring(startIndex).strip());","lastModifiedDate":"2021-08-14"},{"lineNumber":153,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":154,"author":{"gitId":"ivanhlb"},"content":"            default:    //task processing.","lastModifiedDate":"2021-08-14"},{"lineNumber":155,"author":{"gitId":"ivanhlb"},"content":"                if (firstStr.isBlank() || firstStr.isEmpty())","lastModifiedDate":"2021-08-14"},{"lineNumber":156,"author":{"gitId":"ivanhlb"},"content":"                    throw new DukeUnknownException();","lastModifiedDate":"2021-08-14"},{"lineNumber":157,"author":{"gitId":"ivanhlb"},"content":"                parsedCommand \u003d new UpdateCommand(UpdateCommand.Operation.Add, processTask(strings));","lastModifiedDate":"2021-08-14"},{"lineNumber":158,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":159,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":160,"author":{"gitId":"ivanhlb"},"content":"        return parsedCommand;","lastModifiedDate":"2021-08-14"},{"lineNumber":161,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":162,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":163,"author":{"gitId":"ivanhlb"},"content":"    private static Task processTask(String[] inputStrs) throws DukeUnknownException, DukeMissingDescException {","lastModifiedDate":"2021-08-14"},{"lineNumber":164,"author":{"gitId":"ivanhlb"},"content":"        String tempStr \u003d \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":165,"author":{"gitId":"ivanhlb"},"content":"        Task createdTask;","lastModifiedDate":"2021-08-14"},{"lineNumber":166,"author":{"gitId":"ivanhlb"},"content":"        switch (inputStrs[0].toLowerCase()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":167,"author":{"gitId":"ivanhlb"},"content":"            default:","lastModifiedDate":"2021-08-14"},{"lineNumber":168,"author":{"gitId":"ivanhlb"},"content":"                throw new DukeUnknownException();","lastModifiedDate":"2021-08-14"},{"lineNumber":169,"author":{"gitId":"ivanhlb"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-14"},{"lineNumber":170,"author":{"gitId":"ivanhlb"},"content":"                for (int i \u003d 1; i \u003c inputStrs.length; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":171,"author":{"gitId":"ivanhlb"},"content":"                    tempStr \u003d tempStr.concat(String.format(\"%s \", inputStrs[i]));","lastModifiedDate":"2021-08-14"},{"lineNumber":172,"author":{"gitId":"ivanhlb"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":173,"author":{"gitId":"ivanhlb"},"content":"                createdTask \u003d new ToDo(tempStr.stripTrailing()); //remove extra space added on last elem.","lastModifiedDate":"2021-08-14"},{"lineNumber":174,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":175,"author":{"gitId":"ivanhlb"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-14"},{"lineNumber":176,"author":{"gitId":"ivanhlb"},"content":"            case \"event\":","lastModifiedDate":"2021-08-14"},{"lineNumber":177,"author":{"gitId":"ivanhlb"},"content":"                createdTask \u003d parseEventOrDeadline(inputStrs);","lastModifiedDate":"2021-08-14"},{"lineNumber":178,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":179,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":180,"author":{"gitId":"ivanhlb"},"content":"        return createdTask;","lastModifiedDate":"2021-08-14"},{"lineNumber":181,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":182,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":183,"author":{"gitId":"ivanhlb"},"content":"    private static Task parseEventOrDeadline(String[] inputStrs) throws DukeMissingDescException {","lastModifiedDate":"2021-08-14"},{"lineNumber":184,"author":{"gitId":"ivanhlb"},"content":"        String tempStr1 \u003d \"\", tempStr2 \u003d \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":185,"author":{"gitId":"ivanhlb"},"content":"        int delimiterIndex \u003d Arrays.asList(inputStrs).indexOf((inputStrs[0].equals(\"event\")) ? \"/at\" : \"/by\");","lastModifiedDate":"2021-08-14"},{"lineNumber":186,"author":{"gitId":"ivanhlb"},"content":"        for (int i \u003d 1; i \u003c delimiterIndex; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":187,"author":{"gitId":"ivanhlb"},"content":"            tempStr1 \u003d tempStr1.concat(String.format(\"%s \", inputStrs[i]));","lastModifiedDate":"2021-08-14"},{"lineNumber":188,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":189,"author":{"gitId":"ivanhlb"},"content":"        for (int i \u003d delimiterIndex + 1; i \u003c inputStrs.length; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":190,"author":{"gitId":"ivanhlb"},"content":"            tempStr2 \u003d tempStr2.concat(String.format(\"%s \", inputStrs[i]));","lastModifiedDate":"2021-08-14"},{"lineNumber":191,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":192,"author":{"gitId":"ivanhlb"},"content":"        tempStr1 \u003d tempStr1.strip();","lastModifiedDate":"2021-08-14"},{"lineNumber":193,"author":{"gitId":"ivanhlb"},"content":"        tempStr2 \u003d tempStr2.strip();","lastModifiedDate":"2021-08-14"},{"lineNumber":194,"author":{"gitId":"ivanhlb"},"content":"        return (inputStrs[0].equals(\"event\")) ? new Event(tempStr1, tempStr2) : new Deadline(tempStr1, tempStr2);","lastModifiedDate":"2021-08-14"},{"lineNumber":195,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":196,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":196}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package task;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeMissingDescException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":" * Abstract Task class cannot be directly instantiated, only subclasses can.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"    public static final char CHECKMARK \u003d \u0027\\u2713\u0027, CROSSMARK \u003d \u0027\\u274C\u0027;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"        return isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"        return description;","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"    public Task(String description) throws DukeMissingDescException {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"        setDescription(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"        if(description.isEmpty() || description.isBlank())","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"            throw new DukeMissingDescException(getClass().getSimpleName().toLowerCase());","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"        setDone(false);","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"        return String.format(\"[%s] %s\", (isDone) ? CHECKMARK : CROSSMARK, getDescription());","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":40}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package task;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeUnknownException;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"public class TaskList {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    public static String listTasks(ArrayList\u003cTask\u003e task_list) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"        String tasksStr \u003d \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"        for (Task t : task_list) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"            tasksStr +\u003d String.format(\"%d: %s\\n\", ++i, t);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"        return tasksStr;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"    public String listTasks() {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"        return listTasks(tasks);","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"    public String printTasks() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"        String list \u003d listTasks(tasks);","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"        System.out.print(list);","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"        return list;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"    public boolean add(String s) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"        Task t;","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"        boolean done \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"        String[] str_arr \u003d s.split(\" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"        int startDescIndex \u003d s.indexOf(String.format(\"[%c]\", Task.CHECKMARK));  // done","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"        int lastDescIndex \u003d s.length();","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"        if (startDescIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"            startDescIndex \u003d s.indexOf(String.format(\"[%c]\", Task.CROSSMARK));  //not done","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"            done \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"ivanhlb"},"content":"        switch (str_arr[1].charAt(1)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"ivanhlb"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"ivanhlb"},"content":"                //1: [D][X] tic2002 (by: today)","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ivanhlb"},"content":"                lastDescIndex \u003d s.lastIndexOf(\" (by: \");","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"ivanhlb"},"content":"                t \u003d new Deadline(s.substring(startDescIndex + 4, lastDescIndex), s.substring(lastDescIndex + 6, s.length() - 1));","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"ivanhlb"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"ivanhlb"},"content":"                //2: [E][X] tp visit (at: today)","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ivanhlb"},"content":"                lastDescIndex \u003d s.lastIndexOf(\" (at: \");","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"ivanhlb"},"content":"                t \u003d new Event(s.substring(startDescIndex + 4, lastDescIndex), s.substring(lastDescIndex + 6, s.length() - 1));","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"ivanhlb"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"ivanhlb"},"content":"                //234: [T][X] awd","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ivanhlb"},"content":"                t \u003d new ToDo(s.substring(startDescIndex + 4, lastDescIndex));","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"ivanhlb"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"ivanhlb"},"content":"            default:","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"ivanhlb"},"content":"                throw new DukeUnknownException();","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"ivanhlb"},"content":"        t.setDone(done);","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"ivanhlb"},"content":"        return tasks.add(t);","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"ivanhlb"},"content":"    public boolean add(Task t) {","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"ivanhlb"},"content":"        return tasks.add(t);","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"ivanhlb"},"content":"    public Task remove(int i) {","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"ivanhlb"},"content":"        if (i \u003c this.size())","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"ivanhlb"},"content":"            return tasks.remove(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"ivanhlb"},"content":"        else throw new IndexOutOfBoundsException(\"Index out of bounds\");","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"ivanhlb"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"ivanhlb"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"ivanhlb"},"content":"    public ArrayList\u003cTask\u003e find(String s) {","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"ivanhlb"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"ivanhlb"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"ivanhlb"},"content":"            if (t.getDescription().toLowerCase().contains(s.toLowerCase())) {","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"ivanhlb"},"content":"                result.add(t);","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"ivanhlb"},"content":"        return result;","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"ivanhlb"},"content":"    public void done(int i) {","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"ivanhlb"},"content":"        Task currTask \u003d get(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"ivanhlb"},"content":"        assert currTask !\u003d null;","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"ivanhlb"},"content":"        currTask.setDone(true);","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"ivanhlb"},"content":"    public int size() {","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"ivanhlb"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"ivanhlb"},"content":"    public void edit(int pos, Task t) {","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"ivanhlb"},"content":"        assert pos \u003c tasks.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"ivanhlb"},"content":"        tasks.set(pos, t);","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"ivanhlb"},"content":"    public TaskList(Storage s) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"ivanhlb"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"ivanhlb"},"content":"        s.readSaveFile(this);","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":104}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package task;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import exception.DukeMissingDescException;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"    public ToDo(String description) throws DukeMissingDescException {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":15}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"package ui;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"import task.Task;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ivanhlb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ivanhlb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ivanhlb"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ivanhlb"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ivanhlb"},"content":" * Primarily for printing messages to console, also passes input to Parser.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ivanhlb"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ivanhlb"},"content":"public class Ui {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ivanhlb"},"content":"    private Scanner input;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ivanhlb"},"content":"    public void printTask(Task t) {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ivanhlb"},"content":"    public void printEventsOnDateMsg(LocalDateTime dt) {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(String.format(\"Events and Deadlines on %s\", dt.toLocalDate().toString()));","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ivanhlb"},"content":"    public void printEventsOnDateMsg(String dt) {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(String.format(\"Events and Deadlines on %s\", dt));","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ivanhlb"},"content":"    public void printNoEventOnDateMsg() {","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(\"No events on this date.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ivanhlb"},"content":"    public void printFindResultsMsg(ArrayList\u003cTask\u003e results){","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ivanhlb"},"content":"        if(results.size() !\u003d 0) {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ivanhlb"},"content":"            System.out.println(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ivanhlb"},"content":"            System.out.println(TaskList.listTasks(results));","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"ivanhlb"},"content":"        }else {","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"ivanhlb"},"content":"            System.out.println(\"No results found!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"ivanhlb"},"content":"    public void printEditTaskMsg(Task t) {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(String.format(\"Editing task: %s\", t.toString()));","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(String.format(\"Input new description for %s.\", t.getClass().getSimpleName()));","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"ivanhlb"},"content":"    public void printEditDateMsg() {","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(\"Input new date for event/deadline.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"ivanhlb"},"content":"    public void printAddMsg(TaskList tasks) {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(tasks.get(tasks.size() - 1).toString());   //increment size after printing the task added.","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(String.format(\"Now you have %d %s in the list.\", tasks.size(), (tasks.size() \u003e 1) ? \"tasks\" : \"task\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"ivanhlb"},"content":"    public void printByeMsg() {","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"ivanhlb"},"content":"    public void printDeleteMsg(Task currTask, TaskList tasks) {","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(String.format(\"Noted. I\u0027ve removed this task:\\n %s\\nNow you have %d tasks in the list.\", currTask, tasks.size()));","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"ivanhlb"},"content":"    public void printDoneMsg(TaskList t, int pos) {","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"ivanhlb"},"content":"        Task currTask \u003d t.get(pos);","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"ivanhlb"},"content":"        if (currTask.isDone()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"ivanhlb"},"content":"            System.out.println(\"Task is already done.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"ivanhlb"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"ivanhlb"},"content":"            System.out.println(String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", currTask));","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"ivanhlb"},"content":"    public void printErrorMsg(Exception e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"ivanhlb"},"content":"    public void printHelloMsg() {","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"ivanhlb"},"content":"        System.out.println(\"Hello! I\u0027m Duke Nuke Em.\\nWhat can I do for you?\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"ivanhlb"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"ivanhlb"},"content":"     * @return reads user\u0027s input to be parsed by Parser","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"ivanhlb"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"ivanhlb"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"ivanhlb"},"content":"        String inputStr \u003d \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"ivanhlb"},"content":"        while (inputStr.isEmpty() || inputStr.isEmpty()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"ivanhlb"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"ivanhlb"},"content":"                inputStr \u003d input.nextLine().strip();","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"ivanhlb"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"ivanhlb"},"content":"                System.out.println(\"Error parsing input. Try again.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"ivanhlb"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"ivanhlb"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"ivanhlb"},"content":"        assert !inputStr.isEmpty() \u0026\u0026 !inputStr.isEmpty();","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"ivanhlb"},"content":"        return inputStr;","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"ivanhlb"},"content":"    public Ui() {","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"ivanhlb"},"content":"        input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"ivanhlb"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"ivanhlb"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ivanhlb":99}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanhlb"},"content":"todo borrow book","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ivanhlb"},"content":"bye","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ivanhlb":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ivanhlb"},"content":"REM ensuring that CMD is running in the correct mode. refer to https://stackoverflow.com/questions/20386335/printing-out-unicode-from-java-code-issue-in-windows-console","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ivanhlb"},"content":"chcp 65001","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ivanhlb"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"ivanhlb"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ivanhlb":4,"-":20}}]
