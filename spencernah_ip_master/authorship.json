[{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"0;E;false;task1;2019-06-08;-1;-1","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"1;T;true;task2;;-1;-1","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"2;E;false;task3;2019-06-09;-1;-1","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"3;E;false;hello;2020-10-01;-1;-1","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"### Create a task list that you can review and modify anytime","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"When you create your task list in Duke, it remembers your task so that you can review it again at any point of time.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"### Different ways to view your list","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"Duke allows you to view your task list in different ways; by date, status or everything.","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"### todo - creates a to-do task","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"Example of usage:","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"`todo \u003cname of task\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"Expected outcome: A to-do task will be added to your task list","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"### event - creates an event ","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"Example of usage: `event \u003cname of event\u003e /\u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"Expected outcome: An event and it\u0027s date will be added to your task list","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"### deadline - creates a deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"Example of usage: `deadline \u003cname of event\u003e /\u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"Expected outcome: A deadline and it\u0027s date will be added to your task list","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"### done - marks a task as completed","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"Example of usage: `done \u003ctask index\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"Expected outcome: The corresponding task will be marked as completed","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"### delete - deletes a task","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"Example of usage: `delete \u003ctask index\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"Expected outcome: The corresponding task will be deleted","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"### list - display the entire task list","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"Example of usage: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"Expected outcome: Full task list will be displayed","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"### list pending - display incomplete task","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"Example of usage: `list pending`","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"Expected outcome: Only tasks that have not been marked as \"done\" will be displayed","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"### list date - view tasks that falls on the specified date","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"Example of usage: `list date \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"Expected outcome: Only events and deadlines that coincides with the input date will be displayed","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"### find - search for a task based on keywords ","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"Example of usage: `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"Expected outcome: Only tasks with keyword in it\u0027s name will be displayed","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"### bye - closes the app","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"Example of usage: `bye`","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"Expected outcome: Exits Duke","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"spencernah":49,"-":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import java.io.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"public class Duke {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"        new Duke(\"C:\\\\Users\\\\User\\\\Documents\\\\ip\\\\data\\\\data.txt\").run();","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     * @param filePath argument is the directory where the data for the existing task list (if any) is stored.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     *                 The argument is hardcoded at the moment.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"            ui.print(\"No existing To Do List. Generating a new one\");","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"            ui.print(\"Unable to read specific lines in data.txt file\");","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"            ui.print(\"Dates in the data.txt file is incompatible. Duke reads date in \" + DateFormat.STANDARD + \" only\");","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"    /** Runs the program until termination.  */","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"    public void run() {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        boolean firstRun \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"        Command c;","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"                if (firstRun) {","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"                    firstRun \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"                    c \u003d Parser.parse(\"reminder\");","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"                    c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"                    ui.showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"                c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"                ui.print(\"Line not found\");","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"                ui.print(\"Please enter the date in this format: \" + DateFormat.STANDARD);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"            } finally {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":79}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":" * Adds a task to the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    protected String type;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    protected String desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     * Mainly for Deadline and Event tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * @param type task type.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * @param desc task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * @param date occurence/due date depending on task type.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"    public AddCommand(String type, String desc, LocalDate date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"     * Mainly for ToDo tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"     * @param type task type.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"     * @param desc task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    public AddCommand(String type, String desc) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        this.desc\u003d desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"     * Executes the duke.command and add a new task to the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors appending the date to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"        if (this.type \u003d\u003d \"todo\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"            tasks.add(new ToDo(this.desc));","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"        } else if (this.type \u003d\u003d \"event\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"            tasks.add(new Event(this.desc, this.date));","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"        } else if (this.type \u003d\u003d \"deadline\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"            tasks.add(new Deadline(this.desc, this.date));","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"        int index \u003d tasks.size()-1;","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"        storage.append(index + \";\" + Utility.constructInput(task));","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"        ui.print(\"New task added: \\n\\t\" + task.getStatusIconAndDesc() + \"\\n\" + (index+1) + \" tasks in your list\");","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":69}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":" * Represents an executable duke.command class to be inherited","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    /** Represents the status of the application. If True, application will be terminated */","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    public Command() {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     * @return the termination status","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"        return this.isExit;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":" * Delete a task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    protected int index;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     * @param index index of the task in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * Delete a specific task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * Set the DoAfter and DoBefore of the parent and child task to -1 (if applicable).","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if the task list is empty or task index input is out of range.","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors writing the data to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        } else if (tasks.size() \u003c\u003d this.index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Please enter a task number between 1 and \" + tasks.size());","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"            updateChildAndParent(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"            ui.print(\"Yessir! Task removed!!\\n\\t\"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"                    + tasks.get(this.index).getStatusIconAndDesc() + \"\\n\" + (tasks.size() - 1) + \" tasks to go!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"            tasks.remove(this.index);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"    private void updateChildAndParent(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        Task currentTask \u003d tasks.get(this.index);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"        if (!currentTask.isDoBeforeEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"            Task parentTask \u003d tasks.get(currentTask.getDoBefore());","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"            parentTask.setDoAfter(-1);","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"        if (!currentTask.isDoAfterEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"            Task childTask \u003d tasks.get(currentTask.getDoAfter());","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"            childTask.setDoBefore(-1);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":61}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":" * Sets a task to completed/done status.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    protected int index;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     * @param index index of the task in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * Sets a specific task to completed/done and remind users that they can start on the next task that (if applicable)","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if there are no task in the list, task index input is out of range, task is already","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"     * in completed status or the parent task is not done.","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors updating the specific line of data in the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        } else if (tasks.size() \u003c\u003d index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Please enter a task number between 1 and \" + tasks.size());","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        } else if (tasks.get(index).getIsDone()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Task is already done!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"            Task currentTask \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"            currentTask.markAsDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            String input \u003d \"One task off the list!\\n\\t\" + currentTask.getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"            if (!currentTask.isDoBeforeEmpty() \u0026\u0026 !tasks.get(currentTask.getDoBefore()).getIsDone()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(\"You need to complete the parent task before completing this task!\\n\\t\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"                        \"Parent task: \" + tasks.get(currentTask.getDoBefore()).getStatusIconAndDesc());","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"            if (!currentTask.isDoAfterEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"                Task childTask \u003d tasks.get(currentTask.getDoAfter());","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"                input +\u003d \"\\nYou can now start on the next task!\\n\\t\" + childTask.getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"            storage.updateLine(index, index + \";\" + Utility.constructInput(tasks.get(index)));","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"            ui.print(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":59}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":" * Terminates the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"     * Executes the duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"        ui.showEnd();","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":" * Display list of tasks based on user input task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    protected String keyword;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     * @param input user input task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"        this.keyword \u003d input;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"     * Executes the duke.command to find the corresponding task in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if task list is empty or there are no tasks with date equals to the user input date.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        String input \u003d  getListByDesc(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"        input \u003d Messages.LIST_HEADER + input;","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        ui.print(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    private String getListByDesc (TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"            if (tasks.get(i).getDesc().matches(\".*\" + this.keyword + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"                input +\u003d \"\\t\" + (i+1) + \". \"+ tasks.get(i).getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":48}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":" * When user input/duke.command is not taken into account in the Parser.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    public UnknownCommand() {}","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"     * Executes the duke.command and prints a response.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"        ui.showUnknown();","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":23}},{"path":"src/main/java/duke/command/ViewAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":" * Display the list of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"public class ViewAllCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    public ViewAllCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * Executes the duke.command and display all tasks in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if task list is empty","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"        String input \u003d Messages.LIST_HEADER;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"        input +\u003d getAll(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"        ui.print(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    private String getAll(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"            input +\u003d \"\\t\" + (i + 1) + \". \" + tasks.get(i).getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":41}},{"path":"src/main/java/duke/command/ViewByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":" * Display list of task based on a user input date.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"public class ViewByDateCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     * @param date user input date","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    public ViewByDateCommand(LocalDate date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     * Executes the duke.command and tasks with date equals to the user input date.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if task list is empty or there are no tasks with date equals to the user input date.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        String input \u003d  getListByDate(tasks, this.date);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        input \u003d Messages.LIST_HEADER + input;","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        ui.print(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"    private String getListByDate(TaskList tasks, LocalDate date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"            if (tasks.get(i).getType() \u003d\u003d \"T\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"                continue;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"            if (tasks.get(i).getDate().equals(date)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"                input +\u003d \"\\t\" + (i+1) + \". \"+ tasks.get(i).getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":53}},{"path":"src/main/java/duke/command/ViewByStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":" * Display list of pending tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"public class ViewByStatusCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    public ViewByStatusCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * Executes the duke.command and display a list of tasks that are still not completed/done.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if task list is empty or there are no tasks with status (isDone) equals to false.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        String input \u003d getPending(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"        input \u003d Messages.LIST_HEADER + input;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"        ui.print(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    private String getPending(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"            if (!tasks.get(i).getIsDone()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"                input +\u003d \"\\t\" + (i+1) + \". \"+ tasks.get(i).getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":42}},{"path":"src/main/java/duke/command/ViewByUpcomingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import java.time.Period;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":" * Display list of upcoming tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"public class ViewByUpcomingCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    public ViewByUpcomingCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     * Executes the duke.command and display a list of deadlines and events that are due today, tomorrow and overdue.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if there are no tasks in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"        String input \u003d getUpcoming(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        ui.print(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    private String getUpcoming(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        String dueToday \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        String dueTmr \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        String overdue \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"            if (task.getType() \u003d\u003d \"T\" || task.getIsDone()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"                continue;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            int dateDiff \u003d Period.between(today, task.getDate()).getDays();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"            if (dateDiff \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"                dueToday +\u003d \"\\t\" + (i+1) + \". \"+ task.getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"            } else if (dateDiff \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"                dueTmr +\u003d \"\\t\" + (i+1) + \". \"+ task.getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"            } else if (dateDiff \u003c 0 \u0026\u0026 task.getType() \u003d\u003d \"D\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"                overdue +\u003d \"\\t\" + (i+1) + \". \"+ task.getStatusIconAndDesc() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"        if (dueToday.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"            input +\u003d \"Today\u0027s deadline and events:\\n\" + dueToday;","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"        if (dueTmr.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"            input +\u003d \"\\nTomorrow\u0027s deadline and events:\\n\" + dueTmr;","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"        if (overdue.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"            input +\u003d \"\\nOverdue deadlines:\\n\" + overdue;","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"            input \u003d \"YAY!! Nothing too urgent at the moment!\";","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":70}},{"path":"src/main/java/duke/others/DateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":" * Represents the different date format to be used.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"public class DateFormat {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"    public static final String EVENT_AND_DEADLINE \u003d \"dd MMM yyyy\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"    public static final String STANDARD \u003d \"yyyy-mm-dd\";","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":9}},{"path":"src/main/java/duke/others/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":" * Duke-specific error handler.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"        super(err);","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":10}},{"path":"src/main/java/duke/others/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"public class Keyword {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"    public static final String ADD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"    public static final String ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"    public static final String ADD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"    public static final String VIEW_BY_DATE \u003d \"list date\";","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"    public static final String EXIT_1 \u003d \"bb\";","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    public static final String EXIT_2 \u003d \"bye\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    public static final String VIEW_BY_STATUS_1 \u003d \"pending\";","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    public static final String VIEW_BY_STATUS_2 \u003d \"list pending\";","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    public static final String VIEW_ALL \u003d \"list\";","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    public static final String REMINDER \u003d \"reminder\";","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":17}},{"path":"src/main/java/duke/others/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":" * Common messages used by methods in different classes.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"public class Messages {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_HEADER \u003d \"Yessir! Here is the list!\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_EMPTY \u003d \"No tasks in the requested list!\";","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":9}},{"path":"src/main/java/duke/others/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":" * Other helpful methods used in other classes.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"public class Utility {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"     * Checks if the string contains only numeric characters.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"     * @param s input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"     * @return true if all characters are numeric.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    public static boolean isNumber(String s) {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"            if (Character.isDigit(s.charAt(i)) \u003d\u003d false)","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"                return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"        return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * Concatenate the task attributes into a single string. Attributes are delimited by \";\".","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * @param task task object","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     * @return a concatenated string of the task attributes","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"    public static String constructInput(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        if (taskType \u003d\u003d \"D\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"            input \u003d taskType + \";\" + task.getIsDone() + \";\" + task.getDesc() + \";\" + ((Deadline) task).getDate() +","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"                    \";\" + task.getDoAfter() + \";\" + task.getDoBefore();","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        } else if (taskType \u003d\u003d \"E\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"            input \u003d taskType + \";\" + task.getIsDone() + \";\" + task.getDesc() + \";\" + ((Event) task).getDate() +","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"                    \";\" + task.getDoAfter() + \";\" + task.getDoBefore();","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"            input \u003d taskType + \";\" + task.getIsDone() + \";\" + task.getDesc() + \";\" + \";\" + task.getDoAfter() +","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"                    \";\" + task.getDoBefore();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":46}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.Keyword;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"public class Parser {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_EXIT_1 \u003d Keyword.EXIT_1;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_EXIT_2 \u003d Keyword.EXIT_2;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_DONE \u003d Keyword.DONE;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_DELETE \u003d Keyword.DELETE;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_TODO \u003d Keyword.ADD_TODO;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_DEADLINE \u003d Keyword.ADD_DEADLINE;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_EVENT \u003d Keyword.ADD_EVENT;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_LIST_DATE \u003d Keyword.VIEW_BY_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_LIST \u003d Keyword.VIEW_ALL;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_PENDING_1 \u003d Keyword.VIEW_BY_STATUS_1;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_PENDING_2 \u003d Keyword.VIEW_BY_STATUS_2;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_FIND \u003d Keyword.FIND;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    public static final String KEYWORD_REMINDER \u003d Keyword.REMINDER;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    public static final String ERR_NOT_A_INT \u003d \"Please enter an integer\";","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     * Parses user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    public Parser() {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"     * Parses user input into duke.command for execution.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"     * @return the duke.command based on the user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    public static Command parse(String input) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        checkForDelimiter(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        String keyword \u003d getKeyword(input.trim());","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        String parameter;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        String desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        String date;","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        switch (keyword) {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"            case (KEYWORD_EXIT_1):","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"            case (KEYWORD_EXIT_2):","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"            case (KEYWORD_LIST):","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"                return new ViewAllCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_PENDING_1):","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_PENDING_2):","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"                return new ViewByStatusCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_LIST_DATE):","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"                date \u003d getCleanDateStr(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"                return new ViewByDateCommand(LocalDate.parse(date));","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_FIND):","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"                parameter \u003d removeKeyword(input, KEYWORD_FIND).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"                if (parameter.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"                    throw new DukeException(\"Please enter a parameter after \\\"find\\\"\");","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"                return new FindCommand(parameter);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_REMINDER):","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"                return new ViewByUpcomingCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_DONE):","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"                parameter \u003d removeKeyword(input, KEYWORD_DONE);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"                if (Utility.isNumber(parameter)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"                    return new DoneCommand( Integer.parseInt(parameter) - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"                } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"                    throw new DukeException(ERR_NOT_A_INT);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_DELETE):","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"                parameter \u003d removeKeyword(input, KEYWORD_DELETE);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"                if (Utility.isNumber(parameter)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"                    return new DeleteCommand( Integer.parseInt(parameter) - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"                } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"                    throw new DukeException(ERR_NOT_A_INT);","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_DEADLINE):","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_EVENT):","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"                parameter \u003d removeKeyword(input, keyword);","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"                checkDesc(parameter);","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"                date \u003d getCleanDateStr(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"                LocalDate dateLocal \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"                desc \u003d parameter.substring(0, parameter.lastIndexOf(\"/\")).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"                return new AddCommand(keyword, desc, dateLocal);","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"            case(KEYWORD_TODO):","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"                desc \u003d removeKeyword(input, keyword);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"                checkDesc(desc);","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"                return new AddCommand(keyword, desc);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"        return new UnknownCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"     * Get keyword of the duke.command based on the user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"     * @return keyword of the duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"    private static String getKeyword(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"        if (input.matches(KEYWORD_DONE + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"spencernah"},"content":"            return KEYWORD_DONE;","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"spencernah"},"content":"        else if (input.matches(KEYWORD_DELETE + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"spencernah"},"content":"            return KEYWORD_DELETE;","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"spencernah"},"content":"        else if (input.matches(KEYWORD_DEADLINE + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"spencernah"},"content":"            return KEYWORD_DEADLINE;","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"spencernah"},"content":"        else if (input.matches(KEYWORD_EVENT + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"spencernah"},"content":"            return KEYWORD_EVENT;","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"spencernah"},"content":"        else if (input.matches(KEYWORD_TODO + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"spencernah"},"content":"            return KEYWORD_TODO;","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"spencernah"},"content":"        else if (input.matches(KEYWORD_LIST_DATE + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"spencernah"},"content":"            return KEYWORD_LIST_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"spencernah"},"content":"        else if (input.matches(KEYWORD_FIND + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"spencernah"},"content":"            return KEYWORD_FIND;","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"spencernah"},"content":"     * Remove keyword to get the duke.command parameters (if applicable).","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"spencernah"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"spencernah"},"content":"     * @param keyword duke.command keyword.","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"spencernah"},"content":"     * @return duke.command parameters.","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"spencernah"},"content":"    private static String removeKeyword(String input, String keyword) {","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"spencernah"},"content":"        return input.replace(keyword, \"\").trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"spencernah"},"content":"     * Checks if user has input a task description when entering a create task duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"spencernah"},"content":"     * @param param duke.command parameter.","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if task description is missing from the user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"spencernah"},"content":"    private static void checkDesc(String param) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"spencernah"},"content":"        if (param.length() \u003d\u003d 0 || param.charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Task description cannot be empty!!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"spencernah"},"content":"     * Checks if user has input a date when entering a create Event/Deadline duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"spencernah"},"content":"     * @param param duke.command parameter.","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if user did not lead the date with a \"/\" character, did not enter a date or enter an","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"spencernah"},"content":"     * invalid date format (accepted format \u003d \"yyyy-mm-dd\" or \"yyyy-m-d\").","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"spencernah"},"content":"    private static void checkDate(String param) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"spencernah"},"content":"        int delimiterIndex \u003d param.lastIndexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"spencernah"},"content":"        if (delimiterIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Please enter a date and lead it with \\\"/\\\"\");","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"spencernah"},"content":"        String date \u003d param.substring(delimiterIndex + 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"spencernah"},"content":"        if (date.length() \u003d\u003d 0)  {","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Please include a date after the \\\"/\\\" :)\");","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"spencernah"},"content":"        if (date.lastIndexOf(\"-\") \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Duke reads date in \" + DateFormat.STANDARD +","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"spencernah"},"content":"                    \". Please separate your dates with \\\"-\\\" (eg. 2019-08-15)\");","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"spencernah"},"content":"     * Condenses all the methods that needs to be performed to ensure that the date input is correct and return the","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"spencernah"},"content":"     * correct date format (if applicable).","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"spencernah"},"content":"     * @param input full user input string..","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"spencernah"},"content":"     * @return date string in the correct format (yyyy-mm-dd).","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException from checkDate() method.","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"spencernah"},"content":"    private static String getCleanDateStr(String input) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"spencernah"},"content":"        checkDate(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"spencernah"},"content":"        input \u003d input.substring(input.lastIndexOf(\"/\") + 1).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"spencernah"},"content":"        input \u003d changeDateFormat(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"spencernah"},"content":"     * Change the date parameter into a format that can be parsed to LocalDate.","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"spencernah"},"content":"     * @param date date parameter.","lastModifiedDate":"2021-09-27"},{"lineNumber":194,"author":{"gitId":"spencernah"},"content":"     * @return a date string in \"yyyy-mm-dd\" format.","lastModifiedDate":"2021-09-27"},{"lineNumber":195,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"spencernah"},"content":"    private static String changeDateFormat (String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"spencernah"},"content":"        String day \u003d date.substring(date.lastIndexOf(\"-\")+1);","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"spencernah"},"content":"        if (day.length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":199,"author":{"gitId":"spencernah"},"content":"            day \u003d \"0\" + day;","lastModifiedDate":"2021-09-27"},{"lineNumber":200,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"spencernah"},"content":"        String month \u003d date.substring(date.indexOf(\"-\")+1, date.lastIndexOf(\"-\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":202,"author":{"gitId":"spencernah"},"content":"        if (month.length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"spencernah"},"content":"            month \u003d \"0\" + month;","lastModifiedDate":"2021-09-27"},{"lineNumber":204,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":205,"author":{"gitId":"spencernah"},"content":"        String year \u003d date.substring(0,4);","lastModifiedDate":"2021-09-27"},{"lineNumber":206,"author":{"gitId":"spencernah"},"content":"        return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-09-27"},{"lineNumber":207,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"spencernah"},"content":"     * Ensure that the users do not input any delimiter character","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":212,"author":{"gitId":"spencernah"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":213,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if there the delimiter character is used in input","lastModifiedDate":"2021-09-27"},{"lineNumber":214,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":215,"author":{"gitId":"spencernah"},"content":"    private static void checkForDelimiter(String input) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":216,"author":{"gitId":"spencernah"},"content":"        if (input.matches(\".*;.*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":217,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Please refrain from using the character \\\";\\\"\");","lastModifiedDate":"2021-09-27"},{"lineNumber":218,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":219,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":220,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":220}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":" * Represents the file and its corresponding methods used to store task list in data.txt.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    protected String path;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    protected String data;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    protected boolean isEmpty;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     * The file used to store task list data.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * @param filePath is the directory of the data.txt file.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        this.data \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        this.isEmpty \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"     * Loads the data from this storage and returns it","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"     * @return the data in String.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"     * @throws FileNotFoundException if the path is not valid","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    public String load() throws FileNotFoundException {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        File f \u003d new File(this.path);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            this.data \u003d this.data + s.nextLine() + System.lineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        if (this.data.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"            this.isEmpty \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        return this.data;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"     * Save Task List data to storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"     * @param tasks is the Task List to be saved.","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors writing the data to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        FileWriter writer \u003d new FileWriter(new File(this.path));","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"            String input \u003d index + \";\" + Utility.constructInput(tasks.get(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"            writer.write(input + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"            index++;","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"        writer.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"     * Appends data to the storage file. Used mainly when new tasks are created.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"     * @param textToAppend is the task data in String","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors writing the file","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"    public void append(String textToAppend) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"        FileWriter fw \u003d new FileWriter(this.path, true);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"        fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"        fw.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"     * Updates a specific line of data (a.k.a task data). Used mainly when changes are made to existing tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"     * @param n is the index of the record.","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"     * @param input is the new data.","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors writing the file.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"    public void updateLine(int n, String input) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"        Path path \u003d Paths.get(this.path);","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"        String content \u003d new String(Files.readAllBytes(path));","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"        String line \u003d readLine(n);","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"        content \u003d content.replaceAll(line, input);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"        Files.write(path, content.getBytes(StandardCharsets.UTF_8));","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"     * Read a specific line of data/task data in the storage.","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"     * @param n is the index of the record.","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"     * @return a specific line of data/task data.","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if the line of data is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"    private String readLine(int n) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"        return Files.readAllLines(Paths.get(this.path)).get(n);","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":109}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":" * A type of task where task is tied to a due date","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    /** Represents the due date of the task */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    public Deadline(String desc, LocalDate date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"        super(desc, \"D\");","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    /** @return the date of the event. Format \u003d \"yyyy-mm-dd\" */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"        return this.date;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    /** @return the date of the event. Format \u003d \"dd mm yyyy\" */","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(DateFormat.EVENT_AND_DEADLINE));","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"    /** @return the task type, task status (as a icon), task description and task date (in \"dd mm yyyy\" format). */","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"    public String getStatusIconAndDesc() {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc + \" (by: \" + getFormattedDate() + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":" * A type of task where task is tied to a occurrence date","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    /** Represents the occurrence date of the event*/","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    public Event(String desc, LocalDate date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"        super(desc, \"E\");","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    /** @return the date of the event. Format \u003d \"yyyy-mm-dd\" */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"        return this.date;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    /** @return the date of the event. Format \u003d \"dd mm yyyy\" */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(DateFormat.EVENT_AND_DEADLINE));","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"    /** @return the task type, task status (as a icon), task description and task date (in \"dd mm yyyy\" format). */","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"    public String getStatusIconAndDesc() {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc + \" (at: \" + getFormattedDate() + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"/** Represents a generic task. */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"public class Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"    protected String desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"    /** Represents the status of the task. */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"    protected String type;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    protected int doAfter \u003d -1;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    protected int doBefore \u003d-1;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"     * @param desc is the description of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     * @param type is the type of the task (deadline, event or todo).","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    public Task(String desc, String type) {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     * Sets the task status based on the param.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * @param status used to overwrite the task status.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"     * Sets the doAfter task based on the param.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"     * @param index task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"    public void setDoAfter(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        this.doAfter \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"     * Sets the doBefore task based on the param.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"     * @param index task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"    public void setDoBefore(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        this.doBefore \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"     * Returns the task status (isDone) in the form of an icon.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"     * @return a tick or cross icon.","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"            return \"\\u2713\";","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"            return \"\\u2718\";","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"    /** @return task description. */","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"    public String getDesc() {","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"        return this.desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"     * Returns the task status.","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"     * @return true if task is completed.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"    /** @return the task type, task status (as a icon) and task description. */","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"    public String getStatusIconAndDesc() {","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"    /** @return the task type (deadline, event or todo. */","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"    public String getType() {","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"        return this.type;","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"     * Used mainly for subclasses like event and deadline.","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"     * @return null by default.","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"        return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"     * @return doAfter task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"    public int getDoAfter() {","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"        return this.doAfter;","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"     * @return doBefore task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"spencernah"},"content":"    public int getDoBefore() {","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"        return this.doBefore;","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"spencernah"},"content":"    /** Change the task status to complete. */","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"spencernah"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"spencernah"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"spencernah"},"content":"     * @return true if there is no Do After task.","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"spencernah"},"content":"    public boolean isDoAfterEmpty() {","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"spencernah"},"content":"        return this.doAfter \u003d\u003d -1;","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"spencernah"},"content":"     * @return true if there is no Do Before task.","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"spencernah"},"content":"    public boolean isDoBeforeEmpty() {","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"spencernah"},"content":"        return this.doBefore \u003d\u003d -1;","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":130}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import java.io.StringReader;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":" * Represents the list used to store the various tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class TaskList {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    protected static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * Create a task list using existing data.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     * @param input is a String of task data.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors writing the file.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     * @throws DateTimeParseException if the date format incorrect.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    public TaskList(String input) throws IOException, DateTimeParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"        this.taskList \u003d new ArrayList();","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        BufferedReader reader \u003d new BufferedReader(new StringReader(input));","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"        String line \u003d null;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"            String[] delimited \u003d line.split(\";\");","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"            if (\"T\".equals(delimited[1])) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"                taskList.add(new ToDo(delimited[3]));","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"            } else if (\"E\".equals(delimited[1])) {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"                taskList.add(new Event(delimited[3], LocalDate.parse(delimited[4])));","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"            } else if (\"D\".equals(delimited[1])) {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"                taskList.add(new Deadline(delimited[3], LocalDate.parse(delimited[4])));","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"            taskList.get(taskList.size() - 1).setStatus(Boolean.parseBoolean(delimited[2]));","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"            taskList.get(taskList.size() - 1).setDoAfter(Integer.parseInt(delimited[5]));","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"            taskList.get(taskList.size() - 1).setDoBefore(Integer.parseInt(delimited[6]));","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"     * Create a task list when there are no existing data.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        this.taskList \u003d new ArrayList();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"     * Check if task list is empty.","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"     * @return true if task list is empty","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"     * Get a specific task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"     * @param i is the element index of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"     * @return the task as a Task object.","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"        return taskList.get(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"     * Return the index of a task in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"     * @param task task object.","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"     * @return task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"    public int getIndex(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"        return taskList.indexOf(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"     * @return the size of the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"    public int size() {","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"     * Deletes a specific task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"     * @param i is the element index of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"    public void remove(int i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"        taskList.remove(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"     * Creates a new task.","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"     * @param task is Task object to be created.","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":102}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"/** Default type of task */","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"        super(desc, \"T\");","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":8}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":" * Text UI of the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"public class Ui {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"    protected Scanner in;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"    protected static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    protected static final String LINE \u003d \"_________________________________________________________________________\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    protected static final String MSG_END \u003d \"Oyasumi~\";","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    protected static final String MSG_GREETING \u003d \"Harrowwwwwww\\nWut iz up?\";","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    protected static final String MSG_UNKNOWN \u003d \"Sorry, I don\u0027t understand this :(\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    public Ui() {","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     * A standardised format for all prints in the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * @param input is the string to be printed.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"    public static void print(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"        input \u003d input.replace(\"\\n\", \"\\n\\t\");","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        System.out.println(\"\\t\" + input);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"     *  Prints the welcome message when application is initialised.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        System.out.println(LOGO + \"\\n\" + MSG_GREETING);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"     * Reads and return the user input","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"     * @return user input as String","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"     * Prints a single line. Used mainly as separators between commands and results.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"    public void showLine() {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"     * Prints a farewell message after application has been terminated by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"    public void showEnd() {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"        print(MSG_END);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"     * Prints the error message of an exception.","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"     * @param err is the exception","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"    public void showError(String err) {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"        print(err);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"     * Prints a message when duke.command is unknown to the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"    public void showUnknown() {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"        print(MSG_UNKNOWN);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":81}}]
