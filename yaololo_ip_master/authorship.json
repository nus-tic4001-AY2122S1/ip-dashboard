[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"     ____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"          Hello! I\u0027m Duke","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"          can I do for you?","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"     ____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"## Project description","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"This is a Java program which helps users to keep track their tasks. There are three different tasks, the program capable of keeping tack.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"- Todo: A simple todo task","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"- Deadline: A task with specific deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"- Event: A task with specific timing","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"User could also mark task as done to keep track the status of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"## User guide","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"User should interact with the software through terminal with these key-words:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"1. List - display the list of task including the status of the task status","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"2. Todo - to add a todo task","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"3. Deadline - to add a deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"4. Event - to add an event task","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"5. Done - to mark task as done","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"6. Delete - to delete a task","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"7. Find - to find tasks that matches the given search word","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"8. Bye - exit the program","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yaololo":23,"-":18}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"T|1|read book","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"D|0|return book|June 6th","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"T|0|read book","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"T|0|buy milk","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"import command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import parser.CommandParser;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import parser.DataParser;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"    public void run() {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        this.loadTasks();","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        this.ui.welcome();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"                String userCommand \u003d in.nextLine().trim();","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"                Command command \u003d new CommandParser().parse(userCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"                command.execute(this.storage, this.ui, this.tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"                isExit \u003d command.getIsExit();","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"                this.ui.print(\"Error: \" + e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"    private void loadTasks()  {","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"            String[] data \u003d this.storage.loadData();","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"            for (String line : data) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"                Command command \u003d new DataParser().parse(line);","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"                command.execute(this.storage, this.ui, this.tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"        } catch (ErrorHandler e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"            this.ui.print(e.getMessage());","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yaololo":52,"-":4}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"            this.saveData(storage, taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"            this.isExit \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"            ui.bye();","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        } catch (ErrorHandler e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(\"while exiting program: \" + e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":19}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"     * @return boolean to decide whether the program should be terminated","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    public boolean getIsExit() {return this.isExit;}","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    protected void saveData(Storage storage, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        String [] data \u003d taskList.getFileDataFormatList();","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        storage.saveData(data);","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public abstract void execute ( Storage storage, Ui ui, TaskList taskList) throws ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"yaololo":22}},{"path":"src/main/java/command/DataCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class DataCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private Task task;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public DataCommand(Task task){","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"            taskList.addItem(this.task);","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        } catch (ErrorHandler e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler( e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":24}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private String by;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    boolean status;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    public DeadlineCommand(String taskDescription, String by, boolean status)  {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        Deadline addedTodo \u003d new Deadline(this.taskDescription, this.by, this.status);","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        taskList.addItem(addedTodo);","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        this.saveData(storage, taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        ui.printTask(addedTodo.toString(), taskList.getSize());","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":28}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public DeleteCommand(String taskNumber) throws ErrorHandler{","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"            int index \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"            this.taskNumber \u003d index;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(\"while parsing task number :\" + e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        if(this.taskNumber \u003e 0 \u0026\u0026 this.taskNumber \u003c\u003d taskList.getSize()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            int deleteIndex \u003d this.taskNumber-1;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            String deletedItem \u003d taskList.getTask(deleteIndex).toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            taskList.removeItem(deleteIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            this.saveData(storage, taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"            ui.printDeletedItem(deletedItem, taskList.getSize());","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(\"In Command, \" + ErrorMessage.INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":33}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public DoneCommand(String taskNumber) throws ErrorHandler{","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"            int index \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"            this.taskNumber \u003d index;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(\"while parsing task number :\" + e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        if (this.taskNumber \u003e 0 \u0026\u0026 this.taskNumber \u003c\u003d taskList.getSize()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            taskList.setStatus(this.taskNumber - 1, true);","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            this.saveData(storage, taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            ui.printMarkedDone(taskList.getTask(this.taskNumber - 1).toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(\"In Command, \" + ErrorMessage.INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":32}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private String at;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    boolean status;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    public EventCommand(String taskDescription, String at,  boolean status)  {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        Event addedTodo \u003d new Event(this.taskDescription, this.at, this.status);","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        taskList.addItem(addedTodo);","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        this.saveData(storage, taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        ui.printTask(addedTodo.toString(), taskList.getSize());","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":28}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private String searchContent;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public FindCommand(String searchContent)  {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        this.searchContent \u003d searchContent;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList)  {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        ArrayList\u003cString\u003e filteredList \u003d taskList.findTasks(this.searchContent);","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        ui.printFoundList(filteredList);","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yaololo":21}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList)  {","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"        ui.printList(taskList.getSerializedList());","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":12}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Todo;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import taskList.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private boolean status;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    public TodoCommand(String taskDescription, boolean status)  {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        Todo addedTodo \u003d new Todo(this.taskDescription, this.status);","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        taskList.addItem(addedTodo);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        this.saveData(storage, taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        ui.printTask(addedTodo.toString(), taskList.getSize());","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":26}},{"path":"src/main/java/constant/CommandKeyWords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"public enum CommandKeyWords {","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    DONE(\"DONE\"), TODO(\"TODO\"), DEADLINE(\"DEADLINE\"), LIST(\"LIST\"), EVENT(\"EVENT\"), BYE(\"BYE\"), DELETE(\"DELETE\"), FIND(\"FIND\");","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"     * @return string which shows all available command key words","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private static String getSerializedString() { return \"DONE, TODO, DEADLINE, EVENT, LIST, BYE\"; }","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private String value;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    CommandKeyWords(String value) {","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"     * @return enum value","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public String getValue() {","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        return value;","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        return this.getValue();","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"     * @param value is an enum string for validating if the given value is valid","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"    public static CommandKeyWords getEnum(String value) throws ErrorHandler {","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        for(CommandKeyWords v : values())","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"            if(v.getValue().equalsIgnoreCase(value)) return v;","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        throw new ErrorHandler(ErrorMessage.INVALID_COMMAND + \" Please starts your command with \"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"                + getSerializedString()","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"                + \" (case insensitive)\");","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"yaololo":43}},{"path":"src/main/java/constant/ErrorMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":" * Constants for error messages","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class ErrorMessage {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TODO \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_DEADLINE \u003d \"OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_EVENT \u003d \"OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TASK_NUMBER \u003d \"OOPS!!! The task number cannot be empty.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_TASK_NUMBER \u003d \"OOPS!!! The task number is invalid.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_DEADLINE \u003d \"OOPS!!! The deadline description is invalid, missing \u0027/by\u0027.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_EVENT \u003d \"OOPS!!! The event description is invalid, missing \u0027/at\u0027.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_DATA_FORMAT \u003d \"OOPS!!! I\u0027m sorry, data from local file is in wrong format\";","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public static final String ERROR_WRITING_FILE \u003d \"OOPS!!! I\u0027m sorry, error occurred while saving data to file\";","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    public static final String ERROR_LOADING_FILE \u003d \"OOPS!!! I\u0027m sorry, error occurred while loading data from file.\";","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    public static final String ERROR_FINDING_FILE \u003d \"Setting up new storage for you.\";","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"yaololo":19}},{"path":"src/main/java/exception/ErrorHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class ErrorHandler extends  Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    public ErrorHandler(String errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"yaololo":7}},{"path":"src/main/java/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import command.*;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import constant.CommandKeyWords;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class CommandParser extends Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    private CommandKeyWords commandWord;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public Command parse(String userCommand) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        return this.parseCommand(userCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"     * @param input is a string that user key in from the terminal","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"     * @return Command class","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    private Command parseCommand(String input) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        String[] result \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        this.commandWord \u003d  CommandKeyWords.getEnum(result[0].toUpperCase());","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"                if(result.length \u003c 2) throw new ErrorHandler(\"In Parser, \" + ErrorMessage.EMPTY_DEADLINE);","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"                String[] deadlineContent \u003d result[1].split(\"/by\", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"                this.content \u003d deadlineContent[0].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"                if (deadlineContent.length \u003c 2)","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"                    throw new ErrorHandler(\"In Parser, \" + ErrorMessage.INVALID_DEADLINE);","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"                this.by \u003d deadlineContent[1].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"                return new DeadlineCommand(this.content,this.by, false);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"            case EVENT:","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"                if(result.length \u003c 2) throw new ErrorHandler(\"In Parser, \" + ErrorMessage.EMPTY_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"                String[] eventContent \u003d result[1].split(\"/at\", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"                this.content \u003d eventContent[0].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"                if (eventContent.length \u003c 2)","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"                    throw new ErrorHandler(\"In Parser, \" + ErrorMessage.INVALID_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"                this.by \u003d eventContent[1].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"                return new EventCommand(this.content, this.at,  false);","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            case TODO:","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"                if(result.length \u003c 2) throw new ErrorHandler(\"In Parser, \" + ErrorMessage.EMPTY_TODO);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"                this.content \u003d result[1].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"                return new TodoCommand(this.content,  false);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"            case DONE:","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"                if(result.length \u003c 2) throw new ErrorHandler(\"In Parser, \" + ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"                this.content \u003d result[1].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"                return new DoneCommand(this.content);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"            case DELETE:","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"                if(result.length \u003c 2) throw new ErrorHandler(\"In Parser, \" + ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"                this.content \u003d result[1].trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"                return new DeleteCommand(this.content);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"            case LIST:","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"            case FIND:","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"                if(result.length \u003c 2) throw new ErrorHandler(\"In Parser, \" + ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"yaololo"},"content":"                this.content \u003d result[1].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"yaololo"},"content":"                return new FindCommand(this.content);","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"yaololo"},"content":"            case BYE:","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"            default:","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"yaololo":73}},{"path":"src/main/java/parser/DataParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import command.*;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import task.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import task.Todo;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"public class DataParser extends Parser{","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private String taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private boolean status;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"     * @param input string which is read from a text file, in the format of \u0027D|1|return book|June 6th\u0027","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    public Command parse (String input) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        String [] data \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        if(data.length \u003c 1) throw new ErrorHandler(ErrorMessage.INVALID_DATA_FORMAT);","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"            this.taskType \u003d data[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            this.status \u003d data[1].equals(\"1\");","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            this.content \u003d data[2];","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            if(this.taskType.equals(\"D\")){","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"                this.by \u003d data[3];","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"                return new DataCommand(new Deadline(this.content, this.by, this.status));","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"            if(this.taskType.equals(\"E\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"                this.at \u003d data[3];","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"                return new DataCommand(new Event(this.content, this.at, this.status));","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"            return new DataCommand(new Todo(this.content, this.status));","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_DATA_FORMAT);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"yaololo":42}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import command.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public abstract class Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    protected String content \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    protected String by \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    protected String at \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    public abstract Command parse(String userInput) throws ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"yaololo":12}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import java.io.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"public class Storage {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private final Path root \u003d FileSystems.getDefault().getPath(\"\").toAbsolutePath();","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private String filePath;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.filePath \u003d \"/\" +filePath;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"     * This method is used to load data from a local file and parse the format then save as a List of task","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"     * @return array of strings tha is loaded from file","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    public String [] loadData () throws ErrorHandler  {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"            File file\u003dnew File(root + this.filePath);    //creates a new file instance","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            FileReader fr\u003dnew FileReader(file);   //reads the file","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"            BufferedReader br\u003dnew BufferedReader(fr);  //creates a buffering character input stream","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"            String line;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"            while((line\u003dbr.readLine())!\u003dnull) {","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"                data.add(line);","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"            fr.close();    //closes the stream and release the resources","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.ERROR_FINDING_FILE);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.ERROR_LOADING_FILE);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"        return data.toArray(new String[0]);","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"     * Save list of task into local file","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"    public void saveData(String [] data) throws ErrorHandler {","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"            FileWriter fileWriter \u003d new FileWriter(root + this.filePath);","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"            for(String line: data) {","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"                fileWriter.write(line);","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"                fileWriter.write(\"\\n\");","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.ERROR_WRITING_FILE);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"yaololo":66}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    protected String by;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    public Deadline(String description, String by, boolean status) {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"        super(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"        this.setStatus(status);","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        return \"D\"+ \"|\" + status + \"|\" + this.description + \"|\" +this.by;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"yaololo":22}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    protected String at;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    public Event(String description,  String at,  boolean status) {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"        super(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"        this.setStatus(status);","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + at + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        return \"E\"+ \"|\" + status + \"|\" + this.description + \"|\" +this.at;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"yaololo":22}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    protected String description;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        return this.description;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public void setStatus(boolean flag) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        this.isDone \u003d flag;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"    public abstract String toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"    public abstract String toDataFormat();","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"yaololo":27}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    public Todo(String description, boolean status) {","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"        super(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"        this.setStatus(status);","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"     * @return string which is in a readable format for printing to user","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        return \"[T]\" +  \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"     * @return string which is in a specific format to save to local file","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        return \"T\"+ \"|\" + status + \"|\" + this.description;","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"yaololo":25}},{"path":"src/main/java/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package taskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":" * Serve as a store for saving user command","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"public class TaskList {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"     * A list of different task type","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"     * @param task is a type of task, could be Event, Deadline","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"    public void addItem (Task task) throws ErrorHandler {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        this.list.add(task);","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"    public ArrayList\u003cTask\u003e getList() { return this.list; }","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"     * @param index remove data from the list t given index","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"    public void removeItem (int index) {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        this.list.remove(index);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"  ","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"     * @return list of string which is representing all tasks information in a readable string format.","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"     * For printing purpose","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"    public ArrayList\u003cString\u003e getSerializedList () {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            taskList.add(task.toString());","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"        return taskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"     * @return list of task in a format which is ready for saving to local file","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"    public String [] getFileDataFormatList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"        ArrayList\u003cString\u003e dataLine \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"        for (Task task: this.list) {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"            dataLine.add(task.toDataFormat());","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"        return dataLine.toArray(new String[0]);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"yaololo"},"content":"        return this.list.size();","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"yaololo"},"content":"    public void setStatus(int index, boolean status) {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"        this.list.get(index).setStatus(true);","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"yaololo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"yaololo"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"yaololo"},"content":"     * @param word is used to search for tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"yaololo"},"content":"     * @return serialized array of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"yaololo"},"content":"    public ArrayList\u003cString\u003e findTasks (String word) {","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"yaololo"},"content":"        ArrayList\u003cString\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"yaololo"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"yaololo"},"content":"            if (!task.getDescription().contains(word)) continue;","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"yaololo"},"content":"            filteredTasks.add(task.toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"yaololo"},"content":"        return filteredTasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yaololo":90}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package ui;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":" * Ui class is only for printing message.","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class Ui {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    private String indentation \u003d \"          \";","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    public  void  welcome () {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"        print(\"Hello! I\u0027m Duke\\n\" +  indentation + \"can I do for you?\");","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    public void bye () {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    public  void printTask(String message, int noTask) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        System.out.println(indentation + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        System.out.println(indentation + message);","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        System.out.println(indentation + \"Now you have \" + noTask + \" tasks in the list.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"    public void print(String message) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        System.out.println(indentation + message);","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    ","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"    public void printList(ArrayList\u003cString\u003e list) {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"        System.out.println(indentation + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        for (String listItem : list) {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"            System.out.println(indentation + index + \". \" + listItem);","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"            index +\u003d1;","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"    public void printFoundList(ArrayList\u003cString\u003e list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"        System.out.println(indentation + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"        for (String listItem : list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"            System.out.println(indentation + index + \". \" + listItem);","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"            index +\u003d1;","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"    public void printMarkedDone(String message){","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"      \" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"        System.out.println(indentation + message);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"    private void printLine() {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"     ____________________________________________________________\");","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"    public void printDeletedItem(String message, int numberOfTask) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"      \" + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"        System.out.println(indentation + message);","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"      \" + \"Now you have \" + numberOfTask + \" tasks in the list.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"yaololo"},"content":"        printLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yaololo":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"todo","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"deadline","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"deadline return book","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"event meeting with John","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"done 1","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"done1","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"todo read book","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"deadline return book /by 24/Spt","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"event meeting with John /at 3pm 24/Sept","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"list","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"done 1","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"done 3","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"list","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"bye","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"yaololo":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"echo ********** Done **********","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"FC /N ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"yaololo":3,"-":19}}]
